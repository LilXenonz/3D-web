var Qb=Object.defineProperty;var J_=s=>{throw TypeError(s)};var eS=(s,e,t)=>e in s?Qb(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var Yt=(s,e,t)=>eS(s,typeof e!="symbol"?e+"":e,t),Yh=(s,e,t)=>e.has(s)||J_("Cannot "+t);var dt=(s,e,t)=>(Yh(s,e,"read from private field"),t?t.call(s):e.get(s)),pi=(s,e,t)=>e.has(s)?J_("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t),mi=(s,e,t,n)=>(Yh(s,e,"write to private field"),n?n.call(s,t):e.set(s,t),t),Q_=(s,e,t)=>(Yh(s,e,"access private method"),t);import{a as tS,c as Nt,b as Le,t as ot}from"../chunks/BmaUlAXQ.js";import{i as nS}from"../chunks/BVdxql5x.js";import{T as Tx,r as Gt,h as su,aq as iS,v as Zf,ar as ev,_ as wx,$ as of,c as pc,s as Or,a2 as tv,as as Yl,at as rr,a6 as af,o as Ws,d as Ar,P as nv,O as iv,au as rv,q as rS,a0 as Jo,a1 as tc,am as sS,F as v,ac as oS,e as aS,l as Ex,S as cS,av as Zh,t as cf,aw as lS,ax as uS,k as hS,ay as dS,x as Ax,az as fS,aA as pS,a as mS,E as gS,aB as _S,g as vS,n as yS,a3 as xS,C as Kf,aC as MS,aD as bS,aE as SS,aF as TS,a7 as In,aG as Cx,a4 as Rx,ao as Px,aH as di,aI as fi,z as vi,A as sr,ap as Fn,p as Fc,y as ze,u as Bc,L as Ir,an as to,M as Dr,w as cs,N,K as Zl,aJ as wS,aK as ES}from"../chunks/D8z1wHcR.js";import{g as lf,w as mn,d as Jf,a as vs,o as Ix,r as Dx}from"../chunks/Y52aC5kg.js";import{s as ls}from"../chunks/Boz4WS4N.js";import{r as zc,i as Cr,b as Qo,s as Qf,p as wn,a as Lx,d as tr,c as I,e as Kh,m as Jh}from"../chunks/GF16kLMK.js";import{b as AS,c as CS,d as RS,e as PS,n as IS,f as DS}from"../chunks/DY6dlFk0.js";function LS(s,e){if(e){const t=document.body;s.autofocus=!0,Tx(()=>{document.activeElement===t&&s.focus()})}}const Qh=0,Jc=1,ed=2;function OS(s,e,t,n,i){Gt&&su();var r=s,o=iS(),a=rS,c=tv,l,u,h,d=(o?rr:af)(void 0),f=(o?rr:af)(void 0),p=!1;function _(m,b){p=!0,b&&(nv(g),iv(g),rv(a));try{m===Qh&&t&&(l?Jo(l):l=Ws(()=>t(r))),m===Jc&&n&&(u?Jo(u):u=Ws(()=>n(r,d))),m===ed&&i&&(h?Jo(h):h=Ws(()=>i(r,f))),m!==Qh&&l&&tc(l,()=>l=null),m!==Jc&&u&&tc(u,()=>u=null),m!==ed&&h&&tc(h,()=>h=null)}finally{b&&(rv(null),iv(null),nv(null),sS())}}var g=Zf(()=>{if(c===(c=e()))return;let m=Gt&&ev(c)===(r.data===wx);if(m&&(r=of(),pc(r),Or(!1),m=!0),ev(c)){var b=c;p=!1,b.then(M=>{b===c&&(Yl(d,M),_(Jc,!0))},M=>{if(b===c&&(Yl(f,M),_(ed,!0),!i))throw f.v}),Gt?t&&(l=Ws(()=>t(r))):Tx(()=>{p||_(Qh,!0)})}else Yl(d,c),_(Jc,!1);return m&&Or(!0),()=>c=tv});Gt&&(r=Ar)}function NS(s,e,t,n){for(var i=[],r=e.length,o=0;o<r;o++)uS(e[o].e,i,!0);var a=r>0&&i.length===0&&t!==null;if(a){var c=t.parentNode;hS(c),c.append(t),n.clear(),Jr(s,e[0].prev,e[r-1].next)}dS(i,()=>{for(var l=0;l<r;l++){var u=e[l];a||(n.delete(u.k),Jr(s,u.prev,u.next)),Ax(u.e,!a)}})}function US(s,e,t,n,i,r=null){var o=s,a={flags:e,items:new Map,first:null};Gt&&su();var c=null,l=!1,u=oS(()=>{var h=t();return cS(h)?h:h==null?[]:Ex(h)});Zf(()=>{var h=v(u),d=h.length;if(l&&d===0)return;l=d===0;let f=!1;if(Gt){var p=o.data===wx;p!==(d===0)&&(o=of(),pc(o),Or(!1),f=!0)}if(Gt){for(var _=null,g,m=0;m<d;m++){if(Ar.nodeType===8&&Ar.data===aS){o=Ar,f=!0,Or(!1);break}var b=h[m],M=n(b,m);g=Ox(Ar,a,_,null,b,M,m,i,e,t),a.items.set(M,g),_=g}d>0&&pc(of())}Gt||FS(h,a,o,i,e,n,t),r!==null&&(d===0?c?Jo(c):c=Ws(()=>r(o)):c!==null&&tc(c,()=>{c=null})),f&&Or(!0),v(u)}),Gt&&(o=Ar)}function FS(s,e,t,n,i,r,o){var a=s.length,c=e.items,l=e.first,u=l,h,d=null,f=[],p=[],_,g,m,b;for(b=0;b<a;b+=1){if(_=s[b],g=r(_,b),m=c.get(g),m===void 0){var M=u?u.e.nodes_start:t;d=Ox(M,e,d,d===null?e.first:d.next,_,g,b,n,i,o),c.set(g,d),f=[],p=[],u=d.next;continue}if(BS(m,_,b),(m.e.f&Zh)!==0&&Jo(m.e),m!==u){if(h!==void 0&&h.has(m)){if(f.length<p.length){var x=p[0],A;d=x.prev;var C=f[0],D=f[f.length-1];for(A=0;A<f.length;A+=1)sv(f[A],x,t);for(A=0;A<p.length;A+=1)h.delete(p[A]);Jr(e,C.prev,D.next),Jr(e,d,C),Jr(e,D,x),u=x,d=D,b-=1,f=[],p=[]}else h.delete(m),sv(m,u,t),Jr(e,m.prev,m.next),Jr(e,m,d===null?e.first:d.next),Jr(e,d,m),d=m;continue}for(f=[],p=[];u!==null&&u.k!==g;)(u.e.f&Zh)===0&&(h??(h=new Set)).add(u),p.push(u),u=u.next;if(u===null)continue;m=u}f.push(m),d=m,u=m.next}if(u!==null||h!==void 0){for(var O=h===void 0?[]:Ex(h);u!==null;)(u.e.f&Zh)===0&&O.push(u),u=u.next;var w=O.length;if(w>0){var E=null;NS(e,O,E,c)}}cf.first=e.first&&e.first.e,cf.last=d&&d.e}function BS(s,e,t,n){Yl(s.v,e),s.i=t}function Ox(s,e,t,n,i,r,o,a,c,l){var u=(c&fS)!==0,h=(c&pS)===0,d=u?h?af(i):rr(i):i,f=(c&lS)===0?o:rr(o),p={i:f,v:d,k:r,a:null,e:null,prev:t,next:n};try{return p.e=Ws(()=>a(s,d,f,l),Gt),p.e.prev=t&&t.e,p.e.next=n&&n.e,t===null?e.first=p:(t.next=p,t.e.next=p.e),n!==null&&(n.prev=p,n.e.prev=p.e),p}finally{}}function sv(s,e,t){for(var n=s.next?s.next.e.nodes_start:t,i=e?e.e.nodes_start:t,r=s.e.nodes_start;r!==n;){var o=mS(r);i.before(r),r=o}}function Jr(s,e,t){e===null?s.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function zS(s,e,t,n,i,r){let o=Gt;Gt&&su();var a,c,l=null;Gt&&Ar.nodeType===1&&(l=Ar,su());var u=Gt?Ar:s,h;Zf(()=>{const d=e()||null;var f=d==="svg"?_S:null;d!==a&&(h&&(d===null?tc(h,()=>{h=null,c=null}):d===c?Jo(h):Ax(h)),d&&d!==c&&(h=Ws(()=>{if(l=Gt?l:f?document.createElementNS(f,d):document.createElement(d),tS(l,l),n){Gt&&AS(d)&&l.append(document.createComment(""));var p=Gt?vS(l):l.appendChild(yS());Gt&&(p===null?Or(!1):pc(p)),n(l,p)}cf.nodes_end=l,u.before(l)})),a=d,a&&(c=a))},gS),o&&(Or(!0),pc(u))}function kS(s,e,t){xS(()=>{var n=Kf(()=>e(s,t==null?void 0:t())||{});if(n!=null&&n.destroy)return()=>n.destroy()})}function Nx(s){var e,t,n="";if(typeof s=="string"||typeof s=="number")n+=s;else if(typeof s=="object")if(Array.isArray(s)){var i=s.length;for(e=0;e<i;e++)s[e]&&(t=Nx(s[e]))&&(n&&(n+=" "),n+=t)}else for(t in s)s[t]&&(n&&(n+=" "),n+=t);return n}function VS(){for(var s,e,t=0,n="",i=arguments.length;t<i;t++)(s=arguments[t])&&(e=Nx(s))&&(n&&(n+=" "),n+=e);return n}function uf(s){return typeof s=="object"?VS(s):s??""}const ov=[...` 	
\r\fÂ \v\uFEFF`];function HS(s,e,t){var n=s==null?"":""+s;if(t){for(var i in t)if(t[i])n=n?n+" "+i:i;else if(n.length)for(var r=i.length,o=0;(o=n.indexOf(i,o))>=0;){var a=o+r;(o===0||ov.includes(n[o-1]))&&(a===n.length||ov.includes(n[a]))?n=(o===0?"":n.substring(0,o))+n.substring(a+1):o=a}}return n===""?null:n}function av(s,e=!1){var t=e?" !important;":";",n="";for(var i in s){var r=s[i];r!=null&&r!==""&&(n+=" "+i+": "+r+t)}return n}function td(s){return s[0]!=="-"||s[1]!=="-"?s.toLowerCase():s}function GS(s,e){if(e){var t="",n,i;if(Array.isArray(e)?(n=e[0],i=e[1]):n=e,s){s=String(s).replaceAll(/\s*\/\*.*?\*\/\s*/g,"").trim();var r=!1,o=0,a=!1,c=[];n&&c.push(...Object.keys(n).map(td)),i&&c.push(...Object.keys(i).map(td));var l=0,u=-1;const _=s.length;for(var h=0;h<_;h++){var d=s[h];if(a?d==="/"&&s[h-1]==="*"&&(a=!1):r?r===d&&(r=!1):d==="/"&&s[h+1]==="*"?a=!0:d==='"'||d==="'"?r=d:d==="("?o++:d===")"&&o--,!a&&r===!1&&o===0){if(d===":"&&u===-1)u=h;else if(d===";"||h===_-1){if(u!==-1){var f=td(s.substring(l,u).trim());if(!c.includes(f)){d!==";"&&h++;var p=s.substring(l,h).trim();t+=" "+p+";"}}l=h+1,u=-1}}}}return n&&(t+=av(n)),i&&(t+=av(i,!0)),t=t.trim(),t===""?null:t}return s==null?null:String(s)}function hf(s,e,t,n,i,r){var o=s.__className;if(Gt||o!==t||o===void 0){var a=HS(t,n,r);(!Gt||a!==s.getAttribute("class"))&&(a==null?s.removeAttribute("class"):e?s.className=a:s.setAttribute("class",a)),s.__className=t}else if(r&&i!==r)for(var c in r){var l=!!r[c];(i==null||l!==!!i[c])&&s.classList.toggle(c,l)}return r}function nd(s,e={},t,n){for(var i in t){var r=t[i];e[i]!==r&&(t[i]==null?s.style.removeProperty(i):s.style.setProperty(i,r,n))}}function Ya(s,e,t,n){var i=s.__style;if(Gt||i!==e){var r=GS(e,n);(!Gt||r!==s.getAttribute("style"))&&(r==null?s.removeAttribute("style"):s.style.cssText=r),s.__style=e}else n&&(Array.isArray(n)?(nd(s,t==null?void 0:t[0],n[0]),nd(s,t==null?void 0:t[1],n[1],"important")):nd(s,t,n));return n}const Oa=Symbol("class"),jo=Symbol("style"),Ux=Symbol("is custom element"),Fx=Symbol("is html");function WS(s,e){e?s.hasAttribute("selected")||s.setAttribute("selected",""):s.removeAttribute("selected")}function df(s,e,t,n){var i=Bx(s);Gt&&(i[e]=s.getAttribute(e),e==="src"||e==="srcset"||e==="href"&&s.nodeName==="LINK")||i[e]!==(i[e]=t)&&(e==="loading"&&(s[TS]=t),t==null?s.removeAttribute(e):typeof t!="string"&&zx(s).includes(e)?s[e]=t:s.setAttribute(e,t))}function XS(s,e,t,n,i=!1){var r=Bx(s),o=r[Ux],a=!r[Fx];let c=Gt&&o;c&&Or(!1);var l=e||{},u=s.tagName==="OPTION";for(var h in e)h in t||(t[h]=null);t.class?t.class=uf(t.class):t[Oa]&&(t.class=null),t[jo]&&(t.style??(t.style=null));var d=zx(s);for(const M in t){let x=t[M];if(u&&M==="value"&&x==null){s.value=s.__value="",l[M]=x;continue}if(M==="class"){var f=s.namespaceURI==="http://www.w3.org/1999/xhtml";hf(s,f,x,n,e==null?void 0:e[Oa],t[Oa]),l[M]=x,l[Oa]=t[Oa];continue}if(M==="style"){Ya(s,x,e==null?void 0:e[jo],t[jo]),l[M]=x,l[jo]=t[jo];continue}var p=l[M];if(x!==p){l[M]=x;var _=M[0]+M[1];if(_!=="$$")if(_==="on"){const A={},C="$$"+M;let D=M.slice(2);var g=DS(D);if(CS(D)&&(D=D.slice(0,-7),A.capture=!0),!g&&p){if(x!=null)continue;s.removeEventListener(D,l[C],A),l[C]=null}if(x!=null)if(g)s[`__${D}`]=x,PS([D]);else{let O=function(w){l[M].call(this,w)};l[C]=RS(D,s,O,A)}else g&&(s[`__${D}`]=void 0)}else if(M==="style")df(s,M,x);else if(M==="autofocus")LS(s,!!x);else if(!o&&(M==="__value"||M==="value"&&x!=null))s.value=s.__value=x;else if(M==="selected"&&u)WS(s,x);else{var m=M;a||(m=IS(m));var b=m==="defaultValue"||m==="defaultChecked";if(x==null&&!o&&!b)if(r[M]=null,m==="value"||m==="checked"){let A=s;const C=e===void 0;if(m==="value"){let D=A.defaultValue;A.removeAttribute(m),A.defaultValue=D,A.value=A.__value=C?D:null}else{let D=A.defaultChecked;A.removeAttribute(m),A.defaultChecked=D,A.checked=C?D:!1}}else s.removeAttribute(M);else b||d.includes(m)&&(o||typeof x!="string")?s[m]=x:typeof x!="function"&&df(s,m,x)}}}return c&&Or(!0),l}function Bx(s){return s.__attributes??(s.__attributes={[Ux]:s.nodeName.includes("-"),[Fx]:s.namespaceURI===MS})}var cv=new Map;function zx(s){var e=cv.get(s.nodeName);if(e)return e;cv.set(s.nodeName,e=[]);for(var t,n=s,i=Element.prototype;i!==n;){t=SS(n);for(var r in t)t[r].set&&e.push(r);n=bS(n)}return e}const jS=()=>performance.now(),or={tick:s=>requestAnimationFrame(s),now:()=>jS(),tasks:new Set};function kx(){const s=or.now();or.tasks.forEach(e=>{e.c(s)||(or.tasks.delete(e),e.f())}),or.tasks.size!==0&&or.tick(kx)}function $S(s){let e;return or.tasks.size===0&&or.tick(kx),{promise:new Promise(t=>{or.tasks.add(e={c:s,f:t})}),abort(){or.tasks.delete(e)}}}function qS(s){In(s,s.v+1)}function YS(s){let e=0,t=rr(0),n;return()=>{Cx()&&(v(t),Rx(()=>(e===0&&(n=Kf(()=>s(()=>qS(t)))),e+=1,()=>{Px().then(()=>{e-=1,e===0&&(n==null||n(),n=void 0)})})))}}function ZS(s){let e;const t=YS(i=>{let r=!1;const o=s.subscribe(a=>{e=a,r&&i()});return r=!0,o});function n(){return Cx()?(t(),e):lf(s)}return"set"in s?{get current(){return n()},set current(i){s.set(i)}}:{get current(){return n()}}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ih="176",KS={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},JS={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Vx=0,ff=1,Hx=2,QS=3,eT=0,ep=1,ea=2,nr=3,dr=0,Qn=1,xi=2,Nr=0,no=1,pf=2,mf=3,gf=4,Gx=5,ns=100,Wx=101,Xx=102,jx=103,$x=104,qx=200,Yx=201,Zx=202,Kx=203,ou=204,au=205,Jx=206,Qx=207,eM=208,tM=209,nM=210,iM=211,rM=212,sM=213,oM=214,cu=0,lu=1,uu=2,lo=3,hu=4,du=5,fu=6,pu=7,kc=0,aM=1,cM=2,Ur=0,lM=1,uM=2,hM=3,tp=4,dM=5,mu=6,fM=7,_f="attached",pM="detached",rh=300,Br=301,fs=302,mc=303,gc=304,Ea=306,ps=1e3,bi=1001,la=1002,vn=1003,sh=1004,tT=1004,Xs=1005,nT=1005,rn=1006,ta=1007,iT=1007,Ni=1008,rT=1008,$i=1009,np=1010,ip=1011,ua=1012,oh=1013,zr=1014,oi=1015,Aa=1016,ah=1017,ch=1018,ha=1020,rp=35902,sp=1021,op=1022,Jn=1023,da=1026,fa=1027,lh=1028,Vc=1029,ap=1030,uh=1031,sT=1032,hh=1033,nc=33776,ic=33777,rc=33778,sc=33779,gu=35840,_u=35841,vu=35842,yu=35843,xu=36196,Mu=37492,bu=37496,Su=37808,Tu=37809,wu=37810,Eu=37811,Au=37812,Cu=37813,Ru=37814,Pu=37815,Iu=37816,Du=37817,Lu=37818,Ou=37819,Nu=37820,Uu=37821,oc=36492,Fu=36494,Bu=36495,cp=36283,zu=36284,ku=36285,Vu=36286,mM=2200,gM=2201,_M=2202,pa=2300,ma=2301,Kl=2302,js=2400,$s=2401,_c=2402,dh=2500,lp=2501,vM=0,up=1,Hu=2,yM=3200,xM=3201,oT=3202,aT=3203,ys=0,MM=1,Rr="",gn="srgb",Gn="srgb-linear",vc="linear",Ft="srgb",cT=0,ks=7680,lT=7681,uT=7682,hT=7683,dT=34055,fT=34056,pT=5386,mT=512,gT=513,_T=514,vT=515,yT=516,xT=517,MT=518,vf=519,bM=512,SM=513,TM=514,hp=515,wM=516,EM=517,AM=518,CM=519,yc=35044,bT=35048,ST=35040,TT=35045,wT=35049,ET=35041,AT=35046,CT=35050,RT=35042,PT="100",yf="300 es",Ui=2e3,xc=2001,IT={COMPUTE:"compute",RENDER:"render"},DT={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},LT={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FLAT_FIRST:"flat first",FLAT_EITHER:"flat either"};class mr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const On=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let lv=1234567;const io=Math.PI/180,ga=180/Math.PI;function wi(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(On[s&255]+On[s>>8&255]+On[s>>16&255]+On[s>>24&255]+"-"+On[e&255]+On[e>>8&255]+"-"+On[e>>16&15|64]+On[e>>24&255]+"-"+On[t&63|128]+On[t>>8&255]+"-"+On[t>>16&255]+On[t>>24&255]+On[n&255]+On[n>>8&255]+On[n>>16&255]+On[n>>24&255]).toLowerCase()}function rt(s,e,t){return Math.max(e,Math.min(t,s))}function dp(s,e){return(s%e+e)%e}function OT(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function NT(s,e,t){return s!==e?(t-s)/(e-s):0}function ac(s,e,t){return(1-t)*s+t*e}function UT(s,e,t,n){return ac(s,e,1-Math.exp(-t*n))}function FT(s,e=1){return e-Math.abs(dp(s,e*2)-e)}function BT(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function zT(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function kT(s,e){return s+Math.floor(Math.random()*(e-s+1))}function VT(s,e){return s+Math.random()*(e-s)}function HT(s){return s*(.5-Math.random())}function GT(s){s!==void 0&&(lv=s);let e=lv+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function WT(s){return s*io}function XT(s){return s*ga}function jT(s){return(s&s-1)===0&&s!==0}function $T(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function qT(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function YT(s,e,t,n,i){const r=Math.cos,o=Math.sin,a=r(t/2),c=o(t/2),l=r((e+n)/2),u=o((e+n)/2),h=r((e-n)/2),d=o((e-n)/2),f=r((n-e)/2),p=o((n-e)/2);switch(i){case"XYX":s.set(a*u,c*h,c*d,a*l);break;case"YZY":s.set(c*d,a*u,c*h,a*l);break;case"ZXZ":s.set(c*h,c*d,a*u,a*l);break;case"XZX":s.set(a*u,c*p,c*f,a*l);break;case"YXY":s.set(c*f,a*u,c*p,a*l);break;case"ZYZ":s.set(c*p,c*f,a*u,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Zn(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function ut(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const RM={DEG2RAD:io,RAD2DEG:ga,generateUUID:wi,clamp:rt,euclideanModulo:dp,mapLinear:OT,inverseLerp:NT,lerp:ac,damp:UT,pingpong:FT,smoothstep:BT,smootherstep:zT,randInt:kT,randFloat:VT,randFloatSpread:HT,seededRandom:GT,degToRad:WT,radToDeg:XT,isPowerOfTwo:jT,ceilPowerOfTwo:$T,floorPowerOfTwo:qT,setQuaternionFromProperEuler:YT,normalize:ut,denormalize:Zn};class le{constructor(e=0,t=0){le.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=rt(this.x,e.x,t.x),this.y=rt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=rt(this.x,e,t),this.y=rt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(rt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(rt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ct{constructor(e,t,n,i,r,o,a,c,l){ct.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,c,l)}set(e,t,n,i,r,o,a,c,l){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=r,u[5]=c,u[6]=n,u[7]=o,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],_=i[0],g=i[3],m=i[6],b=i[1],M=i[4],x=i[7],A=i[2],C=i[5],D=i[8];return r[0]=o*_+a*b+c*A,r[3]=o*g+a*M+c*C,r[6]=o*m+a*x+c*D,r[1]=l*_+u*b+h*A,r[4]=l*g+u*M+h*C,r[7]=l*m+u*x+h*D,r[2]=d*_+f*b+p*A,r[5]=d*g+f*M+p*C,r[8]=d*m+f*x+p*D,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8];return t*o*u-t*a*l-n*r*u+n*a*c+i*r*l-i*o*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=u*o-a*l,d=a*c-u*r,f=l*r-o*c,p=t*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return e[0]=h*_,e[1]=(i*l-u*n)*_,e[2]=(a*n-i*o)*_,e[3]=d*_,e[4]=(u*t-i*c)*_,e[5]=(i*r-a*t)*_,e[6]=f*_,e[7]=(n*c-l*t)*_,e[8]=(o*t-n*r)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+e,-i*l,i*c,-i*(-l*o+c*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(id.makeScale(e,t)),this}rotate(e){return this.premultiply(id.makeRotation(-e)),this}translate(e,t){return this.premultiply(id.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const id=new ct;function PM(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const ZT={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function $o(s,e){return new ZT[s](e)}function Mc(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function IM(){const s=Mc("canvas");return s.style.display="block",s}const uv={};function Jl(s){s in uv||(uv[s]=!0,console.warn(s))}function KT(s,e,t){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(e,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,t);break;default:n()}}setTimeout(r,t)})}function JT(s){const e=s.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function QT(s){const e=s.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const hv=new ct().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),dv=new ct().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function ew(){const s={enabled:!0,workingColorSpace:Gn,spaces:{},convert:function(i,r,o){return this.enabled===!1||r===o||!r||!o||(this.spaces[r].transfer===Ft&&(i.r=Fr(i.r),i.g=Fr(i.g),i.b=Fr(i.b)),this.spaces[r].primaries!==this.spaces[o].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Ft&&(i.r=na(i.r),i.g=na(i.g),i.b=na(i.b))),i},fromWorkingColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},toWorkingColorSpace:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Rr?vc:this.spaces[i].transfer},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,o){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[Gn]:{primaries:e,whitePoint:n,transfer:vc,toXYZ:hv,fromXYZ:dv,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:gn},outputColorSpaceConfig:{drawingBufferColorSpace:gn}},[gn]:{primaries:e,whitePoint:n,transfer:Ft,toXYZ:hv,fromXYZ:dv,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:gn}}}),s}const _t=ew();function Fr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function na(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Ao;class DM{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{Ao===void 0&&(Ao=Mc("canvas")),Ao.width=e.width,Ao.height=e.height;const i=Ao.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=Ao}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Mc("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=Fr(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Fr(t[n]/255)*255):t[n]=Fr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let tw=0;class rs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:tw++}),this.uuid=wi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?r.push(rd(i[o].image)):r.push(rd(i[o]))}else r=rd(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function rd(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?DM.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let nw=0;class Xt extends mr{constructor(e=Xt.DEFAULT_IMAGE,t=Xt.DEFAULT_MAPPING,n=bi,i=bi,r=rn,o=Ni,a=Jn,c=$i,l=Xt.DEFAULT_ANISOTROPY,u=Rr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:nw++}),this.uuid=wi(),this.name="",this.source=new rs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new le(0,0),this.repeat=new le(1,1),this.center=new le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ct,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isTextureArray=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isTextureArray=e.isTextureArray,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==rh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ps:e.x=e.x-Math.floor(e.x);break;case bi:e.x=e.x<0?0:1;break;case la:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ps:e.y=e.y-Math.floor(e.y);break;case bi:e.y=e.y<0?0:1;break;case la:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Xt.DEFAULT_IMAGE=null;Xt.DEFAULT_MAPPING=rh;Xt.DEFAULT_ANISOTROPY=1;class mt{constructor(e=0,t=0,n=0,i=1){mt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const c=e.elements,l=c[0],u=c[4],h=c[8],d=c[1],f=c[5],p=c[9],_=c[2],g=c[6],m=c[10];if(Math.abs(u-d)<.01&&Math.abs(h-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+_)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(l+1)/2,x=(f+1)/2,A=(m+1)/2,C=(u+d)/4,D=(h+_)/4,O=(p+g)/4;return M>x&&M>A?M<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(M),i=C/n,r=D/n):x>A?x<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(x),n=C/i,r=O/i):A<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(A),n=D/r,i=O/r),this.set(n,i,r,t),this}let b=Math.sqrt((g-p)*(g-p)+(h-_)*(h-_)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(g-p)/b,this.y=(h-_)/b,this.z=(d-u)/b,this.w=Math.acos((l+f+m-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=rt(this.x,e.x,t.x),this.y=rt(this.y,e.y,t.y),this.z=rt(this.z,e.z,t.z),this.w=rt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=rt(this.x,e,t),this.y=rt(this.y,e,t),this.z=rt(this.z,e,t),this.w=rt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(rt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class fh extends mr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth?n.depth:1,this.scissor=new mt(0,0,e,t),this.scissorTest=!1,this.viewport=new mt(0,0,e,t);const i={width:e,height:t,depth:this.depth};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:rn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,multiview:!1},n);const r=new Xt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const i=Object.assign({},e.textures[t].image);this.textures[t].source=new rs(i)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class fr extends fh{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Hc extends Xt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=vn,this.minFilter=vn,this.wrapR=bi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class iw extends fr{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Hc(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class ph extends Xt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=vn,this.minFilter=vn,this.wrapR=bi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class rw extends fr{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new ph(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Vn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,o,a){let c=n[i+0],l=n[i+1],u=n[i+2],h=n[i+3];const d=r[o+0],f=r[o+1],p=r[o+2],_=r[o+3];if(a===0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=_;return}if(h!==_||c!==d||l!==f||u!==p){let g=1-a;const m=c*d+l*f+u*p+h*_,b=m>=0?1:-1,M=1-m*m;if(M>Number.EPSILON){const A=Math.sqrt(M),C=Math.atan2(A,m*b);g=Math.sin(g*C)/A,a=Math.sin(a*C)/A}const x=a*b;if(c=c*g+d*x,l=l*g+f*x,u=u*g+p*x,h=h*g+_*x,g===1-a){const A=1/Math.sqrt(c*c+l*l+u*u+h*h);c*=A,l*=A,u*=A,h*=A}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,o){const a=n[i],c=n[i+1],l=n[i+2],u=n[i+3],h=r[o],d=r[o+1],f=r[o+2],p=r[o+3];return e[t]=a*p+u*h+c*f-l*d,e[t+1]=c*p+u*d+l*h-a*f,e[t+2]=l*p+u*f+a*d-c*h,e[t+3]=u*p-a*h-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,o=e._order,a=Math.cos,c=Math.sin,l=a(n/2),u=a(i/2),h=a(r/2),d=c(n/2),f=c(i/2),p=c(r/2);switch(o){case"XYZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"YZX":this._x=d*u*h+l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h-d*f*p;break;case"XZY":this._x=d*u*h-l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],a=t[5],c=t[9],l=t[2],u=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-c)*f,this._y=(r-l)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-c)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+l)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(r-l)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(c+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(r+l)/f,this._y=(c+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(rt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,a=t._x,c=t._y,l=t._z,u=t._w;return this._x=n*u+o*a+i*l-r*c,this._y=i*u+o*c+r*a-n*l,this._z=r*u+o*l+n*c-i*a,this._w=o*u-n*a-i*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this}const l=Math.sqrt(c),u=Math.atan2(l,a),h=Math.sin((1-t)*u)/l,d=Math.sin(t*u)/l;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=r*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class F{constructor(e=0,t=0,n=0){F.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(fv.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(fv.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,a=e.z,c=e.w,l=2*(o*i-a*n),u=2*(a*t-r*i),h=2*(r*n-o*t);return this.x=t+c*l+o*h-a*u,this.y=n+c*u+a*l-r*h,this.z=i+c*h+r*u-o*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=rt(this.x,e.x,t.x),this.y=rt(this.y,e.y,t.y),this.z=rt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=rt(this.x,e,t),this.y=rt(this.y,e,t),this.z=rt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(rt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,a=t.y,c=t.z;return this.x=i*c-r*a,this.y=r*o-n*c,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return sd.copy(this).projectOnVector(e),this.sub(sd)}reflect(e){return this.sub(sd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(rt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const sd=new F,fv=new Vn;class fn{constructor(e=new F(1/0,1/0,1/0),t=new F(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Gi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Gi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Gi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Gi):Gi.fromBufferAttribute(r,o),Gi.applyMatrix4(e.matrixWorld),this.expandByPoint(Gi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Qc.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Qc.copy(n.boundingBox)),Qc.applyMatrix4(e.matrixWorld),this.union(Qc)}const i=e.children;for(let r=0,o=i.length;r<o;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Gi),Gi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Na),el.subVectors(this.max,Na),Co.subVectors(e.a,Na),Ro.subVectors(e.b,Na),Po.subVectors(e.c,Na),Wr.subVectors(Ro,Co),Xr.subVectors(Po,Ro),Ss.subVectors(Co,Po);let t=[0,-Wr.z,Wr.y,0,-Xr.z,Xr.y,0,-Ss.z,Ss.y,Wr.z,0,-Wr.x,Xr.z,0,-Xr.x,Ss.z,0,-Ss.x,-Wr.y,Wr.x,0,-Xr.y,Xr.x,0,-Ss.y,Ss.x,0];return!od(t,Co,Ro,Po,el)||(t=[1,0,0,0,1,0,0,0,1],!od(t,Co,Ro,Po,el))?!1:(tl.crossVectors(Wr,Xr),t=[tl.x,tl.y,tl.z],od(t,Co,Ro,Po,el))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Gi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Gi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(_r[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_r[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_r[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_r[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_r[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_r[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_r[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_r[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_r),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _r=[new F,new F,new F,new F,new F,new F,new F,new F],Gi=new F,Qc=new fn,Co=new F,Ro=new F,Po=new F,Wr=new F,Xr=new F,Ss=new F,Na=new F,el=new F,tl=new F,Ts=new F;function od(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){Ts.fromArray(s,r);const a=i.x*Math.abs(Ts.x)+i.y*Math.abs(Ts.y)+i.z*Math.abs(Ts.z),c=e.dot(Ts),l=t.dot(Ts),u=n.dot(Ts);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>a)return!1}return!0}const sw=new fn,Ua=new F,ad=new F;class pn{constructor(e=new F,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):sw.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Ua.subVectors(e,this.center);const t=Ua.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Ua,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(ad.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Ua.copy(e.center).add(ad)),this.expandByPoint(Ua.copy(e.center).sub(ad))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const vr=new F,cd=new F,nl=new F,jr=new F,ld=new F,il=new F,ud=new F;class yo{constructor(e=new F,t=new F(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,vr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=vr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(vr.copy(this.origin).addScaledVector(this.direction,t),vr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){cd.copy(e).add(t).multiplyScalar(.5),nl.copy(t).sub(e).normalize(),jr.copy(this.origin).sub(cd);const r=e.distanceTo(t)*.5,o=-this.direction.dot(nl),a=jr.dot(this.direction),c=-jr.dot(nl),l=jr.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*c-a,d=o*a-c,p=r*u,h>=0)if(d>=-p)if(d<=p){const _=1/u;h*=_,d*=_,f=h*(h+o*d+2*a)+d*(o*h+d+2*c)+l}else d=r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d=-r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;else d<=-p?(h=Math.max(0,-(-o*r+a)),d=h>0?-r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l):d<=p?(h=0,d=Math.min(Math.max(-r,-c),r),f=d*(d+2*c)+l):(h=Math.max(0,-(o*r+a)),d=h>0?r:Math.min(Math.max(-r,-c),r),f=-h*h+d*(d+2*c)+l);else d=o>0?-r:r,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(cd).addScaledVector(nl,d),f}intersectSphere(e,t){vr.subVectors(e.center,this.origin);const n=vr.dot(this.direction),i=vr.dot(vr)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,a,c;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),u>=0?(r=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(r=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),h>=0?(a=(e.min.z-d.z)*h,c=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,c=(e.min.z-d.z)*h),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,vr)!==null}intersectTriangle(e,t,n,i,r){ld.subVectors(t,e),il.subVectors(n,e),ud.crossVectors(ld,il);let o=this.direction.dot(ud),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;jr.subVectors(this.origin,e);const c=a*this.direction.dot(il.crossVectors(jr,il));if(c<0)return null;const l=a*this.direction.dot(ld.cross(jr));if(l<0||c+l>o)return null;const u=-a*jr.dot(ud);return u<0?null:this.at(u/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class je{constructor(e,t,n,i,r,o,a,c,l,u,h,d,f,p,_,g){je.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,a,c,l,u,h,d,f,p,_,g)}set(e,t,n,i,r,o,a,c,l,u,h,d,f,p,_,g){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=i,m[1]=r,m[5]=o,m[9]=a,m[13]=c,m[2]=l,m[6]=u,m[10]=h,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new je().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Io.setFromMatrixColumn(e,0).length(),r=1/Io.setFromMatrixColumn(e,1).length(),o=1/Io.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),l=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const d=o*u,f=o*h,p=a*u,_=a*h;t[0]=c*u,t[4]=-c*h,t[8]=l,t[1]=f+p*l,t[5]=d-_*l,t[9]=-a*c,t[2]=_-d*l,t[6]=p+f*l,t[10]=o*c}else if(e.order==="YXZ"){const d=c*u,f=c*h,p=l*u,_=l*h;t[0]=d+_*a,t[4]=p*a-f,t[8]=o*l,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-p,t[6]=_+d*a,t[10]=o*c}else if(e.order==="ZXY"){const d=c*u,f=c*h,p=l*u,_=l*h;t[0]=d-_*a,t[4]=-o*h,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*u,t[9]=_-d*a,t[2]=-o*l,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const d=o*u,f=o*h,p=a*u,_=a*h;t[0]=c*u,t[4]=p*l-f,t[8]=d*l+_,t[1]=c*h,t[5]=_*l+d,t[9]=f*l-p,t[2]=-l,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const d=o*c,f=o*l,p=a*c,_=a*l;t[0]=c*u,t[4]=_-d*h,t[8]=p*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-l*u,t[6]=f*h+p,t[10]=d-_*h}else if(e.order==="XZY"){const d=o*c,f=o*l,p=a*c,_=a*l;t[0]=c*u,t[4]=-h,t[8]=l*u,t[1]=d*h+_,t[5]=o*u,t[9]=f*h-p,t[2]=p*h-f,t[6]=a*u,t[10]=_*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ow,e,aw)}lookAt(e,t,n){const i=this.elements;return gi.subVectors(e,t),gi.lengthSq()===0&&(gi.z=1),gi.normalize(),$r.crossVectors(n,gi),$r.lengthSq()===0&&(Math.abs(n.z)===1?gi.x+=1e-4:gi.z+=1e-4,gi.normalize(),$r.crossVectors(n,gi)),$r.normalize(),rl.crossVectors(gi,$r),i[0]=$r.x,i[4]=rl.x,i[8]=gi.x,i[1]=$r.y,i[5]=rl.y,i[9]=gi.y,i[2]=$r.z,i[6]=rl.z,i[10]=gi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],_=n[6],g=n[10],m=n[14],b=n[3],M=n[7],x=n[11],A=n[15],C=i[0],D=i[4],O=i[8],w=i[12],E=i[1],z=i[5],$=i[9],j=i[13],Y=i[2],ee=i[6],q=i[10],se=i[14],J=i[3],ge=i[7],xe=i[11],Ae=i[15];return r[0]=o*C+a*E+c*Y+l*J,r[4]=o*D+a*z+c*ee+l*ge,r[8]=o*O+a*$+c*q+l*xe,r[12]=o*w+a*j+c*se+l*Ae,r[1]=u*C+h*E+d*Y+f*J,r[5]=u*D+h*z+d*ee+f*ge,r[9]=u*O+h*$+d*q+f*xe,r[13]=u*w+h*j+d*se+f*Ae,r[2]=p*C+_*E+g*Y+m*J,r[6]=p*D+_*z+g*ee+m*ge,r[10]=p*O+_*$+g*q+m*xe,r[14]=p*w+_*j+g*se+m*Ae,r[3]=b*C+M*E+x*Y+A*J,r[7]=b*D+M*z+x*ee+A*ge,r[11]=b*O+M*$+x*q+A*xe,r[15]=b*w+M*j+x*se+A*Ae,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],a=e[5],c=e[9],l=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],_=e[7],g=e[11],m=e[15];return p*(+r*c*h-i*l*h-r*a*d+n*l*d+i*a*f-n*c*f)+_*(+t*c*f-t*l*d+r*o*d-i*o*f+i*l*u-r*c*u)+g*(+t*l*h-t*a*f-r*o*h+n*o*f+r*a*u-n*l*u)+m*(-i*a*u-t*c*h+t*a*d+i*o*h-n*o*d+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],_=e[13],g=e[14],m=e[15],b=h*g*l-_*d*l+_*c*f-a*g*f-h*c*m+a*d*m,M=p*d*l-u*g*l-p*c*f+o*g*f+u*c*m-o*d*m,x=u*_*l-p*h*l+p*a*f-o*_*f-u*a*m+o*h*m,A=p*h*c-u*_*c-p*a*d+o*_*d+u*a*g-o*h*g,C=t*b+n*M+i*x+r*A;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const D=1/C;return e[0]=b*D,e[1]=(_*d*r-h*g*r-_*i*f+n*g*f+h*i*m-n*d*m)*D,e[2]=(a*g*r-_*c*r+_*i*l-n*g*l-a*i*m+n*c*m)*D,e[3]=(h*c*r-a*d*r-h*i*l+n*d*l+a*i*f-n*c*f)*D,e[4]=M*D,e[5]=(u*g*r-p*d*r+p*i*f-t*g*f-u*i*m+t*d*m)*D,e[6]=(p*c*r-o*g*r-p*i*l+t*g*l+o*i*m-t*c*m)*D,e[7]=(o*d*r-u*c*r+u*i*l-t*d*l-o*i*f+t*c*f)*D,e[8]=x*D,e[9]=(p*h*r-u*_*r-p*n*f+t*_*f+u*n*m-t*h*m)*D,e[10]=(o*_*r-p*a*r+p*n*l-t*_*l-o*n*m+t*a*m)*D,e[11]=(u*a*r-o*h*r-u*n*l+t*h*l+o*n*f-t*a*f)*D,e[12]=A*D,e[13]=(u*_*i-p*h*i+p*n*d-t*_*d-u*n*g+t*h*g)*D,e[14]=(p*a*i-o*_*i-p*n*c+t*_*c+o*n*g-t*a*g)*D,e[15]=(o*h*i-u*a*i+u*n*c-t*h*c-o*n*d+t*a*d)*D,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,a=e.y,c=e.z,l=r*o,u=r*a;return this.set(l*o+n,l*a-i*c,l*c+i*a,0,l*a+i*c,u*a+n,u*c-i*o,0,l*c-i*a,u*c+i*o,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,a=t._z,c=t._w,l=r+r,u=o+o,h=a+a,d=r*l,f=r*u,p=r*h,_=o*u,g=o*h,m=a*h,b=c*l,M=c*u,x=c*h,A=n.x,C=n.y,D=n.z;return i[0]=(1-(_+m))*A,i[1]=(f+x)*A,i[2]=(p-M)*A,i[3]=0,i[4]=(f-x)*C,i[5]=(1-(d+m))*C,i[6]=(g+b)*C,i[7]=0,i[8]=(p+M)*D,i[9]=(g-b)*D,i[10]=(1-(d+_))*D,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Io.set(i[0],i[1],i[2]).length();const o=Io.set(i[4],i[5],i[6]).length(),a=Io.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Wi.copy(this);const l=1/r,u=1/o,h=1/a;return Wi.elements[0]*=l,Wi.elements[1]*=l,Wi.elements[2]*=l,Wi.elements[4]*=u,Wi.elements[5]*=u,Wi.elements[6]*=u,Wi.elements[8]*=h,Wi.elements[9]*=h,Wi.elements[10]*=h,t.setFromRotationMatrix(Wi),n.x=r,n.y=o,n.z=a,this}makePerspective(e,t,n,i,r,o,a=Ui){const c=this.elements,l=2*r/(t-e),u=2*r/(n-i),h=(t+e)/(t-e),d=(n+i)/(n-i);let f,p;if(a===Ui)f=-(o+r)/(o-r),p=-2*o*r/(o-r);else if(a===xc)f=-o/(o-r),p=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=l,c[4]=0,c[8]=h,c[12]=0,c[1]=0,c[5]=u,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=p,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,i,r,o,a=Ui){const c=this.elements,l=1/(t-e),u=1/(n-i),h=1/(o-r),d=(t+e)*l,f=(n+i)*u;let p,_;if(a===Ui)p=(o+r)*h,_=-2*h;else if(a===xc)p=r*h,_=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*u,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=_,c[14]=-p,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Io=new F,Wi=new je,ow=new F(0,0,0),aw=new F(1,1,1),$r=new F,rl=new F,gi=new F,pv=new je,mv=new Vn;class Ai{constructor(e=0,t=0,n=0,i=Ai.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],a=i[8],c=i[1],l=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(rt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-rt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(rt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-rt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(rt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-rt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return pv.makeRotationFromQuaternion(e),this.setFromRotationMatrix(pv,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return mv.setFromEuler(this),this.setFromQuaternion(mv,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ai.DEFAULT_ORDER="XYZ";class mh{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let cw=0;const gv=new F,Do=new Vn,yr=new je,sl=new F,Fa=new F,lw=new F,uw=new Vn,_v=new F(1,0,0),vv=new F(0,1,0),yv=new F(0,0,1),xv={type:"added"},hw={type:"removed"},Lo={type:"childadded",child:null},hd={type:"childremoved",child:null};class Tt extends mr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:cw++}),this.uuid=wi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Tt.DEFAULT_UP.clone();const e=new F,t=new Ai,n=new Vn,i=new F(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new je},normalMatrix:{value:new ct}}),this.matrix=new je,this.matrixWorld=new je,this.matrixAutoUpdate=Tt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Tt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new mh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Do.setFromAxisAngle(e,t),this.quaternion.multiply(Do),this}rotateOnWorldAxis(e,t){return Do.setFromAxisAngle(e,t),this.quaternion.premultiply(Do),this}rotateX(e){return this.rotateOnAxis(_v,e)}rotateY(e){return this.rotateOnAxis(vv,e)}rotateZ(e){return this.rotateOnAxis(yv,e)}translateOnAxis(e,t){return gv.copy(e).applyQuaternion(this.quaternion),this.position.add(gv.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_v,e)}translateY(e){return this.translateOnAxis(vv,e)}translateZ(e){return this.translateOnAxis(yv,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(yr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?sl.copy(e):sl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Fa.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?yr.lookAt(Fa,sl,this.up):yr.lookAt(sl,Fa,this.up),this.quaternion.setFromRotationMatrix(yr),i&&(yr.extractRotation(i.matrixWorld),Do.setFromRotationMatrix(yr),this.quaternion.premultiply(Do.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(xv),Lo.child=e,this.dispatchEvent(Lo),Lo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(hw),hd.child=e,this.dispatchEvent(hd),hd.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),yr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),yr.multiply(e.parent.matrixWorld)),e.applyMatrix4(yr),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(xv),Lo.child=e,this.dispatchEvent(Lo),Lo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Fa,e,lw),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Fa,uw,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?{min:a.boundingBox.min.toArray(),max:a.boundingBox.max.toArray()}:void 0,boundingSphere:a.boundingSphere?{radius:a.boundingSphere.radius,center:a.boundingSphere.center.toArray()}:void 0})),i.instanceInfo=this._instanceInfo.map(a=>({...a})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(e),i.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:this.boundingSphere.center.toArray(),radius:this.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:this.boundingBox.min.toArray(),max:this.boundingBox.max.toArray()}));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const h=c[l];r(e.shapes,h)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(e.materials,this.material[c]));i.material=a}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(r(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),l=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Tt.DEFAULT_UP=new F(0,1,0);Tt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Tt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Xi=new F,xr=new F,dd=new F,Mr=new F,Oo=new F,No=new F,Mv=new F,fd=new F,pd=new F,md=new F,gd=new mt,_d=new mt,vd=new mt;class si{constructor(e=new F,t=new F,n=new F){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Xi.subVectors(e,t),i.cross(Xi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Xi.subVectors(i,t),xr.subVectors(n,t),dd.subVectors(e,t);const o=Xi.dot(Xi),a=Xi.dot(xr),c=Xi.dot(dd),l=xr.dot(xr),u=xr.dot(dd),h=o*l-a*a;if(h===0)return r.set(0,0,0),null;const d=1/h,f=(l*c-a*u)*d,p=(o*u-a*c)*d;return r.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Mr)===null?!1:Mr.x>=0&&Mr.y>=0&&Mr.x+Mr.y<=1}static getInterpolation(e,t,n,i,r,o,a,c){return this.getBarycoord(e,t,n,i,Mr)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,Mr.x),c.addScaledVector(o,Mr.y),c.addScaledVector(a,Mr.z),c)}static getInterpolatedAttribute(e,t,n,i,r,o){return gd.setScalar(0),_d.setScalar(0),vd.setScalar(0),gd.fromBufferAttribute(e,t),_d.fromBufferAttribute(e,n),vd.fromBufferAttribute(e,i),o.setScalar(0),o.addScaledVector(gd,r.x),o.addScaledVector(_d,r.y),o.addScaledVector(vd,r.z),o}static isFrontFacing(e,t,n,i){return Xi.subVectors(n,t),xr.subVectors(e,t),Xi.cross(xr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Xi.subVectors(this.c,this.b),xr.subVectors(this.a,this.b),Xi.cross(xr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return si.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return si.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return si.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return si.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return si.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,a;Oo.subVectors(i,n),No.subVectors(r,n),fd.subVectors(e,n);const c=Oo.dot(fd),l=No.dot(fd);if(c<=0&&l<=0)return t.copy(n);pd.subVectors(e,i);const u=Oo.dot(pd),h=No.dot(pd);if(u>=0&&h<=u)return t.copy(i);const d=c*h-u*l;if(d<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(Oo,o);md.subVectors(e,r);const f=Oo.dot(md),p=No.dot(md);if(p>=0&&f<=p)return t.copy(r);const _=f*l-c*p;if(_<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(n).addScaledVector(No,a);const g=u*p-f*h;if(g<=0&&h-u>=0&&f-p>=0)return Mv.subVectors(r,i),a=(h-u)/(h-u+(f-p)),t.copy(i).addScaledVector(Mv,a);const m=1/(g+_+d);return o=_*m,a=d*m,t.copy(n).addScaledVector(Oo,o).addScaledVector(No,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const LM={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},qr={h:0,s:0,l:0},ol={h:0,s:0,l:0};function yd(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Ce{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=gn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,_t.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=_t.workingColorSpace){return this.r=e,this.g=t,this.b=n,_t.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=_t.workingColorSpace){if(e=dp(e,1),t=rt(t,0,1),n=rt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=yd(o,r,e+1/3),this.g=yd(o,r,e),this.b=yd(o,r,e-1/3)}return _t.toWorkingColorSpace(this,i),this}setStyle(e,t=gn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=gn){const n=LM[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Fr(e.r),this.g=Fr(e.g),this.b=Fr(e.b),this}copyLinearToSRGB(e){return this.r=na(e.r),this.g=na(e.g),this.b=na(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=gn){return _t.fromWorkingColorSpace(Nn.copy(this),e),Math.round(rt(Nn.r*255,0,255))*65536+Math.round(rt(Nn.g*255,0,255))*256+Math.round(rt(Nn.b*255,0,255))}getHexString(e=gn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=_t.workingColorSpace){_t.fromWorkingColorSpace(Nn.copy(this),t);const n=Nn.r,i=Nn.g,r=Nn.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let c,l;const u=(a+o)/2;if(a===o)c=0,l=0;else{const h=o-a;switch(l=u<=.5?h/(o+a):h/(2-o-a),o){case n:c=(i-r)/h+(i<r?6:0);break;case i:c=(r-n)/h+2;break;case r:c=(n-i)/h+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=_t.workingColorSpace){return _t.fromWorkingColorSpace(Nn.copy(this),t),e.r=Nn.r,e.g=Nn.g,e.b=Nn.b,e}getStyle(e=gn){_t.fromWorkingColorSpace(Nn.copy(this),e);const t=Nn.r,n=Nn.g,i=Nn.b;return e!==gn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(qr),this.setHSL(qr.h+e,qr.s+t,qr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(qr),e.getHSL(ol);const n=ac(qr.h,ol.h,t),i=ac(qr.s,ol.s,t),r=ac(qr.l,ol.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Nn=new Ce;Ce.NAMES=LM;let dw=0;class yn extends mr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:dw++}),this.uuid=wi(),this.name="",this.type="Material",this.blending=no,this.side=dr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ou,this.blendDst=au,this.blendEquation=ns,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ce(0,0,0),this.blendAlpha=0,this.depthFunc=lo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=vf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ks,this.stencilZFail=ks,this.stencilZPass=ks,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==no&&(n.blending=this.blending),this.side!==dr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==ou&&(n.blendSrc=this.blendSrc),this.blendDst!==au&&(n.blendDst=this.blendDst),this.blendEquation!==ns&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==lo&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==vf&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ks&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ks&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ks&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Si extends yn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ai,this.combine=kc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Pr=fw();function fw(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let c=0;c<256;++c){const l=c-127;l<-27?(n[c]=0,n[c|256]=32768,i[c]=24,i[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,i[c]=-l-1,i[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,i[c]=13,i[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,i[c]=24,i[c|256]=24):(n[c]=31744,n[c|256]=64512,i[c]=13,i[c|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,u=0;for(;(l&8388608)===0;)l<<=1,u-=8388608;l&=-8388609,u+=947912704,r[c]=l|u}for(let c=1024;c<2048;++c)r[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)o[c]=c<<23;o[31]=1199570944,o[32]=2147483648;for(let c=33;c<63;++c)o[c]=2147483648+(c-32<<23);o[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(a[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:o,offsetTable:a}}function ii(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=rt(s,-65504,65504),Pr.floatView[0]=s;const e=Pr.uint32View[0],t=e>>23&511;return Pr.baseTable[t]+((e&8388607)>>Pr.shiftTable[t])}function Za(s){const e=s>>10;return Pr.uint32View[0]=Pr.mantissaTable[Pr.offsetTable[e]+(s&1023)]+Pr.exponentTable[e],Pr.floatView[0]}class pw{static toHalfFloat(e){return ii(e)}static fromHalfFloat(e){return Za(e)}}const un=new F,al=new le;let mw=0;class Ot{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:mw++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=yc,this.updateRanges=[],this.gpuType=oi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)al.fromBufferAttribute(this,t),al.applyMatrix3(e),this.setXY(t,al.x,al.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyMatrix3(e),this.setXYZ(t,un.x,un.y,un.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyMatrix4(e),this.setXYZ(t,un.x,un.y,un.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyNormalMatrix(e),this.setXYZ(t,un.x,un.y,un.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.transformDirection(e),this.setXYZ(t,un.x,un.y,un.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Zn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ut(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Zn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Zn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Zn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Zn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array),r=ut(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==yc&&(e.usage=this.usage),e}}class gw extends Ot{constructor(e,t,n){super(new Int8Array(e),t,n)}}class _w extends Ot{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class vw extends Ot{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class yw extends Ot{constructor(e,t,n){super(new Int16Array(e),t,n)}}class fp extends Ot{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class xw extends Ot{constructor(e,t,n){super(new Int32Array(e),t,n)}}class pp extends Ot{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Mw extends Ot{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Za(this.array[e*this.itemSize]);return this.normalized&&(t=Zn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize]=ii(t),this}getY(e){let t=Za(this.array[e*this.itemSize+1]);return this.normalized&&(t=Zn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+1]=ii(t),this}getZ(e){let t=Za(this.array[e*this.itemSize+2]);return this.normalized&&(t=Zn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+2]=ii(t),this}getW(e){let t=Za(this.array[e*this.itemSize+3]);return this.normalized&&(t=Zn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+3]=ii(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array)),this.array[e+0]=ii(t),this.array[e+1]=ii(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array)),this.array[e+0]=ii(t),this.array[e+1]=ii(n),this.array[e+2]=ii(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array),r=ut(r,this.array)),this.array[e+0]=ii(t),this.array[e+1]=ii(n),this.array[e+2]=ii(i),this.array[e+3]=ii(r),this}}class ke extends Ot{constructor(e,t,n){super(new Float32Array(e),t,n)}}let bw=0;const Pi=new je,xd=new Tt,Uo=new F,_i=new fn,Ba=new fn,Sn=new F;class st extends mr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:bw++}),this.uuid=wi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(PM(e)?pp:fp)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new ct().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Pi.makeRotationFromQuaternion(e),this.applyMatrix4(Pi),this}rotateX(e){return Pi.makeRotationX(e),this.applyMatrix4(Pi),this}rotateY(e){return Pi.makeRotationY(e),this.applyMatrix4(Pi),this}rotateZ(e){return Pi.makeRotationZ(e),this.applyMatrix4(Pi),this}translate(e,t,n){return Pi.makeTranslation(e,t,n),this.applyMatrix4(Pi),this}scale(e,t,n){return Pi.makeScale(e,t,n),this.applyMatrix4(Pi),this}lookAt(e){return xd.lookAt(e),xd.updateMatrix(),this.applyMatrix4(xd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Uo).negate(),this.translate(Uo.x,Uo.y,Uo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,r=e.length;i<r;i++){const o=e[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new ke(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const r=e[i];t.setXYZ(i,r.x,r.y,r.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new fn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new F(-1/0,-1/0,-1/0),new F(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];_i.setFromBufferAttribute(r),this.morphTargetsRelative?(Sn.addVectors(this.boundingBox.min,_i.min),this.boundingBox.expandByPoint(Sn),Sn.addVectors(this.boundingBox.max,_i.max),this.boundingBox.expandByPoint(Sn)):(this.boundingBox.expandByPoint(_i.min),this.boundingBox.expandByPoint(_i.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new pn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new F,1/0);return}if(e){const n=this.boundingSphere.center;if(_i.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const a=t[r];Ba.setFromBufferAttribute(a),this.morphTargetsRelative?(Sn.addVectors(_i.min,Ba.min),_i.expandByPoint(Sn),Sn.addVectors(_i.max,Ba.max),_i.expandByPoint(Sn)):(_i.expandByPoint(Ba.min),_i.expandByPoint(Ba.max))}_i.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)Sn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Sn));if(t)for(let r=0,o=t.length;r<o;r++){const a=t[r],c=this.morphTargetsRelative;for(let l=0,u=a.count;l<u;l++)Sn.fromBufferAttribute(a,l),c&&(Uo.fromBufferAttribute(e,l),Sn.add(Uo)),i=Math.max(i,n.distanceToSquared(Sn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ot(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],c=[];for(let O=0;O<n.count;O++)a[O]=new F,c[O]=new F;const l=new F,u=new F,h=new F,d=new le,f=new le,p=new le,_=new F,g=new F;function m(O,w,E){l.fromBufferAttribute(n,O),u.fromBufferAttribute(n,w),h.fromBufferAttribute(n,E),d.fromBufferAttribute(r,O),f.fromBufferAttribute(r,w),p.fromBufferAttribute(r,E),u.sub(l),h.sub(l),f.sub(d),p.sub(d);const z=1/(f.x*p.y-p.x*f.y);isFinite(z)&&(_.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(z),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(z),a[O].add(_),a[w].add(_),a[E].add(_),c[O].add(g),c[w].add(g),c[E].add(g))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let O=0,w=b.length;O<w;++O){const E=b[O],z=E.start,$=E.count;for(let j=z,Y=z+$;j<Y;j+=3)m(e.getX(j+0),e.getX(j+1),e.getX(j+2))}const M=new F,x=new F,A=new F,C=new F;function D(O){A.fromBufferAttribute(i,O),C.copy(A);const w=a[O];M.copy(w),M.sub(A.multiplyScalar(A.dot(w))).normalize(),x.crossVectors(C,w);const z=x.dot(c[O])<0?-1:1;o.setXYZW(O,M.x,M.y,M.z,z)}for(let O=0,w=b.length;O<w;++O){const E=b[O],z=E.start,$=E.count;for(let j=z,Y=z+$;j<Y;j+=3)D(e.getX(j+0)),D(e.getX(j+1)),D(e.getX(j+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ot(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new F,r=new F,o=new F,a=new F,c=new F,l=new F,u=new F,h=new F;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),_=e.getX(d+1),g=e.getX(d+2);i.fromBufferAttribute(t,p),r.fromBufferAttribute(t,_),o.fromBufferAttribute(t,g),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,g),a.add(u),c.add(u),l.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,r),h.subVectors(i,r),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Sn.fromBufferAttribute(e,t),Sn.normalize(),e.setXYZ(t,Sn.x,Sn.y,Sn.z)}toNonIndexed(){function e(a,c){const l=a.array,u=a.itemSize,h=a.normalized,d=new l.constructor(c.length*u);let f=0,p=0;for(let _=0,g=c.length;_<g;_++){a.isInterleavedBufferAttribute?f=c[_]*a.data.stride+a.offset:f=c[_]*u;for(let m=0;m<u;m++)d[p++]=l[f++]}return new Ot(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new st,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],l=e(c,n);t.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let u=0,h=l.length;u<h;u++){const d=l[u],f=e(d,n);c.push(f)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let h=0,d=l.length;h<d;h++){const f=l[h];u.push(f.toJSON(e.data))}u.length>0&&(i[c]=u,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const i=e.attributes;for(const l in i){const u=i[l];this.setAttribute(l,u.clone(t))}const r=e.morphAttributes;for(const l in r){const u=[],h=r[l];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let l=0,u=o.length;l<u;l++){const h=o[l];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const bv=new je,ws=new yo,cl=new pn,Sv=new F,ll=new F,ul=new F,hl=new F,Md=new F,dl=new F,Tv=new F,fl=new F;class en extends Tt{constructor(e=new st,t=new Si){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(r&&a){dl.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const u=a[c],h=r[c];u!==0&&(Md.fromBufferAttribute(h,e),o?dl.addScaledVector(Md,u):dl.addScaledVector(Md.sub(t),u))}t.add(dl)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),cl.copy(n.boundingSphere),cl.applyMatrix4(r),ws.copy(e.ray).recast(e.near),!(cl.containsPoint(ws.origin)===!1&&(ws.intersectSphere(cl,Sv)===null||ws.origin.distanceToSquared(Sv)>(e.far-e.near)**2))&&(bv.copy(r).invert(),ws.copy(e.ray).applyMatrix4(bv),!(n.boundingBox!==null&&ws.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,ws)))}_computeIntersections(e,t,n){let i;const r=this.geometry,o=this.material,a=r.index,c=r.attributes.position,l=r.attributes.uv,u=r.attributes.uv1,h=r.attributes.normal,d=r.groups,f=r.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],b=Math.max(g.start,f.start),M=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let x=b,A=M;x<A;x+=3){const C=a.getX(x),D=a.getX(x+1),O=a.getX(x+2);i=pl(this,m,e,n,l,u,h,C,D,O),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const b=a.getX(g),M=a.getX(g+1),x=a.getX(g+2);i=pl(this,o,e,n,l,u,h,b,M,x),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}else if(c!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],b=Math.max(g.start,f.start),M=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let x=b,A=M;x<A;x+=3){const C=x,D=x+1,O=x+2;i=pl(this,m,e,n,l,u,h,C,D,O),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),_=Math.min(c.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const b=g,M=g+1,x=g+2;i=pl(this,o,e,n,l,u,h,b,M,x),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}}}function Sw(s,e,t,n,i,r,o,a){let c;if(e.side===Qn?c=n.intersectTriangle(o,r,i,!0,a):c=n.intersectTriangle(i,r,o,e.side===dr,a),c===null)return null;fl.copy(a),fl.applyMatrix4(s.matrixWorld);const l=t.ray.origin.distanceTo(fl);return l<t.near||l>t.far?null:{distance:l,point:fl.clone(),object:s}}function pl(s,e,t,n,i,r,o,a,c,l){s.getVertexPosition(a,ll),s.getVertexPosition(c,ul),s.getVertexPosition(l,hl);const u=Sw(s,e,t,n,ll,ul,hl,Tv);if(u){const h=new F;si.getBarycoord(Tv,ll,ul,hl,h),i&&(u.uv=si.getInterpolatedAttribute(i,a,c,l,h,new le)),r&&(u.uv1=si.getInterpolatedAttribute(r,a,c,l,h,new le)),o&&(u.normal=si.getInterpolatedAttribute(o,a,c,l,h,new F),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:c,c:l,normal:new F,materialIndex:0};si.getNormal(ll,ul,hl,d.normal),u.face=d,u.barycoord=h}return u}class xo extends st{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,o,r,0),p("z","y","x",1,-1,n,t,-e,o,r,1),p("x","z","y",1,1,e,n,t,i,o,2),p("x","z","y",1,-1,e,n,-t,i,o,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(c),this.setAttribute("position",new ke(l,3)),this.setAttribute("normal",new ke(u,3)),this.setAttribute("uv",new ke(h,2));function p(_,g,m,b,M,x,A,C,D,O,w){const E=x/D,z=A/O,$=x/2,j=A/2,Y=C/2,ee=D+1,q=O+1;let se=0,J=0;const ge=new F;for(let xe=0;xe<q;xe++){const Ae=xe*z-j;for(let He=0;He<ee;He++){const lt=He*E-$;ge[_]=lt*b,ge[g]=Ae*M,ge[m]=Y,l.push(ge.x,ge.y,ge.z),ge[_]=0,ge[g]=0,ge[m]=C>0?1:-1,u.push(ge.x,ge.y,ge.z),h.push(He/D),h.push(1-xe/O),se+=1}}for(let xe=0;xe<O;xe++)for(let Ae=0;Ae<D;Ae++){const He=d+Ae+ee*xe,lt=d+Ae+ee*(xe+1),Z=d+(Ae+1)+ee*(xe+1),ce=d+(Ae+1)+ee*xe;c.push(He,lt,ce),c.push(lt,Z,ce),J+=6}a.addGroup(f,J,w),f+=J,d+=se}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xo(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function _a(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Yn(s){const e={};for(let t=0;t<s.length;t++){const n=_a(s[t]);for(const i in n)e[i]=n[i]}return e}function Tw(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function OM(s){const e=s.getRenderTarget();return e===null?s.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:_t.workingColorSpace}const mp={clone:_a,merge:Yn};var ww=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Ew=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class qi extends yn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ww,this.fragmentShader=Ew,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=_a(e.uniforms),this.uniformsGroups=Tw(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class gh extends Tt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new je,this.projectionMatrix=new je,this.projectionMatrixInverse=new je,this.coordinateSystem=Ui}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Yr=new F,wv=new le,Ev=new le;class _n extends gh{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=ga*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(io*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ga*2*Math.atan(Math.tan(io*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Yr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Yr.x,Yr.y).multiplyScalar(-e/Yr.z),Yr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Yr.x,Yr.y).multiplyScalar(-e/Yr.z)}getViewSize(e,t){return this.getViewBounds(e,wv,Ev),t.subVectors(Ev,wv)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(io*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*i/c,t-=o.offsetY*n/l,i*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(r+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Fo=-90,Bo=1;class NM extends Tt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new _n(Fo,Bo,e,t);i.layers=this.layers,this.add(i);const r=new _n(Fo,Bo,e,t);r.layers=this.layers,this.add(r);const o=new _n(Fo,Bo,e,t);o.layers=this.layers,this.add(o);const a=new _n(Fo,Bo,e,t);a.layers=this.layers,this.add(a);const c=new _n(Fo,Bo,e,t);c.layers=this.layers,this.add(c);const l=new _n(Fo,Bo,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,o,a,c]=t;for(const l of t)this.remove(l);if(e===Ui)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===xc)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,c,l,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,o),e.setRenderTarget(n,2,i),e.render(t,a),e.setRenderTarget(n,3,i),e.render(t,c),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=_,e.setRenderTarget(n,5,i),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Gc extends Xt{constructor(e=[],t=Br,n,i,r,o,a,c,l,u){super(e,t,n,i,r,o,a,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class UM extends fr{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Gc(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:rn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new xo(5,5,5),r=new qi({name:"CubemapFromEquirect",uniforms:_a(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Qn,blending:Nr});r.uniforms.tEquirect.value=t;const o=new en(i,r),a=t.minFilter;return t.minFilter===Ni&&(t.minFilter=rn),new NM(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}class cr extends Tt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Aw={type:"move"};class Ql{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new cr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new cr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new F,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new F),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new cr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new F,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new F),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const a=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){o=!0;for(const _ of e.hand.values()){const g=t.getJointPose(_,n),m=this._getHandJoint(l,_);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const u=l.joints["index-finger-tip"],h=l.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;l.inputState.pinching&&d>f+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Aw)))}return a!==null&&(a.visible=i!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new cr;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class _h{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ce(e),this.density=t}clone(){return new _h(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class vh{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ce(e),this.near=t,this.far=n}clone(){return new vh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let gp=class extends Tt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ai,this.environmentIntensity=1,this.environmentRotation=new Ai,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class Wc{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=yc,this.updateRanges=[],this.version=0,this.uuid=wi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=wi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=wi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const qn=new F;class ms{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)qn.fromBufferAttribute(this,t),qn.applyMatrix4(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)qn.fromBufferAttribute(this,t),qn.applyNormalMatrix(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)qn.fromBufferAttribute(this,t),qn.transformDirection(e),this.setXYZ(t,qn.x,qn.y,qn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Zn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ut(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Zn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Zn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Zn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Zn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),n=ut(n,this.array),i=ut(i,this.array),r=ut(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Ot(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ms(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class _p extends yn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ce(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let zo;const za=new F,ko=new F,Vo=new F,Ho=new le,ka=new le,FM=new je,ml=new F,Va=new F,gl=new F,Av=new le,bd=new le,Cv=new le;class BM extends Tt{constructor(e=new _p){if(super(),this.isSprite=!0,this.type="Sprite",zo===void 0){zo=new st;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Wc(t,5);zo.setIndex([0,1,2,0,2,3]),zo.setAttribute("position",new ms(n,3,0,!1)),zo.setAttribute("uv",new ms(n,2,3,!1))}this.geometry=zo,this.material=e,this.center=new le(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ko.setFromMatrixScale(this.matrixWorld),FM.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Vo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ko.multiplyScalar(-Vo.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;_l(ml.set(-.5,-.5,0),Vo,o,ko,i,r),_l(Va.set(.5,-.5,0),Vo,o,ko,i,r),_l(gl.set(.5,.5,0),Vo,o,ko,i,r),Av.set(0,0),bd.set(1,0),Cv.set(1,1);let a=e.ray.intersectTriangle(ml,Va,gl,!1,za);if(a===null&&(_l(Va.set(-.5,.5,0),Vo,o,ko,i,r),bd.set(0,1),a=e.ray.intersectTriangle(ml,gl,Va,!1,za),a===null))return;const c=e.ray.origin.distanceTo(za);c<e.near||c>e.far||t.push({distance:c,point:za.clone(),uv:si.getInterpolation(za,ml,Va,gl,Av,bd,Cv,new le),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function _l(s,e,t,n,i,r){Ho.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(ka.x=r*Ho.x-i*Ho.y,ka.y=i*Ho.x+r*Ho.y):ka.copy(Ho),s.copy(e),s.x+=ka.x,s.y+=ka.y,s.applyMatrix4(FM)}const vl=new F,Rv=new F;class zM extends Tt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){vl.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(vl);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){vl.setFromMatrixPosition(e.matrixWorld),Rv.setFromMatrixPosition(this.matrixWorld);const n=vl.distanceTo(Rv)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const Pv=new F,Iv=new mt,Dv=new mt,Cw=new F,Lv=new je,yl=new F,Sd=new pn,Ov=new je,Td=new yo;class vp extends en{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=_f,this.bindMatrix=new je,this.bindMatrixInverse=new je,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new fn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,yl),this.boundingBox.expandByPoint(yl)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new pn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,yl),this.boundingSphere.expandByPoint(yl)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Sd.copy(this.boundingSphere),Sd.applyMatrix4(i),e.ray.intersectsSphere(Sd)!==!1&&(Ov.copy(i).invert(),Td.copy(e.ray).applyMatrix4(Ov),!(this.boundingBox!==null&&Td.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Td)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new mt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===_f?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===pM?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Iv.fromBufferAttribute(i.attributes.skinIndex,e),Dv.fromBufferAttribute(i.attributes.skinWeight,e),Pv.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=Dv.getComponent(r);if(o!==0){const a=Iv.getComponent(r);Lv.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(Cw.copy(Pv).applyMatrix4(Lv),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class yh extends Tt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ur extends Xt{constructor(e=null,t=1,n=1,i,r,o,a,c,l=vn,u=vn,h,d){super(null,o,a,c,l,u,i,r,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Nv=new je,Rw=new je;class Xc{constructor(e=[],t=[]){this.uuid=wi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new je)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new je;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const a=e[r]?e[r].matrixWorld:Rw;Nv.multiplyMatrices(a,t[r]),Nv.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Xc(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ur(t,e,e,Jn,oi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new yh),this.bones.push(o),this.boneInverses.push(new je().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class uo extends Ot{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Go=new je,Uv=new je,xl=[],Fv=new fn,Pw=new je,Ha=new en,Ga=new pn;class yp extends en{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new uo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Pw)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new fn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Go),Fv.copy(e.boundingBox).applyMatrix4(Go),this.boundingBox.union(Fv)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new pn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Go),Ga.copy(e.boundingSphere).applyMatrix4(Go),this.boundingSphere.union(Ga)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,o=e*r+1;for(let a=0;a<n.length;a++)n[a]=i[o+a]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Ha.geometry=this.geometry,Ha.material=this.material,Ha.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ga.copy(this.boundingSphere),Ga.applyMatrix4(n),e.ray.intersectsSphere(Ga)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,Go),Uv.multiplyMatrices(n,Go),Ha.matrixWorld=Uv,Ha.raycast(e,xl);for(let o=0,a=xl.length;o<a;o++){const c=xl[o];c.instanceId=r,c.object=this,t.push(c)}xl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new uo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new ur(new Float32Array(i*this.count),i,this.count,lh,oi));const r=this.morphTexture.source.data.data;let o=0;for(let l=0;l<n.length;l++)o+=n[l];const a=this.geometry.morphTargetsRelative?1:1-o,c=i*e;r[c]=a,r.set(n,c+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const wd=new F,Iw=new F,Dw=new ct;class Qr{constructor(e=new F(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=wd.subVectors(n,t).cross(Iw.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(wd),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Dw.getNormalMatrix(e),i=this.coplanarPoint(wd).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Es=new pn,Ml=new F;class Ca{constructor(e=new Qr,t=new Qr,n=new Qr,i=new Qr,r=new Qr,o=new Qr){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ui){const n=this.planes,i=e.elements,r=i[0],o=i[1],a=i[2],c=i[3],l=i[4],u=i[5],h=i[6],d=i[7],f=i[8],p=i[9],_=i[10],g=i[11],m=i[12],b=i[13],M=i[14],x=i[15];if(n[0].setComponents(c-r,d-l,g-f,x-m).normalize(),n[1].setComponents(c+r,d+l,g+f,x+m).normalize(),n[2].setComponents(c+o,d+u,g+p,x+b).normalize(),n[3].setComponents(c-o,d-u,g-p,x-b).normalize(),n[4].setComponents(c-a,d-h,g-_,x-M).normalize(),t===Ui)n[5].setComponents(c+a,d+h,g+_,x+M).normalize();else if(t===xc)n[5].setComponents(a,h,_,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Es.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Es.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Es)}intersectsSprite(e){return Es.center.set(0,0,0),Es.radius=.7071067811865476,Es.applyMatrix4(e.matrixWorld),this.intersectsSphere(Es)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Ml.x=i.normal.x>0?e.max.x:e.min.x,Ml.y=i.normal.y>0?e.max.y:e.min.y,Ml.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Ml)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const Qi=new je,er=new Ca;class xh{constructor(){this.coordinateSystem=Ui}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Qi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),er.setFromProjectionMatrix(Qi,this.coordinateSystem),er.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Qi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),er.setFromProjectionMatrix(Qi,this.coordinateSystem),er.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Qi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),er.setFromProjectionMatrix(Qi,this.coordinateSystem),er.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Qi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),er.setFromProjectionMatrix(Qi,this.coordinateSystem),er.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let n=0;n<t.cameras.length;n++){const i=t.cameras[n];if(Qi.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),er.setFromProjectionMatrix(Qi,this.coordinateSystem),er.containsPoint(e))return!0}return!1}clone(){return new xh}}function Ed(s,e){return s-e}function Lw(s,e){return s.z-e.z}function Ow(s,e){return e.z-s.z}class Nw{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const r=this.pool,o=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const a=r[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=n,a.index=i}reset(){this.list.length=0,this.index=0}}const ni=new je,Uw=new Ce(1,1,1),Bv=new Ca,Fw=new xh,bl=new fn,As=new pn,Wa=new F,zv=new F,Bw=new F,Ad=new Nw,Un=new en,Sl=[];function zw(s,e,t=0){const n=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let o=0;o<n;o++)e.setComponent(r+t,o,s.getComponent(r,o))}else e.array.set(s.array,t*n);e.needsUpdate=!0}function Cs(s,e){if(s.constructor!==e.constructor){const t=Math.min(s.length,e.length);for(let n=0;n<t;n++)e[n]=s[n]}else{const t=Math.min(s.length,e.length);e.set(new s.constructor(s.buffer,0,t))}}class kM extends en{constructor(e,t,n=t*2,i){super(new st,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new ur(t,e,e,Jn,oi);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new ur(t,e,e,Vc,zr);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new ur(t,e,e,Jn,oi);n.colorSpace=_t.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in e.attributes){const o=e.getAttribute(r),{array:a,itemSize:c,normalized:l}=o,u=new a.constructor(n*c),h=new Ot(u,c,l);t.setAttribute(r,h)}if(e.getIndex()!==null){const r=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new Ot(r,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new fn);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,ni),this.getBoundingBoxAt(r,bl).applyMatrix4(ni),e.union(bl)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new pn);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const r=t[n].geometryIndex;this.getMatrixAt(n,ni),this.getBoundingSphereAt(r,As).applyMatrix4(ni),e.union(As)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Ed),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const r=this._matricesTexture;ni.identity().toArray(r.image.data,i*16),r.needsUpdate=!0;const o=this._colorsTexture;return o&&(Uw.toArray(o.image.data,i*4),o.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?o.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let c;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Ed),c=this._availableGeometryIds.shift(),r[c]=i):(c=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(c,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,c}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(i&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const c=a.vertexStart,l=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const u in n.attributes){const h=t.getAttribute(u),d=n.getAttribute(u);zw(h,d,c);const f=h.itemSize;for(let p=h.count,_=l;p<_;p++){const g=c+p;for(let m=0;m<f;m++)d.setComponent(g,m,0)}d.needsUpdate=!0,d.addUpdateRange(c*f,l*f)}if(i){const u=a.indexStart,h=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let d=0;d<o.count;d++)r.setX(u+d,c+o.getX(d));for(let d=o.count,f=h;d<f;d++)r.setX(u+d,c);r.needsUpdate=!0,r.addUpdateRange(u,a.reservedIndexCount)}return a.start=i?a.indexStart:a.vertexStart,a.count=i?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,r=n.length;i<r;i++)n[i].active&&n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((o,a)=>a).sort((o,a)=>n[o].vertexStart-n[a].vertexStart),r=this.geometry;for(let o=0,a=n.length;o<a;o++){const c=i[o],l=n[c];if(l.active!==!1){if(r.index!==null){if(l.indexStart!==t){const{indexStart:u,vertexStart:h,reservedIndexCount:d}=l,f=r.index,p=f.array,_=e-h;for(let g=u;g<u+d;g++)p[g]=p[g]+_;f.array.copyWithin(t,u,u+d),f.addUpdateRange(t,d),l.indexStart=t}t+=l.reservedIndexCount}if(l.vertexStart!==e){const{vertexStart:u,reservedVertexCount:h}=l,d=r.attributes;for(const f in d){const p=d[f],{array:_,itemSize:g}=p;_.copyWithin(e*g,u*g,(u+h)*g),p.addUpdateRange(e*g,h*g)}l.vertexStart=e}e+=l.reservedVertexCount,l.start=r.index?l.indexStart:l.vertexStart,this._nextIndexStart=r.index?l.indexStart+l.reservedIndexCount:0,this._nextVertexStart=l.vertexStart+l.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const r=new fn,o=n.index,a=n.attributes.position;for(let c=i.start,l=i.start+i.count;c<l;c++){let u=c;o&&(u=o.getX(u)),r.expandByPoint(Wa.fromBufferAttribute(a,u))}i.boundingBox=r}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const r=new pn;this.getBoundingBoxAt(e,bl),bl.getCenter(r.center);const o=n.index,a=n.attributes.position;let c=0;for(let l=i.start,u=i.start+i.count;l<u;l++){let h=l;o&&(h=o.getX(h)),Wa.fromBufferAttribute(a,h),c=Math.max(c,r.center.distanceToSquared(Wa))}r.radius=Math.sqrt(c),i.boundingSphere=r}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const n=this._matricesTexture,i=this._matricesTexture.image.data;return t.toArray(i,e*16),n.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(Ed);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),r=new Int32Array(e);Cs(this._multiDrawCounts,i),Cs(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,c=this._colorsTexture;o.dispose(),this._initIndirectTexture(),Cs(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Cs(a.image.data,this._matricesTexture.image.data),c&&(c.dispose(),this._initColorsTexture(),Cs(c.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...n.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(c=>c.indexStart+c.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new st,this._initializeGeometry(r));const o=this.geometry;r.index&&Cs(r.index.array,o.index.array);for(const a in r.attributes)Cs(r.attributes[a].array,o.attributes[a].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,o=this.geometry;Un.material=this.material,Un.geometry.index=o.index,Un.geometry.attributes=o.attributes,Un.geometry.boundingBox===null&&(Un.geometry.boundingBox=new fn),Un.geometry.boundingSphere===null&&(Un.geometry.boundingSphere=new pn);for(let a=0,c=n.length;a<c;a++){if(!n[a].visible||!n[a].active)continue;const l=n[a].geometryIndex,u=i[l];Un.geometry.setDrawRange(u.start,u.count),this.getMatrixAt(a,Un.matrixWorld).premultiply(r),this.getBoundingBoxAt(l,Un.geometry.boundingBox),this.getBoundingSphereAt(l,Un.geometry.boundingSphere),Un.raycast(e,Sl);for(let h=0,d=Sl.length;h<d;h++){const f=Sl[h];f.object=this,f.batchId=a,t.push(f)}Sl.length=0}Un.material=null,Un.geometry.index=null,Un.geometry.attributes={},Un.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._availableInstanceIds=e._availableInstanceIds.slice(),this._availableGeometryIds=e._availableGeometryIds.slice(),this._nextIndexStart=e._nextIndexStart,this._nextVertexStart=e._nextVertexStart,this._geometryCount=e._geometryCount,this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._indirectTexture=e._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=i.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,c=this._instanceInfo,l=this._multiDrawStarts,u=this._multiDrawCounts,h=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data,_=n.isArrayCamera?Fw:Bv;d&&!n.isArrayCamera&&(ni.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Bv.setFromProjectionMatrix(ni,e.coordinateSystem));let g=0;if(this.sortObjects){ni.copy(this.matrixWorld).invert(),Wa.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ni),zv.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(ni);for(let M=0,x=c.length;M<x;M++)if(c[M].visible&&c[M].active){const A=c[M].geometryIndex;this.getMatrixAt(M,ni),this.getBoundingSphereAt(A,As).applyMatrix4(ni);let C=!1;if(d&&(C=!_.intersectsSphere(As,n)),!C){const D=h[A],O=Bw.subVectors(As.center,Wa).dot(zv);Ad.push(D.start,D.count,O,M)}}const m=Ad.list,b=this.customSort;b===null?m.sort(r.transparent?Ow:Lw):b.call(this,m,n);for(let M=0,x=m.length;M<x;M++){const A=m[M];l[g]=A.start*a,u[g]=A.count,p[g]=A.index,g++}Ad.reset()}else for(let m=0,b=c.length;m<b;m++)if(c[m].visible&&c[m].active){const M=c[m].geometryIndex;let x=!1;if(d&&(this.getMatrixAt(m,ni),this.getBoundingSphereAt(M,As).applyMatrix4(ni),x=!_.intersectsSphere(As,n)),!x){const A=h[M];l[g]=A.start*a,u[g]=A.count,p[g]=m,g++}}f.needsUpdate=!0,this._multiDrawCount=g,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,o){this.onBeforeRender(e,null,i,r,o)}}class Wn extends yn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ce(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Gu=new F,Wu=new F,kv=new je,Xa=new yo,Tl=new pn,Cd=new F,Vv=new F;class kr extends Tt{constructor(e=new st,t=new Wn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Gu.fromBufferAttribute(t,i-1),Wu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Gu.distanceTo(Wu);e.setAttribute("lineDistance",new ke(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Tl.copy(n.boundingSphere),Tl.applyMatrix4(i),Tl.radius+=r,e.ray.intersectsSphere(Tl)===!1)return;kv.copy(i).invert(),Xa.copy(e.ray).applyMatrix4(kv);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=this.isLineSegments?2:1,u=n.index,d=n.attributes.position;if(u!==null){const f=Math.max(0,o.start),p=Math.min(u.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=u.getX(_),b=u.getX(_+1),M=wl(this,e,Xa,c,m,b,_);M&&t.push(M)}if(this.isLineLoop){const _=u.getX(p-1),g=u.getX(f),m=wl(this,e,Xa,c,_,g,p-1);m&&t.push(m)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=wl(this,e,Xa,c,_,_+1,_);m&&t.push(m)}if(this.isLineLoop){const _=wl(this,e,Xa,c,p-1,f,p-1);_&&t.push(_)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function wl(s,e,t,n,i,r,o){const a=s.geometry.attributes.position;if(Gu.fromBufferAttribute(a,i),Wu.fromBufferAttribute(a,r),t.distanceSqToSegment(Gu,Wu,Cd,Vv)>n)return;Cd.applyMatrix4(s.matrixWorld);const l=e.ray.origin.distanceTo(Cd);if(!(l<e.near||l>e.far))return{distance:l,point:Vv.clone().applyMatrix4(s.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:s}}const Hv=new F,Gv=new F;class Zi extends kr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Hv.fromBufferAttribute(t,i),Gv.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Hv.distanceTo(Gv);e.setAttribute("lineDistance",new ke(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class xp extends kr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Mh extends yn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ce(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Wv=new je,xf=new yo,El=new pn,Al=new F;class Mp extends Tt{constructor(e=new st,t=new Mh){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),El.copy(n.boundingSphere),El.applyMatrix4(i),El.radius+=r,e.ray.intersectsSphere(El)===!1)return;Wv.copy(i).invert(),xf.copy(e.ray).applyMatrix4(Wv);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=n.index,h=n.attributes.position;if(l!==null){const d=Math.max(0,o.start),f=Math.min(l.count,o.start+o.count);for(let p=d,_=f;p<_;p++){const g=l.getX(p);Al.fromBufferAttribute(h,g),Xv(Al,g,c,i,e,t,this)}}else{const d=Math.max(0,o.start),f=Math.min(h.count,o.start+o.count);for(let p=d,_=f;p<_;p++)Al.fromBufferAttribute(h,p),Xv(Al,p,c,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const a=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Xv(s,e,t,n,i,r,o){const a=xf.distanceSqToPoint(s);if(a<t){const c=new F;xf.closestPointToPoint(s,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;r.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class VM extends Xt{constructor(e,t,n,i,r=rn,o=rn,a,c,l){super(e,t,n,i,r,o,a,c,l),this.isVideoTexture=!0,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class kw extends VM{constructor(e,t,n,i,r,o,a,c){super({},e,t,n,i,r,o,a,c),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class Vw extends Xt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=vn,this.minFilter=vn,this.generateMipmaps=!1,this.needsUpdate=!0}}class bh extends Xt{constructor(e,t,n,i,r,o,a,c,l,u,h,d){super(null,o,a,c,l,u,i,r,h,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Hw extends bh{constructor(e,t,n,i,r,o){super(e,t,n,r,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=bi,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Gw extends bh{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,Br),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class Ww extends Xt{constructor(e,t,n,i,r,o,a,c,l){super(e,t,n,i,r,o,a,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Sh extends Xt{constructor(e,t,n=zr,i,r,o,a=vn,c=vn,l,u=da){if(u!==da&&u!==fa)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,i,r,o,a,c,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new rs(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Xw extends Sh{constructor(e=1,t=1,n=1){super(e,t),this.isDepthArrayTexture=!0,this.image={width:e,height:t,depth:n},this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Th extends st{constructor(e=1,t=1,n=4,i=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i,heightSegments:r},t=Math.max(0,t),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),r=Math.max(1,Math.floor(r));const o=[],a=[],c=[],l=[],u=t/2,h=Math.PI/2*e,d=t,f=2*h+d,p=n*2+r,_=i+1,g=new F,m=new F;for(let b=0;b<=p;b++){let M=0,x=0,A=0,C=0;if(b<=n){const w=b/n,E=w*Math.PI/2;x=-u-e*Math.cos(E),A=e*Math.sin(E),C=-e*Math.cos(E),M=w*h}else if(b<=n+r){const w=(b-n)/r;x=-u+w*t,A=e,C=0,M=h+w*d}else{const w=(b-n-r)/n,E=w*Math.PI/2;x=u+e*Math.sin(E),A=e*Math.cos(E),C=e*Math.sin(E),M=h+d+w*h}const D=Math.max(0,Math.min(1,M/f));let O=0;b===0?O=.5/i:b===p&&(O=-.5/i);for(let w=0;w<=i;w++){const E=w/i,z=E*Math.PI*2,$=Math.sin(z),j=Math.cos(z);m.x=-A*j,m.y=x,m.z=A*$,a.push(m.x,m.y,m.z),g.set(-A*j,C,A*$),g.normalize(),c.push(g.x,g.y,g.z),l.push(E+O,D)}if(b>0){const w=(b-1)*_;for(let E=0;E<i;E++){const z=w+E,$=w+E+1,j=b*_+E,Y=b*_+E+1;o.push(z,$,j),o.push($,Y,j)}}}this.setIndex(o),this.setAttribute("position",new ke(a,3)),this.setAttribute("normal",new ke(c,3)),this.setAttribute("uv",new ke(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Th(e.radius,e.height,e.capSegments,e.radialSegments,e.heightSegments)}}class wh extends st{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],o=[],a=[],c=[],l=new F,u=new le;o.push(0,0,0),a.push(0,0,1),c.push(.5,.5);for(let h=0,d=3;h<=t;h++,d+=3){const f=n+h/t*i;l.x=e*Math.cos(f),l.y=e*Math.sin(f),o.push(l.x,l.y,l.z),a.push(0,0,1),u.x=(o[d]/e+1)/2,u.y=(o[d+1]/e+1)/2,c.push(u.x,u.y)}for(let h=1;h<=t;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new ke(o,3)),this.setAttribute("normal",new ke(a,3)),this.setAttribute("uv",new ke(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class jc extends st{constructor(e=1,t=1,n=1,i=32,r=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:c};const l=this;i=Math.floor(i),r=Math.floor(r);const u=[],h=[],d=[],f=[];let p=0;const _=[],g=n/2;let m=0;b(),o===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(u),this.setAttribute("position",new ke(h,3)),this.setAttribute("normal",new ke(d,3)),this.setAttribute("uv",new ke(f,2));function b(){const x=new F,A=new F;let C=0;const D=(t-e)/n;for(let O=0;O<=r;O++){const w=[],E=O/r,z=E*(t-e)+e;for(let $=0;$<=i;$++){const j=$/i,Y=j*c+a,ee=Math.sin(Y),q=Math.cos(Y);A.x=z*ee,A.y=-E*n+g,A.z=z*q,h.push(A.x,A.y,A.z),x.set(ee,D,q).normalize(),d.push(x.x,x.y,x.z),f.push(j,1-E),w.push(p++)}_.push(w)}for(let O=0;O<i;O++)for(let w=0;w<r;w++){const E=_[w][O],z=_[w+1][O],$=_[w+1][O+1],j=_[w][O+1];(e>0||w!==0)&&(u.push(E,z,j),C+=3),(t>0||w!==r-1)&&(u.push(z,$,j),C+=3)}l.addGroup(m,C,0),m+=C}function M(x){const A=p,C=new le,D=new F;let O=0;const w=x===!0?e:t,E=x===!0?1:-1;for(let $=1;$<=i;$++)h.push(0,g*E,0),d.push(0,E,0),f.push(.5,.5),p++;const z=p;for(let $=0;$<=i;$++){const Y=$/i*c+a,ee=Math.cos(Y),q=Math.sin(Y);D.x=w*q,D.y=g*E,D.z=w*ee,h.push(D.x,D.y,D.z),d.push(0,E,0),C.x=ee*.5+.5,C.y=q*.5*E+.5,f.push(C.x,C.y),p++}for(let $=0;$<i;$++){const j=A+$,Y=z+$;x===!0?u.push(Y,Y+1,j):u.push(Y+1,Y,j),O+=3}l.addGroup(m,O,x===!0?1:2),m+=O}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jc(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class $c extends jc{constructor(e=1,t=1,n=32,i=1,r=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,r,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(e){return new $c(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class xs extends st{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],o=[];a(i),l(n),u(),this.setAttribute("position",new ke(r,3)),this.setAttribute("normal",new ke(r.slice(),3)),this.setAttribute("uv",new ke(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(b){const M=new F,x=new F,A=new F;for(let C=0;C<t.length;C+=3)f(t[C+0],M),f(t[C+1],x),f(t[C+2],A),c(M,x,A,b)}function c(b,M,x,A){const C=A+1,D=[];for(let O=0;O<=C;O++){D[O]=[];const w=b.clone().lerp(x,O/C),E=M.clone().lerp(x,O/C),z=C-O;for(let $=0;$<=z;$++)$===0&&O===C?D[O][$]=w:D[O][$]=w.clone().lerp(E,$/z)}for(let O=0;O<C;O++)for(let w=0;w<2*(C-O)-1;w++){const E=Math.floor(w/2);w%2===0?(d(D[O][E+1]),d(D[O+1][E]),d(D[O][E])):(d(D[O][E+1]),d(D[O+1][E+1]),d(D[O+1][E]))}}function l(b){const M=new F;for(let x=0;x<r.length;x+=3)M.x=r[x+0],M.y=r[x+1],M.z=r[x+2],M.normalize().multiplyScalar(b),r[x+0]=M.x,r[x+1]=M.y,r[x+2]=M.z}function u(){const b=new F;for(let M=0;M<r.length;M+=3){b.x=r[M+0],b.y=r[M+1],b.z=r[M+2];const x=g(b)/2/Math.PI+.5,A=m(b)/Math.PI+.5;o.push(x,1-A)}p(),h()}function h(){for(let b=0;b<o.length;b+=6){const M=o[b+0],x=o[b+2],A=o[b+4],C=Math.max(M,x,A),D=Math.min(M,x,A);C>.9&&D<.1&&(M<.2&&(o[b+0]+=1),x<.2&&(o[b+2]+=1),A<.2&&(o[b+4]+=1))}}function d(b){r.push(b.x,b.y,b.z)}function f(b,M){const x=b*3;M.x=e[x+0],M.y=e[x+1],M.z=e[x+2]}function p(){const b=new F,M=new F,x=new F,A=new F,C=new le,D=new le,O=new le;for(let w=0,E=0;w<r.length;w+=9,E+=6){b.set(r[w+0],r[w+1],r[w+2]),M.set(r[w+3],r[w+4],r[w+5]),x.set(r[w+6],r[w+7],r[w+8]),C.set(o[E+0],o[E+1]),D.set(o[E+2],o[E+3]),O.set(o[E+4],o[E+5]),A.copy(b).add(M).add(x).divideScalar(3);const z=g(A);_(C,E+0,b,z),_(D,E+2,M,z),_(O,E+4,x,z)}}function _(b,M,x,A){A<0&&b.x===1&&(o[M]=b.x-1),x.x===0&&x.z===0&&(o[M]=A/2/Math.PI+.5)}function g(b){return Math.atan2(b.z,-b.x)}function m(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new xs(e.vertices,e.indices,e.radius,e.details)}}class Eh extends xs{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Eh(e.radius,e.detail)}}const Cl=new F,Rl=new F,Rd=new F,Pl=new si;class HM extends st{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(io*t),o=e.getIndex(),a=e.getAttribute("position"),c=o?o.count:a.count,l=[0,0,0],u=["a","b","c"],h=new Array(3),d={},f=[];for(let p=0;p<c;p+=3){o?(l[0]=o.getX(p),l[1]=o.getX(p+1),l[2]=o.getX(p+2)):(l[0]=p,l[1]=p+1,l[2]=p+2);const{a:_,b:g,c:m}=Pl;if(_.fromBufferAttribute(a,l[0]),g.fromBufferAttribute(a,l[1]),m.fromBufferAttribute(a,l[2]),Pl.getNormal(Rd),h[0]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,h[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,h[2]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let b=0;b<3;b++){const M=(b+1)%3,x=h[b],A=h[M],C=Pl[u[b]],D=Pl[u[M]],O=`${x}_${A}`,w=`${A}_${x}`;w in d&&d[w]?(Rd.dot(d[w].normal)<=r&&(f.push(C.x,C.y,C.z),f.push(D.x,D.y,D.z)),d[w]=null):O in d||(d[O]={index0:l[b],index1:l[M],normal:Rd.clone()})}}for(const p in d)if(d[p]){const{index0:_,index1:g}=d[p];Cl.fromBufferAttribute(a,_),Rl.fromBufferAttribute(a,g),f.push(Cl.x,Cl.y,Cl.z),f.push(Rl.x,Rl.y,Rl.z)}this.setAttribute("position",new ke(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ki{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){const n=this.getLengths();let i=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let a=0,c=r-1,l;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),l=n[i]-o,l<0)a=i+1;else if(l>0)c=i-1;else{c=i;break}if(i=c,n[i]===o)return i/(r-1);const u=n[i],d=n[i+1]-u,f=(o-u)/d;return(i+f)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),a=this.getPoint(r),c=t||(o.isVector2?new le:new F);return c.copy(a).sub(o).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){const n=new F,i=[],r=[],o=[],a=new F,c=new je;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new F)}r[0]=new F,o[0]=new F;let l=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=l&&(l=u,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),d<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(rt(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(c.makeRotationAxis(a,p))}o[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(rt(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(a.crossVectors(r[0],r[e]))>0&&(f=-f);for(let p=1;p<=e;p++)r[p].applyMatrix4(c.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],r[p])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Ah extends Ki{constructor(e=0,t=0,n=1,i=1,r=0,o=Math.PI*2,a=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=a,this.aRotation=c}getPoint(e,t=new le){const n=t,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const a=this.aStartAngle+e*r;let c=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=c-this.aX,f=l-this.aY;c=d*u-f*h+this.aX,l=d*h+f*u+this.aY}return n.set(c,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class GM extends Ah{constructor(e,t,n,i,r,o){super(e,t,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function bp(){let s=0,e=0,t=0,n=0;function i(r,o,a,c){s=r,e=a,t=-3*r+3*o-2*a-c,n=2*r-2*o+a+c}return{initCatmullRom:function(r,o,a,c,l){i(o,a,l*(a-r),l*(c-o))},initNonuniformCatmullRom:function(r,o,a,c,l,u,h){let d=(o-r)/l-(a-r)/(l+u)+(a-o)/u,f=(a-o)/u-(c-o)/(u+h)+(c-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(r){const o=r*r,a=o*r;return s+e*r+t*o+n*a}}}const Il=new F,Pd=new bp,Id=new bp,Dd=new bp;class WM extends Ki{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new F){const n=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let a=Math.floor(o),c=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:c===0&&a===r-1&&(a=r-2,c=1);let l,u;this.closed||a>0?l=i[(a-1)%r]:(Il.subVectors(i[0],i[1]).add(i[0]),l=Il);const h=i[a%r],d=i[(a+1)%r];if(this.closed||a+2<r?u=i[(a+2)%r]:(Il.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=Il),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(h),f),_=Math.pow(h.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(u),f);_<1e-4&&(_=1),p<1e-4&&(p=_),g<1e-4&&(g=_),Pd.initNonuniformCatmullRom(l.x,h.x,d.x,u.x,p,_,g),Id.initNonuniformCatmullRom(l.y,h.y,d.y,u.y,p,_,g),Dd.initNonuniformCatmullRom(l.z,h.z,d.z,u.z,p,_,g)}else this.curveType==="catmullrom"&&(Pd.initCatmullRom(l.x,h.x,d.x,u.x,this.tension),Id.initCatmullRom(l.y,h.y,d.y,u.y,this.tension),Dd.initCatmullRom(l.z,h.z,d.z,u.z,this.tension));return n.set(Pd.calc(c),Id.calc(c),Dd.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new F().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function jv(s,e,t,n,i){const r=(n-e)*.5,o=(i-t)*.5,a=s*s,c=s*a;return(2*t-2*n+r+o)*c+(-3*t+3*n-2*r-o)*a+r*s+t}function jw(s,e){const t=1-s;return t*t*e}function $w(s,e){return 2*(1-s)*s*e}function qw(s,e){return s*s*e}function cc(s,e,t,n){return jw(s,e)+$w(s,t)+qw(s,n)}function Yw(s,e){const t=1-s;return t*t*t*e}function Zw(s,e){const t=1-s;return 3*t*t*s*e}function Kw(s,e){return 3*(1-s)*s*s*e}function Jw(s,e){return s*s*s*e}function lc(s,e,t,n,i){return Yw(s,e)+Zw(s,t)+Kw(s,n)+Jw(s,i)}class Sp extends Ki{constructor(e=new le,t=new le,n=new le,i=new le){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new le){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(lc(e,i.x,r.x,o.x,a.x),lc(e,i.y,r.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class XM extends Ki{constructor(e=new F,t=new F,n=new F,i=new F){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new F){const n=t,i=this.v0,r=this.v1,o=this.v2,a=this.v3;return n.set(lc(e,i.x,r.x,o.x,a.x),lc(e,i.y,r.y,o.y,a.y),lc(e,i.z,r.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Tp extends Ki{constructor(e=new le,t=new le){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new le){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new le){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class jM extends Ki{constructor(e=new F,t=new F){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new F){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new F){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class wp extends Ki{constructor(e=new le,t=new le,n=new le){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new le){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(cc(e,i.x,r.x,o.x),cc(e,i.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ep extends Ki{constructor(e=new F,t=new F,n=new F){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new F){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(cc(e,i.x,r.x,o.x),cc(e,i.y,r.y,o.y),cc(e,i.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ap extends Ki{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new le){const n=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),a=r-o,c=i[o===0?o:o-1],l=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(jv(a,c.x,l.x,u.x,h.x),jv(a,c.y,l.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new le().fromArray(i))}return this}}var Xu=Object.freeze({__proto__:null,ArcCurve:GM,CatmullRomCurve3:WM,CubicBezierCurve:Sp,CubicBezierCurve3:XM,EllipseCurve:Ah,LineCurve:Tp,LineCurve3:jM,QuadraticBezierCurve:wp,QuadraticBezierCurve3:Ep,SplineCurve:Ap});class $M extends Ki{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Xu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,a=this.curves[r],c=a.getLength(),l=c===0?0:1-o/c;return a.getPointAt(l,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,c=o.getPoints(a);for(let l=0;l<c.length;l++){const u=c[l];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Xu[i.type]().fromJSON(i))}return this}}class ju extends $M{constructor(e){super(),this.type="Path",this.currentPoint=new le,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Tp(this.currentPoint.clone(),new le(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new wp(this.currentPoint.clone(),new le(e,t),new le(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,o){const a=new Sp(this.currentPoint.clone(),new le(e,t),new le(n,i),new le(r,o));return this.curves.push(a),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Ap(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,o){const a=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+a,t+c,n,i,r,o),this}absarc(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this}ellipse(e,t,n,i,r,o,a,c){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,n,i,r,o,a,c),this}absellipse(e,t,n,i,r,o,a,c){const l=new Ah(e,t,n,i,r,o,a,c);if(this.curves.length>0){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ro extends ju{constructor(e){super(e),this.uuid=wi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new ju().fromJSON(i))}return this}}function Qw(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=qM(s,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let a,c,l;if(n&&(r=rE(s,e,r,t)),s.length>80*t){a=1/0,c=1/0;let u=-1/0,h=-1/0;for(let d=t;d<i;d+=t){const f=s[d],p=s[d+1];f<a&&(a=f),p<c&&(c=p),f>u&&(u=f),p>h&&(h=p)}l=Math.max(u-a,h-c),l=l!==0?32767/l:0}return bc(r,o,t,a,c,l,0),o}function qM(s,e,t,n,i){let r;if(i===mE(s,e,t,n)>0)for(let o=e;o<t;o+=n)r=$v(o/n|0,s[o],s[o+1],r);else for(let o=t-n;o>=e;o-=n)r=$v(o/n|0,s[o],s[o+1],r);return r&&va(r,r.next)&&(Tc(r),r=r.next),r}function ho(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(va(t,t.next)||Kt(t.prev,t,t.next)===0)){if(Tc(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function bc(s,e,t,n,i,r,o){if(!s)return;!o&&r&&lE(s,n,i,r);let a=s;for(;s.prev!==s.next;){const c=s.prev,l=s.next;if(r?tE(s,n,i,r):eE(s)){e.push(c.i,s.i,l.i),Tc(s),s=l.next,a=l.next;continue}if(s=l,s===a){o?o===1?(s=nE(ho(s),e),bc(s,e,t,n,i,r,2)):o===2&&iE(s,e,t,n,i,r):bc(ho(s),e,t,n,i,r,1);break}}}function eE(s){const e=s.prev,t=s,n=s.next;if(Kt(e,t,n)>=0)return!1;const i=e.x,r=t.x,o=n.x,a=e.y,c=t.y,l=n.y,u=Math.min(i,r,o),h=Math.min(a,c,l),d=Math.max(i,r,o),f=Math.max(a,c,l);let p=n.next;for(;p!==e;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&Ka(i,a,r,c,o,l,p.x,p.y)&&Kt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function tE(s,e,t,n){const i=s.prev,r=s,o=s.next;if(Kt(i,r,o)>=0)return!1;const a=i.x,c=r.x,l=o.x,u=i.y,h=r.y,d=o.y,f=Math.min(a,c,l),p=Math.min(u,h,d),_=Math.max(a,c,l),g=Math.max(u,h,d),m=Mf(f,p,e,t,n),b=Mf(_,g,e,t,n);let M=s.prevZ,x=s.nextZ;for(;M&&M.z>=m&&x&&x.z<=b;){if(M.x>=f&&M.x<=_&&M.y>=p&&M.y<=g&&M!==i&&M!==o&&Ka(a,u,c,h,l,d,M.x,M.y)&&Kt(M.prev,M,M.next)>=0||(M=M.prevZ,x.x>=f&&x.x<=_&&x.y>=p&&x.y<=g&&x!==i&&x!==o&&Ka(a,u,c,h,l,d,x.x,x.y)&&Kt(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;M&&M.z>=m;){if(M.x>=f&&M.x<=_&&M.y>=p&&M.y<=g&&M!==i&&M!==o&&Ka(a,u,c,h,l,d,M.x,M.y)&&Kt(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;x&&x.z<=b;){if(x.x>=f&&x.x<=_&&x.y>=p&&x.y<=g&&x!==i&&x!==o&&Ka(a,u,c,h,l,d,x.x,x.y)&&Kt(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function nE(s,e){let t=s;do{const n=t.prev,i=t.next.next;!va(n,i)&&ZM(n,t,t.next,i)&&Sc(n,i)&&Sc(i,n)&&(e.push(n.i,t.i,i.i),Tc(t),Tc(t.next),t=s=i),t=t.next}while(t!==s);return ho(t)}function iE(s,e,t,n,i,r){let o=s;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&dE(o,a)){let c=KM(o,a);o=ho(o,o.next),c=ho(c,c.next),bc(o,e,t,n,i,r,0),bc(c,e,t,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function rE(s,e,t,n){const i=[];for(let r=0,o=e.length;r<o;r++){const a=e[r]*n,c=r<o-1?e[r+1]*n:s.length,l=qM(s,a,c,n,!1);l===l.next&&(l.steiner=!0),i.push(hE(l))}i.sort(sE);for(let r=0;r<i.length;r++)t=oE(i[r],t);return t}function sE(s,e){let t=s.x-e.x;if(t===0&&(t=s.y-e.y,t===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(e.next.y-e.y)/(e.next.x-e.x);t=n-i}return t}function oE(s,e){const t=aE(s,e);if(!t)return e;const n=KM(t,s);return ho(n,n.next),ho(t,t.next)}function aE(s,e){let t=e;const n=s.x,i=s.y;let r=-1/0,o;if(va(s,t))return t;do{if(va(s,t.next))return t.next;if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const h=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(h<=n&&h>r&&(r=h,o=t.x<t.next.x?t:t.next,h===n))return o}t=t.next}while(t!==e);if(!o)return null;const a=o,c=o.x,l=o.y;let u=1/0;t=o;do{if(n>=t.x&&t.x>=c&&n!==t.x&&YM(i<l?n:r,i,c,l,i<l?r:n,i,t.x,t.y)){const h=Math.abs(i-t.y)/(n-t.x);Sc(t,s)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&cE(o,t)))&&(o=t,u=h)}t=t.next}while(t!==a);return o}function cE(s,e){return Kt(s.prev,s,e.prev)<0&&Kt(e.next,s,s.next)<0}function lE(s,e,t,n){let i=s;do i.z===0&&(i.z=Mf(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,uE(i)}function uE(s){let e,t=1;do{let n=s,i;s=null;let r=null;for(e=0;n;){e++;let o=n,a=0;for(let l=0;l<t&&(a++,o=o.nextZ,!!o);l++);let c=t;for(;a>0||c>0&&o;)a!==0&&(c===0||!o||n.z<=o.z)?(i=n,n=n.nextZ,a--):(i=o,o=o.nextZ,c--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;n=o}r.nextZ=null,t*=2}while(e>1);return s}function Mf(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function hE(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function YM(s,e,t,n,i,r,o,a){return(i-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(i-o)*(n-a)}function Ka(s,e,t,n,i,r,o,a){return!(s===o&&e===a)&&YM(s,e,t,n,i,r,o,a)}function dE(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!fE(s,e)&&(Sc(s,e)&&Sc(e,s)&&pE(s,e)&&(Kt(s.prev,s,e.prev)||Kt(s,e.prev,e))||va(s,e)&&Kt(s.prev,s,s.next)>0&&Kt(e.prev,e,e.next)>0)}function Kt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function va(s,e){return s.x===e.x&&s.y===e.y}function ZM(s,e,t,n){const i=Ll(Kt(s,e,t)),r=Ll(Kt(s,e,n)),o=Ll(Kt(t,n,s)),a=Ll(Kt(t,n,e));return!!(i!==r&&o!==a||i===0&&Dl(s,t,e)||r===0&&Dl(s,n,e)||o===0&&Dl(t,s,n)||a===0&&Dl(t,e,n))}function Dl(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Ll(s){return s>0?1:s<0?-1:0}function fE(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&ZM(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Sc(s,e){return Kt(s.prev,s,s.next)<0?Kt(s,e,s.next)>=0&&Kt(s,s.prev,e)>=0:Kt(s,e,s.prev)<0||Kt(s,s.next,e)<0}function pE(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function KM(s,e){const t=bf(s.i,s.x,s.y),n=bf(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function $v(s,e,t,n){const i=bf(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Tc(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function bf(s,e,t){return{i:s,x:e,y:t,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function mE(s,e,t,n){let i=0;for(let r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class gE{static triangulate(e,t,n=2){return Qw(e,t,n)}}class ji{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return ji.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];qv(e),Yv(n,e);let o=e.length;t.forEach(qv);for(let c=0;c<t.length;c++)i.push(o),o+=t[c].length,Yv(n,t[c]);const a=gE.triangulate(n,i);for(let c=0;c<a.length;c+=3)r.push(a.slice(c,c+3));return r}}function qv(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function Yv(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class Ch extends st{constructor(e=new ro([new le(.5,.5),new le(-.5,.5),new le(-.5,-.5),new le(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let a=0,c=e.length;a<c;a++){const l=e[a];o(l)}this.setAttribute("position",new ke(i,3)),this.setAttribute("uv",new ke(r,2)),this.computeVertexNormals();function o(a){const c=[],l=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,_=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const m=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:_E;let M,x=!1,A,C,D,O;m&&(M=m.getSpacedPoints(u),x=!0,d=!1,A=m.computeFrenetFrames(u,!1),C=new F,D=new F,O=new F),d||(g=0,f=0,p=0,_=0);const w=a.extractPoints(l);let E=w.shape;const z=w.holes;if(!ji.isClockWise(E)){E=E.reverse();for(let B=0,be=z.length;B<be;B++){const ie=z[B];ji.isClockWise(ie)&&(z[B]=ie.reverse())}}function j(B){const ie=10000000000000001e-36;let re=B[0];for(let te=1;te<=B.length;te++){const Se=te%B.length,ue=B[Se],U=ue.x-re.x,P=ue.y-re.y,W=U*U+P*P,K=Math.max(Math.abs(ue.x),Math.abs(ue.y),Math.abs(re.x),Math.abs(re.y)),oe=ie*K*K;if(W<=oe){B.splice(Se,1),te--;continue}re=ue}}j(E),z.forEach(j);const Y=z.length,ee=E;for(let B=0;B<Y;B++){const be=z[B];E=E.concat(be)}function q(B,be,ie){return be||console.error("THREE.ExtrudeGeometry: vec does not exist"),B.clone().addScaledVector(be,ie)}const se=E.length;function J(B,be,ie){let re,te,Se;const ue=B.x-be.x,U=B.y-be.y,P=ie.x-B.x,W=ie.y-B.y,K=ue*ue+U*U,oe=ue*W-U*P;if(Math.abs(oe)>Number.EPSILON){const Q=Math.sqrt(K),Be=Math.sqrt(P*P+W*W),Me=be.x-U/Q,Ve=be.y+ue/Q,Xe=ie.x-W/Be,he=ie.y+P/Be,Pe=((Xe-Me)*W-(he-Ve)*P)/(ue*W-U*P);re=Me+ue*Pe-B.x,te=Ve+U*Pe-B.y;const $e=re*re+te*te;if($e<=2)return new le(re,te);Se=Math.sqrt($e/2)}else{let Q=!1;ue>Number.EPSILON?P>Number.EPSILON&&(Q=!0):ue<-Number.EPSILON?P<-Number.EPSILON&&(Q=!0):Math.sign(U)===Math.sign(W)&&(Q=!0),Q?(re=-U,te=ue,Se=Math.sqrt(K)):(re=ue,te=U,Se=Math.sqrt(K/2))}return new le(re/Se,te/Se)}const ge=[];for(let B=0,be=ee.length,ie=be-1,re=B+1;B<be;B++,ie++,re++)ie===be&&(ie=0),re===be&&(re=0),ge[B]=J(ee[B],ee[ie],ee[re]);const xe=[];let Ae,He=ge.concat();for(let B=0,be=Y;B<be;B++){const ie=z[B];Ae=[];for(let re=0,te=ie.length,Se=te-1,ue=re+1;re<te;re++,Se++,ue++)Se===te&&(Se=0),ue===te&&(ue=0),Ae[re]=J(ie[re],ie[Se],ie[ue]);xe.push(Ae),He=He.concat(Ae)}let lt;if(g===0)lt=ji.triangulateShape(ee,z);else{const B=[],be=[];for(let ie=0;ie<g;ie++){const re=ie/g,te=f*Math.cos(re*Math.PI/2),Se=p*Math.sin(re*Math.PI/2)+_;for(let ue=0,U=ee.length;ue<U;ue++){const P=q(ee[ue],ge[ue],Se);Ke(P.x,P.y,-te),re===0&&B.push(P)}for(let ue=0,U=Y;ue<U;ue++){const P=z[ue];Ae=xe[ue];const W=[];for(let K=0,oe=P.length;K<oe;K++){const Q=q(P[K],Ae[K],Se);Ke(Q.x,Q.y,-te),re===0&&W.push(Q)}re===0&&be.push(W)}}lt=ji.triangulateShape(B,be)}const Z=lt.length,ce=p+_;for(let B=0;B<se;B++){const be=d?q(E[B],He[B],ce):E[B];x?(D.copy(A.normals[0]).multiplyScalar(be.x),C.copy(A.binormals[0]).multiplyScalar(be.y),O.copy(M[0]).add(D).add(C),Ke(O.x,O.y,O.z)):Ke(be.x,be.y,0)}for(let B=1;B<=u;B++)for(let be=0;be<se;be++){const ie=d?q(E[be],He[be],ce):E[be];x?(D.copy(A.normals[B]).multiplyScalar(ie.x),C.copy(A.binormals[B]).multiplyScalar(ie.y),O.copy(M[B]).add(D).add(C),Ke(O.x,O.y,O.z)):Ke(ie.x,ie.y,h/u*B)}for(let B=g-1;B>=0;B--){const be=B/g,ie=f*Math.cos(be*Math.PI/2),re=p*Math.sin(be*Math.PI/2)+_;for(let te=0,Se=ee.length;te<Se;te++){const ue=q(ee[te],ge[te],re);Ke(ue.x,ue.y,h+ie)}for(let te=0,Se=z.length;te<Se;te++){const ue=z[te];Ae=xe[te];for(let U=0,P=ue.length;U<P;U++){const W=q(ue[U],Ae[U],re);x?Ke(W.x,W.y+M[u-1].y,M[u-1].x+ie):Ke(W.x,W.y,h+ie)}}}me(),Te();function me(){const B=i.length/3;if(d){let be=0,ie=se*be;for(let re=0;re<Z;re++){const te=lt[re];Ge(te[2]+ie,te[1]+ie,te[0]+ie)}be=u+g*2,ie=se*be;for(let re=0;re<Z;re++){const te=lt[re];Ge(te[0]+ie,te[1]+ie,te[2]+ie)}}else{for(let be=0;be<Z;be++){const ie=lt[be];Ge(ie[2],ie[1],ie[0])}for(let be=0;be<Z;be++){const ie=lt[be];Ge(ie[0]+se*u,ie[1]+se*u,ie[2]+se*u)}}n.addGroup(B,i.length/3-B,0)}function Te(){const B=i.length/3;let be=0;Ne(ee,be),be+=ee.length;for(let ie=0,re=z.length;ie<re;ie++){const te=z[ie];Ne(te,be),be+=te.length}n.addGroup(B,i.length/3-B,1)}function Ne(B,be){let ie=B.length;for(;--ie>=0;){const re=ie;let te=ie-1;te<0&&(te=B.length-1);for(let Se=0,ue=u+g*2;Se<ue;Se++){const U=se*Se,P=se*(Se+1),W=be+re+U,K=be+te+U,oe=be+te+P,Q=be+re+P;gt(W,K,oe,Q)}}}function Ke(B,be,ie){c.push(B),c.push(be),c.push(ie)}function Ge(B,be,ie){y(B),y(be),y(ie);const re=i.length/3,te=b.generateTopUV(n,i,re-3,re-2,re-1);We(te[0]),We(te[1]),We(te[2])}function gt(B,be,ie,re){y(B),y(be),y(re),y(be),y(ie),y(re);const te=i.length/3,Se=b.generateSideWallUV(n,i,te-6,te-3,te-2,te-1);We(Se[0]),We(Se[1]),We(Se[3]),We(Se[1]),We(Se[2]),We(Se[3])}function y(B){i.push(c[B*3+0]),i.push(c[B*3+1]),i.push(c[B*3+2])}function We(B){r.push(B.x),r.push(B.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return vE(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const a=t[e.shapes[r]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Xu[i.type]().fromJSON(i)),new Ch(n,e.options)}}const _E={generateTopUV:function(s,e,t,n,i){const r=e[t*3],o=e[t*3+1],a=e[n*3],c=e[n*3+1],l=e[i*3],u=e[i*3+1];return[new le(r,o),new le(a,c),new le(l,u)]},generateSideWallUV:function(s,e,t,n,i,r){const o=e[t*3],a=e[t*3+1],c=e[t*3+2],l=e[n*3],u=e[n*3+1],h=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],_=e[r*3],g=e[r*3+1],m=e[r*3+2];return Math.abs(a-u)<Math.abs(o-l)?[new le(o,1-c),new le(l,1-h),new le(d,1-p),new le(_,1-m)]:[new le(a,1-c),new le(u,1-h),new le(f,1-p),new le(g,1-m)]}};function vE(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Rh extends xs{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Rh(e.radius,e.detail)}}class Ph extends st{constructor(e=[new le(0,-.5),new le(.5,0),new le(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=rt(i,0,Math.PI*2);const r=[],o=[],a=[],c=[],l=[],u=1/t,h=new F,d=new le,f=new F,p=new F,_=new F;let g=0,m=0;for(let b=0;b<=e.length-1;b++)switch(b){case 0:g=e[b+1].x-e[b].x,m=e[b+1].y-e[b].y,f.x=m*1,f.y=-g,f.z=m*0,_.copy(f),f.normalize(),c.push(f.x,f.y,f.z);break;case e.length-1:c.push(_.x,_.y,_.z);break;default:g=e[b+1].x-e[b].x,m=e[b+1].y-e[b].y,f.x=m*1,f.y=-g,f.z=m*0,p.copy(f),f.x+=_.x,f.y+=_.y,f.z+=_.z,f.normalize(),c.push(f.x,f.y,f.z),_.copy(p)}for(let b=0;b<=t;b++){const M=n+b*u*i,x=Math.sin(M),A=Math.cos(M);for(let C=0;C<=e.length-1;C++){h.x=e[C].x*x,h.y=e[C].y,h.z=e[C].x*A,o.push(h.x,h.y,h.z),d.x=b/t,d.y=C/(e.length-1),a.push(d.x,d.y);const D=c[3*C+0]*x,O=c[3*C+1],w=c[3*C+0]*A;l.push(D,O,w)}}for(let b=0;b<t;b++)for(let M=0;M<e.length-1;M++){const x=M+b*e.length,A=x,C=x+e.length,D=x+e.length+1,O=x+1;r.push(A,C,O),r.push(D,O,C)}this.setIndex(r),this.setAttribute("position",new ke(o,3)),this.setAttribute("uv",new ke(a,2)),this.setAttribute("normal",new ke(l,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ph(e.points,e.segments,e.phiStart,e.phiLength)}}class qc extends xs{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new qc(e.radius,e.detail)}}class Ra extends st{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,a=Math.floor(n),c=Math.floor(i),l=a+1,u=c+1,h=e/a,d=t/c,f=[],p=[],_=[],g=[];for(let m=0;m<u;m++){const b=m*d-o;for(let M=0;M<l;M++){const x=M*h-r;p.push(x,-b,0),_.push(0,0,1),g.push(M/a),g.push(1-m/c)}}for(let m=0;m<c;m++)for(let b=0;b<a;b++){const M=b+l*m,x=b+l*(m+1),A=b+1+l*(m+1),C=b+1+l*m;f.push(M,x,C),f.push(x,A,C)}this.setIndex(f),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(_,3)),this.setAttribute("uv",new ke(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ra(e.width,e.height,e.widthSegments,e.heightSegments)}}class Ih extends st{constructor(e=.5,t=1,n=32,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],c=[],l=[],u=[];let h=e;const d=(t-e)/i,f=new F,p=new le;for(let _=0;_<=i;_++){for(let g=0;g<=n;g++){const m=r+g/n*o;f.x=h*Math.cos(m),f.y=h*Math.sin(m),c.push(f.x,f.y,f.z),l.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,u.push(p.x,p.y)}h+=d}for(let _=0;_<i;_++){const g=_*(n+1);for(let m=0;m<n;m++){const b=m+g,M=b,x=b+n+1,A=b+n+2,C=b+1;a.push(M,x,C),a.push(x,A,C)}}this.setIndex(a),this.setAttribute("position",new ke(c,3)),this.setAttribute("normal",new ke(l,3)),this.setAttribute("uv",new ke(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ih(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Dh extends st{constructor(e=new ro([new le(0,.5),new le(-.5,-.5),new le(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],o=[];let a=0,c=0;if(Array.isArray(e)===!1)l(e);else for(let u=0;u<e.length;u++)l(e[u]),this.addGroup(a,c,u),a+=c,c=0;this.setIndex(n),this.setAttribute("position",new ke(i,3)),this.setAttribute("normal",new ke(r,3)),this.setAttribute("uv",new ke(o,2));function l(u){const h=i.length/3,d=u.extractPoints(t);let f=d.shape;const p=d.holes;ji.isClockWise(f)===!1&&(f=f.reverse());for(let g=0,m=p.length;g<m;g++){const b=p[g];ji.isClockWise(b)===!0&&(p[g]=b.reverse())}const _=ji.triangulateShape(f,p);for(let g=0,m=p.length;g<m;g++){const b=p[g];f=f.concat(b)}for(let g=0,m=f.length;g<m;g++){const b=f[g];i.push(b.x,b.y,0),r.push(0,0,1),o.push(b.x,b.y)}for(let g=0,m=_.length;g<m;g++){const b=_[g],M=b[0]+h,x=b[1]+h,A=b[2]+h;n.push(M,x,A),c+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return yE(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const o=t[e.shapes[i]];n.push(o)}return new Dh(n,e.curveSegments)}}function yE(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Yc extends st{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const u=[],h=new F,d=new F,f=[],p=[],_=[],g=[];for(let m=0;m<=n;m++){const b=[],M=m/n;let x=0;m===0&&o===0?x=.5/t:m===n&&c===Math.PI&&(x=-.5/t);for(let A=0;A<=t;A++){const C=A/t;h.x=-e*Math.cos(i+C*r)*Math.sin(o+M*a),h.y=e*Math.cos(o+M*a),h.z=e*Math.sin(i+C*r)*Math.sin(o+M*a),p.push(h.x,h.y,h.z),d.copy(h).normalize(),_.push(d.x,d.y,d.z),g.push(C+x,1-M),b.push(l++)}u.push(b)}for(let m=0;m<n;m++)for(let b=0;b<t;b++){const M=u[m][b+1],x=u[m][b],A=u[m+1][b],C=u[m+1][b+1];(m!==0||o>0)&&f.push(M,x,C),(m!==n-1||c<Math.PI)&&f.push(x,A,C)}this.setIndex(f),this.setAttribute("position",new ke(p,3)),this.setAttribute("normal",new ke(_,3)),this.setAttribute("uv",new ke(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Yc(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Lh extends xs{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Lh(e.radius,e.detail)}}class Oh extends st{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],c=[],l=[],u=new F,h=new F,d=new F;for(let f=0;f<=n;f++)for(let p=0;p<=i;p++){const _=p/i*r,g=f/n*Math.PI*2;h.x=(e+t*Math.cos(g))*Math.cos(_),h.y=(e+t*Math.cos(g))*Math.sin(_),h.z=t*Math.sin(g),a.push(h.x,h.y,h.z),u.x=e*Math.cos(_),u.y=e*Math.sin(_),d.subVectors(h,u).normalize(),c.push(d.x,d.y,d.z),l.push(p/i),l.push(f/n)}for(let f=1;f<=n;f++)for(let p=1;p<=i;p++){const _=(i+1)*f+p-1,g=(i+1)*(f-1)+p-1,m=(i+1)*(f-1)+p,b=(i+1)*f+p;o.push(_,g,b),o.push(g,m,b)}this.setIndex(o),this.setAttribute("position",new ke(a,3)),this.setAttribute("normal",new ke(c,3)),this.setAttribute("uv",new ke(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Oh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Nh extends st{constructor(e=1,t=.4,n=64,i=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],l=[],u=[],h=new F,d=new F,f=new F,p=new F,_=new F,g=new F,m=new F;for(let M=0;M<=n;++M){const x=M/n*r*Math.PI*2;b(x,r,o,e,f),b(x+.01,r,o,e,p),g.subVectors(p,f),m.addVectors(p,f),_.crossVectors(g,m),m.crossVectors(_,g),_.normalize(),m.normalize();for(let A=0;A<=i;++A){const C=A/i*Math.PI*2,D=-t*Math.cos(C),O=t*Math.sin(C);h.x=f.x+(D*m.x+O*_.x),h.y=f.y+(D*m.y+O*_.y),h.z=f.z+(D*m.z+O*_.z),c.push(h.x,h.y,h.z),d.subVectors(h,f).normalize(),l.push(d.x,d.y,d.z),u.push(M/n),u.push(A/i)}}for(let M=1;M<=n;M++)for(let x=1;x<=i;x++){const A=(i+1)*(M-1)+(x-1),C=(i+1)*M+(x-1),D=(i+1)*M+x,O=(i+1)*(M-1)+x;a.push(A,C,O),a.push(C,D,O)}this.setIndex(a),this.setAttribute("position",new ke(c,3)),this.setAttribute("normal",new ke(l,3)),this.setAttribute("uv",new ke(u,2));function b(M,x,A,C,D){const O=Math.cos(M),w=Math.sin(M),E=A/x*M,z=Math.cos(E);D.x=C*(2+z)*.5*O,D.y=C*(2+z)*w*.5,D.z=C*Math.sin(E)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Uh extends st{constructor(e=new Ep(new F(-1,-1,0),new F(-1,1,0),new F(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new F,c=new F,l=new le;let u=new F;const h=[],d=[],f=[],p=[];_(),this.setIndex(p),this.setAttribute("position",new ke(h,3)),this.setAttribute("normal",new ke(d,3)),this.setAttribute("uv",new ke(f,2));function _(){for(let M=0;M<t;M++)g(M);g(r===!1?t:0),b(),m()}function g(M){u=e.getPointAt(M/t,u);const x=o.normals[M],A=o.binormals[M];for(let C=0;C<=i;C++){const D=C/i*Math.PI*2,O=Math.sin(D),w=-Math.cos(D);c.x=w*x.x+O*A.x,c.y=w*x.y+O*A.y,c.z=w*x.z+O*A.z,c.normalize(),d.push(c.x,c.y,c.z),a.x=u.x+n*c.x,a.y=u.y+n*c.y,a.z=u.z+n*c.z,h.push(a.x,a.y,a.z)}}function m(){for(let M=1;M<=t;M++)for(let x=1;x<=i;x++){const A=(i+1)*(M-1)+(x-1),C=(i+1)*M+(x-1),D=(i+1)*M+x,O=(i+1)*(M-1)+x;p.push(A,C,O),p.push(C,D,O)}}function b(){for(let M=0;M<=t;M++)for(let x=0;x<=i;x++)l.x=M/t,l.y=x/i,f.push(l.x,l.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Uh(new Xu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class JM extends st{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new F,r=new F;if(e.index!==null){const o=e.attributes.position,a=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:a.count,materialIndex:0}]);for(let l=0,u=c.length;l<u;++l){const h=c[l],d=h.start,f=h.count;for(let p=d,_=d+f;p<_;p+=3)for(let g=0;g<3;g++){const m=a.getX(p+g),b=a.getX(p+(g+1)%3);i.fromBufferAttribute(o,m),r.fromBufferAttribute(o,b),Zv(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let a=0,c=o.count/3;a<c;a++)for(let l=0;l<3;l++){const u=3*a+l,h=3*a+(l+1)%3;i.fromBufferAttribute(o,u),r.fromBufferAttribute(o,h),Zv(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new ke(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Zv(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Kv=Object.freeze({__proto__:null,BoxGeometry:xo,CapsuleGeometry:Th,CircleGeometry:wh,ConeGeometry:$c,CylinderGeometry:jc,DodecahedronGeometry:Eh,EdgesGeometry:HM,ExtrudeGeometry:Ch,IcosahedronGeometry:Rh,LatheGeometry:Ph,OctahedronGeometry:qc,PlaneGeometry:Ra,PolyhedronGeometry:xs,RingGeometry:Ih,ShapeGeometry:Dh,SphereGeometry:Yc,TetrahedronGeometry:Lh,TorusGeometry:Oh,TorusKnotGeometry:Nh,TubeGeometry:Uh,WireframeGeometry:JM});class QM extends yn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ce(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class e1 extends qi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Zc extends yn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ce(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ys,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ai,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class zi extends Zc{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new le(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return rt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ce(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ce(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ce(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class t1 extends yn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ce(16777215),this.specular=new Ce(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ys,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ai,this.combine=kc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class n1 extends yn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ce(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ys,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class i1 extends yn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ys,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class r1 extends yn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ys,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ai,this.combine=kc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cp extends yn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=yM,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Rp extends yn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class s1 extends yn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ce(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ys,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class o1 extends Wn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function qs(s,e){return!s||s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function a1(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function c1(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Sf(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,o=0;o!==n;++r){const a=t[r]*e;for(let c=0;c!==e;++c)i[o++]=s[a+c]}return i}function Pp(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(e.push(r.time),t.push(...o)),r=s[i++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do o=r[n],o!==void 0&&(e.push(r.time),t.push(o)),r=s[i++];while(r!==void 0)}function xE(s,e,t,n,i=30){const r=s.clone();r.name=e;const o=[];for(let c=0;c<r.tracks.length;++c){const l=r.tracks[c],u=l.getValueSize(),h=[],d=[];for(let f=0;f<l.times.length;++f){const p=l.times[f]*i;if(!(p<t||p>=n)){h.push(l.times[f]);for(let _=0;_<u;++_)d.push(l.values[f*u+_])}}h.length!==0&&(l.times=qs(h,l.times.constructor),l.values=qs(d,l.values.constructor),o.push(l))}r.tracks=o;let a=1/0;for(let c=0;c<r.tracks.length;++c)a>r.tracks[c].times[0]&&(a=r.tracks[c].times[0]);for(let c=0;c<r.tracks.length;++c)r.tracks[c].shift(-1*a);return r.resetDuration(),r}function ME(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const l=s.tracks.find(function(m){return m.name===a.name&&m.ValueTypeName===c});if(l===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let d=0;const f=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let _;if(r<=a.times[0]){const m=u,b=h-u;_=a.values.slice(m,b)}else if(r>=a.times[p]){const m=p*h+u,b=m+h-u;_=a.values.slice(m,b)}else{const m=a.createInterpolant(),b=u,M=h-u;m.evaluate(r),_=m.resultBuffer.slice(b,M)}c==="quaternion"&&new Vn().fromArray(_).normalize().conjugate().toArray(_);const g=l.times.length;for(let m=0;m<g;++m){const b=m*f+d;if(c==="quaternion")Vn.multiplyQuaternionsFlat(l.values,b,_,0,l.values,b);else{const M=f-d*2;for(let x=0;x<M;++x)l.values[b+x]-=_[x]}}}return s.blendMode=lp,s}class bE{static convertArray(e,t){return qs(e,t)}static isTypedArray(e){return a1(e)}static getKeyframeOrder(e){return c1(e)}static sortedArray(e,t,n){return Sf(e,t,n)}static flattenJSON(e,t,n,i){Pp(e,t,n,i)}static subclip(e,t,n,i,r=30){return xE(e,t,n,i,r)}static makeClipAdditive(e,t=0,n=e,i=30){return ME(e,t,n,i)}}class Pa{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=r)){const a=t[1];e<a&&(n=2,r=a);for(let c=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===c)break;if(i=r,r=t[--n-1],e>=r)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=n[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class l1 extends Pa{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:js,endingEnd:js}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,o=e+1,a=i[r],c=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case $s:r=e,a=2*t-n;break;case _c:r=i.length-2,a=t+i[r]-i[r+1];break;default:r=e,a=n}if(c===void 0)switch(this.getSettings_().endingEnd){case $s:o=e,c=2*n-t;break;case _c:o=1,c=n+i[1]-i[0];break;default:o=e-1,c=t}const l=(n-t)*.5,u=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(c-n),this._offsetPrev=r*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,l=c-a,u=this._offsetPrev,h=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(n-t)/(i-t),_=p*p,g=_*p,m=-d*g+2*d*_-d*p,b=(1+d)*g+(-1.5-2*d)*_+(-.5+d)*p+1,M=(-1-f)*g+(1.5+f)*_+.5*p,x=f*g-f*_;for(let A=0;A!==a;++A)r[A]=m*o[u+A]+b*o[l+A]+M*o[c+A]+x*o[h+A];return r}}class Ip extends Pa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,l=c-a,u=(n-t)/(i-t),h=1-u;for(let d=0;d!==a;++d)r[d]=o[l+d]*h+o[c+d]*u;return r}}class u1 extends Pa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class ki{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=qs(t,this.TimeBufferType),this.values=qs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:qs(e.times,Array),values:qs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new u1(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Ip(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new l1(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case pa:t=this.InterpolantFactoryMethodDiscrete;break;case ma:t=this.InterpolantFactoryMethodLinear;break;case Kl:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return pa;case this.InterpolantFactoryMethodLinear:return ma;case this.InterpolantFactoryMethodSmooth:return Kl}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const a=this.getValueSize();this.times=n.slice(r,o),this.values=this.values.slice(r*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==r;a++){const c=n[a];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,c),e=!1;break}if(o!==null&&o>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,c,o),e=!1;break}o=c}if(i!==void 0&&a1(i))for(let a=0,c=i.length;a!==c;++a){const l=i[a];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,l),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Kl,r=e.length-1;let o=1;for(let a=1;a<r;++a){let c=!1;const l=e[a],u=e[a+1];if(l!==u&&(a!==1||l!==e[0]))if(i)c=!0;else{const h=a*n,d=h-n,f=h+n;for(let p=0;p!==n;++p){const _=t[h+p];if(_!==t[d+p]||_!==t[f+p]){c=!0;break}}}if(c){if(a!==o){e[o]=e[a];const h=a*n,d=o*n;for(let f=0;f!==n;++f)t[d+f]=t[h+f]}++o}}if(r>0){e[o]=e[r];for(let a=r*n,c=o*n,l=0;l!==n;++l)t[c+l]=t[a+l];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}ki.prototype.ValueTypeName="";ki.prototype.TimeBufferType=Float32Array;ki.prototype.ValueBufferType=Float32Array;ki.prototype.DefaultInterpolation=ma;class Mo extends ki{constructor(e,t,n){super(e,t,n)}}Mo.prototype.ValueTypeName="bool";Mo.prototype.ValueBufferType=Array;Mo.prototype.DefaultInterpolation=pa;Mo.prototype.InterpolantFactoryMethodLinear=void 0;Mo.prototype.InterpolantFactoryMethodSmooth=void 0;class Dp extends ki{constructor(e,t,n,i){super(e,t,n,i)}}Dp.prototype.ValueTypeName="color";class fo extends ki{constructor(e,t,n,i){super(e,t,n,i)}}fo.prototype.ValueTypeName="number";class h1 extends Pa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=(n-t)/(i-t);let l=e*a;for(let u=l+a;l!==u;l+=4)Vn.slerpFlat(r,0,o,l-a,o,l,c);return r}}class po extends ki{constructor(e,t,n,i){super(e,t,n,i)}InterpolantFactoryMethodLinear(e){return new h1(this.times,this.values,this.getValueSize(),e)}}po.prototype.ValueTypeName="quaternion";po.prototype.InterpolantFactoryMethodSmooth=void 0;class bo extends ki{constructor(e,t,n){super(e,t,n)}}bo.prototype.ValueTypeName="string";bo.prototype.ValueBufferType=Array;bo.prototype.DefaultInterpolation=pa;bo.prototype.InterpolantFactoryMethodLinear=void 0;bo.prototype.InterpolantFactoryMethodSmooth=void 0;class mo extends ki{constructor(e,t,n,i){super(e,t,n,i)}}mo.prototype.ValueTypeName="vector";class ya{constructor(e="",t=-1,n=[],i=dh){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=wi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(TE(n[o]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=n.length;r!==o;++r)t.push(ki.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,o=[];for(let a=0;a<r;a++){let c=[],l=[];c.push((a+r-1)%r,a,(a+1)%r),l.push(0,1,0);const u=c1(c);c=Sf(c,1,u),l=Sf(l,1,u),!i&&c[0]===0&&(c.push(r),l.push(l[0])),o.push(new fo(".morphTargetInfluences["+t[a].name+"]",c,l).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,c=e.length;a<c;a++){const l=e[a],u=l.name.match(r);if(u&&u.length>1){const h=u[1];let d=i[h];d||(i[h]=d=[]),d.push(l)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,d,f,p,_){if(f.length!==0){const g=[],m=[];Pp(f,g,m,p),g.length!==0&&_.push(new h(d,g,m))}},i=[],r=e.name||"default",o=e.fps||30,a=e.blendMode;let c=e.length||-1;const l=e.hierarchy||[];for(let h=0;h<l.length;h++){const d=l[h].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let _=0;_<d[p].morphTargets.length;_++)f[d[p].morphTargets[_]]=-1;for(const _ in f){const g=[],m=[];for(let b=0;b!==d[p].morphTargets.length;++b){const M=d[p];g.push(M.time),m.push(M.morphTarget===_?1:0)}i.push(new fo(".morphTargetInfluence["+_+"]",g,m))}c=f.length*o}else{const f=".bones["+t[h].name+"]";n(mo,f+".position",d,"pos",i),n(po,f+".quaternion",d,"rot",i),n(mo,f+".scale",d,"scl",i)}}return i.length===0?null:new this(r,c,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function SE(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return fo;case"vector":case"vector2":case"vector3":case"vector4":return mo;case"color":return Dp;case"quaternion":return po;case"bool":case"boolean":return Mo;case"string":return bo}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function TE(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=SE(s.type);if(s.times===void 0){const t=[],n=[];Pp(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Lr={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Lp{constructor(e,t,n){const i=this;let r=!1,o=0,a=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,r===!1&&i.onStart!==void 0&&i.onStart(u,o,a),r=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,h){return l.push(u,h),this},this.removeHandler=function(u){const h=l.indexOf(u);return h!==-1&&l.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=l.length;h<d;h+=2){const f=l[h],p=l[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return p}return null}}}const So=new Lp;class ei{constructor(e){this.manager=e!==void 0?e:So,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}ei.DEFAULT_MATERIAL_NAME="__DEFAULT";const br={};class wE extends Error{constructor(e,t){super(e),this.response=t}}class Yi extends ei{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Lr.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(br[e]!==void 0){br[e].push({onLoad:t,onProgress:n,onError:i});return}br[e]=[],br[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,c=this.responseType;fetch(o).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const u=br[e],h=l.body.getReader(),d=l.headers.get("X-File-Size")||l.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let _=0;const g=new ReadableStream({start(m){b();function b(){h.read().then(({done:M,value:x})=>{if(M)m.close();else{_+=x.byteLength;const A=new ProgressEvent("progress",{lengthComputable:p,loaded:_,total:f});for(let C=0,D=u.length;C<D;C++){const O=u[C];O.onProgress&&O.onProgress(A)}m.enqueue(x),b()}},M=>{m.error(M)})}}});return new Response(g)}else throw new wE(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return l.json();default:if(a==="")return l.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),d=h&&h[1]?h[1].toLowerCase():void 0,f=new TextDecoder(d);return l.arrayBuffer().then(p=>f.decode(p))}}}).then(l=>{Lr.add(e,l);const u=br[e];delete br[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onLoad&&f.onLoad(l)}}).catch(l=>{const u=br[e];if(u===void 0)throw this.manager.itemError(e),l;delete br[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onError&&f.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class EE extends ei{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Yi(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ya.parse(e[n]);t.push(i)}return t}}class AE extends ei{constructor(e){super(e)}load(e,t,n,i){const r=this,o=[],a=new bh,c=new Yi(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(r.withCredentials);let l=0;function u(h){c.load(e[h],function(d){const f=r.parse(d,!0);o[h]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},l+=1,l===6&&(f.mipmapCount===1&&(a.minFilter=rn),a.image=o,a.format=f.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let h=0,d=e.length;h<d;++h)u(h);else c.load(e,function(h){const d=r.parse(h,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){o[p]={mipmaps:[]};for(let _=0;_<d.mipmapCount;_++)o[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+_]),o[p].format=d.format,o[p].width=d.width,o[p].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=rn),a.format=d.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class wc extends ei{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Lr.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const a=Mc("img");function c(){u(),Lr.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(h){u(),i&&i(h),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){a.removeEventListener("load",c,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class CE extends ei{constructor(e){super(e)}load(e,t,n,i){const r=new Gc;r.colorSpace=gn;const o=new wc(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function c(l){o.load(e[l],function(u){r.images[l]=u,a++,a===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let l=0;l<e.length;++l)c(l);return r}}class RE extends ei{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new ur,a=new Yi(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(c){let l;try{l=r.parse(c)}catch(u){if(i!==void 0)i(u);else{console.error(u);return}}l.image!==void 0?o.image=l.image:l.data!==void 0&&(o.image.width=l.width,o.image.height=l.height,o.image.data=l.data),o.wrapS=l.wrapS!==void 0?l.wrapS:bi,o.wrapT=l.wrapT!==void 0?l.wrapT:bi,o.magFilter=l.magFilter!==void 0?l.magFilter:rn,o.minFilter=l.minFilter!==void 0?l.minFilter:rn,o.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.colorSpace!==void 0&&(o.colorSpace=l.colorSpace),l.flipY!==void 0&&(o.flipY=l.flipY),l.format!==void 0&&(o.format=l.format),l.type!==void 0&&(o.type=l.type),l.mipmaps!==void 0&&(o.mipmaps=l.mipmaps,o.minFilter=Ni),l.mipmapCount===1&&(o.minFilter=rn),l.generateMipmaps!==void 0&&(o.generateMipmaps=l.generateMipmaps),o.needsUpdate=!0,t&&t(o,l)},n,i),o}}class d1 extends ei{constructor(e){super(e)}load(e,t,n,i){const r=new Xt,o=new wc(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){r.image=a,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Ms extends Tt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ce(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class f1 extends Ms{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Tt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ce(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Ld=new je,Jv=new F,Qv=new F;class Op{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new le(512,512),this.mapType=$i,this.map=null,this.mapPass=null,this.matrix=new je,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ca,this._frameExtents=new le(1,1),this._viewportCount=1,this._viewports=[new mt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Jv.setFromMatrixPosition(e.matrixWorld),t.position.copy(Jv),Qv.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Qv),t.updateMatrixWorld(),Ld.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ld),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Ld)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class PE extends Op{constructor(){super(new _n(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=ga*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Np extends Ms{constructor(e,t,n=0,i=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Tt.DEFAULT_UP),this.updateMatrix(),this.target=new Tt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new PE}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const ey=new je,ja=new F,Od=new F;class IE extends Op{constructor(){super(new _n(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new le(4,2),this._viewportCount=6,this._viewports=[new mt(2,1,1,1),new mt(0,1,1,1),new mt(3,1,1,1),new mt(1,1,1,1),new mt(3,0,1,1),new mt(1,0,1,1)],this._cubeDirections=[new F(1,0,0),new F(-1,0,0),new F(0,0,1),new F(0,0,-1),new F(0,1,0),new F(0,-1,0)],this._cubeUps=[new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,0,1),new F(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),ja.setFromMatrixPosition(e.matrixWorld),n.position.copy(ja),Od.copy(n.position),Od.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Od),n.updateMatrixWorld(),i.makeTranslation(-ja.x,-ja.y,-ja.z),ey.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ey)}}class Up extends Ms{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new IE}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Ia extends gh{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,a=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class DE extends Op{constructor(){super(new Ia(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Fp extends Ms{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Tt.DEFAULT_UP),this.updateMatrix(),this.target=new Tt,this.shadow=new DE}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class p1 extends Ms{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class m1 extends Ms{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class g1{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new F)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class _1 extends Ms{constructor(e=new g1,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Fh extends ei{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,o=new Yi(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ce().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(i.uniforms[r]={},o.type){case"t":i.uniforms[r].value=n(o.value);break;case"c":i.uniforms[r].value=new Ce().setHex(o.value);break;case"v2":i.uniforms[r].value=new le().fromArray(o.value);break;case"v3":i.uniforms[r].value=new F().fromArray(o.value);break;case"v4":i.uniforms[r].value=new mt().fromArray(o.value);break;case"m3":i.uniforms[r].value=new ct().fromArray(o.value);break;case"m4":i.uniforms[r].value=new je().fromArray(o.value);break;default:i.uniforms[r].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new le().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new le().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Fh.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:QM,SpriteMaterial:_p,RawShaderMaterial:e1,ShaderMaterial:qi,PointsMaterial:Mh,MeshPhysicalMaterial:zi,MeshStandardMaterial:Zc,MeshPhongMaterial:t1,MeshToonMaterial:n1,MeshNormalMaterial:i1,MeshLambertMaterial:r1,MeshDepthMaterial:Cp,MeshDistanceMaterial:Rp,MeshBasicMaterial:Si,MeshMatcapMaterial:s1,LineDashedMaterial:o1,LineBasicMaterial:Wn,Material:yn};return new t[e]}}class us{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class v1 extends st{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class y1 extends ei{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Yi(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(a){try{t(r.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(f,p){if(t[p]!==void 0)return t[p];const g=f.interleavedBuffers[p],m=r(f,g.buffer),b=$o(g.type,m),M=new Wc(b,g.stride);return M.uuid=g.uuid,t[p]=M,M}function r(f,p){if(n[p]!==void 0)return n[p];const g=f.arrayBuffers[p],m=new Uint32Array(g).buffer;return n[p]=m,m}const o=e.isInstancedBufferGeometry?new v1:new st,a=e.data.index;if(a!==void 0){const f=$o(a.type,a.array);o.setIndex(new Ot(f,1))}const c=e.data.attributes;for(const f in c){const p=c[f];let _;if(p.isInterleavedBufferAttribute){const g=i(e.data,p.data);_=new ms(g,p.itemSize,p.offset,p.normalized)}else{const g=$o(p.type,p.array),m=p.isInstancedBufferAttribute?uo:Ot;_=new m(g,p.itemSize,p.normalized)}p.name!==void 0&&(_.name=p.name),p.usage!==void 0&&_.setUsage(p.usage),o.setAttribute(f,_)}const l=e.data.morphAttributes;if(l)for(const f in l){const p=l[f],_=[];for(let g=0,m=p.length;g<m;g++){const b=p[g];let M;if(b.isInterleavedBufferAttribute){const x=i(e.data,b.data);M=new ms(x,b.itemSize,b.offset,b.normalized)}else{const x=$o(b.type,b.array);M=new Ot(x,b.itemSize,b.normalized)}b.name!==void 0&&(M.name=b.name),_.push(M)}o.morphAttributes[f]=_}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let f=0,p=h.length;f!==p;++f){const _=h[f];o.addGroup(_.start,_.count,_.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const f=new F;d.center!==void 0&&f.fromArray(d.center),o.boundingSphere=new pn(f,d.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class LE extends ei{constructor(e){super(e)}load(e,t,n,i){const r=this,o=this.path===""?us.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Yi(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){let l=null;try{l=JSON.parse(c)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=l.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(l,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?us.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Yi(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),a=JSON.parse(o),c=a.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(l)}),a=this.parseTextures(e.textures,o),c=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,r,c,a,n),u=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,u),this.bindLightTargets(l),t!==void 0){let h=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){h=!0;break}h===!1&&t(l)}return l}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,i,a,o,t),l=this.parseSkeletons(e.skeletons,c);return this.bindSkeletons(c,l),this.bindLightTargets(c),c}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new ro().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=new Xc().fromJSON(e[r],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new y1;for(let r=0,o=e.length;r<o;r++){let a;const c=e[r];switch(c.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(c);break;default:c.type in Kv?a=Kv[c.type].fromJSON(c,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${c.type}"`)}a.uuid=c.uuid,c.name!==void 0&&(a.name=c.name),c.userData!==void 0&&(a.userData=c.userData),n[c.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new Fh;r.setTextures(t);for(let o=0,a=e.length;o<a;o++){const c=e[o];n[c.uuid]===void 0&&(n[c.uuid]=r.parse(c)),i[c.uuid]=n[c.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=ya.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function o(c){return n.manager.itemStart(c),r.load(c,function(){n.manager.itemEnd(c)},void 0,function(){n.manager.itemError(c),n.manager.itemEnd(c)})}function a(c){if(typeof c=="string"){const l=c,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l)?l:n.resourcePath+l;return o(u)}else return c.data?{data:$o(c.type,c.data),width:c.width,height:c.height}:null}if(e!==void 0&&e.length>0){const c=new Lp(t);r=new wc(c),r.setCrossOrigin(this.crossOrigin);for(let l=0,u=e.length;l<u;l++){const h=e[l],d=h.url;if(Array.isArray(d)){const f=[];for(let p=0,_=d.length;p<_;p++){const g=d[p],m=a(g);m!==null&&(m instanceof HTMLImageElement?f.push(m):f.push(new ur(m.data,m.width,m.height)))}i[h.uuid]=new rs(f)}else{const f=a(h.url);i[h.uuid]=new rs(f)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(o){if(typeof o=="string"){const a=o,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(c)}else return o.data?{data:$o(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new wc(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const c=e[o],l=c.url;if(Array.isArray(l)){const u=[];for(let h=0,d=l.length;h<d;h++){const f=l[h],p=await r(f);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new ur(p.data,p.width,p.height)))}n[c.uuid]=new rs(u)}else{const u=await r(c.url);n[c.uuid]=new rs(u)}}}return n}parseTextures(e,t){function n(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const i={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const a=e[r];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const c=t[a.image],l=c.data;let u;Array.isArray(l)?(u=new Gc,l.length===6&&(u.needsUpdate=!0)):(l&&l.data?u=new ur:u=new Xt,l&&(u.needsUpdate=!0)),u.source=c,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,OE)),a.channel!==void 0&&(u.channel=a.channel),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],ty),u.wrapT=n(a.wrap[1],ty)),a.format!==void 0&&(u.format=a.format),a.internalFormat!==void 0&&(u.internalFormat=a.internalFormat),a.type!==void 0&&(u.type=a.type),a.colorSpace!==void 0&&(u.colorSpace=a.colorSpace),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,ny)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,ny)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.generateMipmaps!==void 0&&(u.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(u.compareFunction=a.compareFunction),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(e,t,n,i,r){let o;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function c(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,_=d.length;p<_;p++){const g=d[p];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),f.push(n[g])}return f}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function l(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let u,h;switch(e.type){case"Scene":o=new gp,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Ce(e.background):o.background=l(e.background)),e.environment!==void 0&&(o.environment=l(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new vh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new _h(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new _n(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Ia(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new p1(e.color,e.intensity);break;case"DirectionalLight":o=new Fp(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new Up(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new m1(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Np(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new f1(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new _1().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=c(e.material),o=new vp(u,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=c(e.material),o=new en(u,h);break;case"InstancedMesh":u=a(e.geometry),h=c(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;o=new yp(u,h,d),o.instanceMatrix=new uo(new Float32Array(f.array),16),p!==void 0&&(o.instanceColor=new uo(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":u=a(e.geometry),h=c(e.material),o=new kM(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,h),o.geometry=u,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._geometryInfo=e.geometryInfo.map(_=>{let g=null,m=null;return _.boundingBox!==void 0&&(g=new fn,g.min.fromArray(_.boundingBox.min),g.max.fromArray(_.boundingBox.max)),_.boundingSphere!==void 0&&(m=new pn,m.radius=_.boundingSphere.radius,m.center.fromArray(_.boundingSphere.center)),{..._,boundingBox:g,boundingSphere:m}}),o._instanceInfo=e.instanceInfo,o._availableInstanceIds=e._availableInstanceIds,o._availableGeometryIds=e._availableGeometryIds,o._nextIndexStart=e.nextIndexStart,o._nextVertexStart=e.nextVertexStart,o._geometryCount=e.geometryCount,o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._matricesTexture=l(e.matricesTexture.uuid),o._indirectTexture=l(e.indirectTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=l(e.colorsTexture.uuid)),e.boundingSphere!==void 0&&(o.boundingSphere=new pn,o.boundingSphere.center.fromArray(e.boundingSphere.center),o.boundingSphere.radius=e.boundingSphere.radius),e.boundingBox!==void 0&&(o.boundingBox=new fn,o.boundingBox.min.fromArray(e.boundingBox.min),o.boundingBox.max.fromArray(e.boundingBox.max));break;case"LOD":o=new zM;break;case"Line":o=new kr(a(e.geometry),c(e.material));break;case"LineLoop":o=new xp(a(e.geometry),c(e.material));break;case"LineSegments":o=new Zi(a(e.geometry),c(e.material));break;case"PointCloud":case"Points":o=new Mp(a(e.geometry),c(e.material));break;case"Sprite":o=new BM(c(e.material));break;case"Group":o=new cr;break;case"Bone":o=new yh;break;default:o=new Tt}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],t,n,i,r))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];o.animations.push(r[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],_=o.getObjectByProperty("uuid",p.object);_!==void 0&&o.addLevel(_,p.distance,p.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new Tt}})}}const OE={UVMapping:rh,CubeReflectionMapping:Br,CubeRefractionMapping:fs,EquirectangularReflectionMapping:mc,EquirectangularRefractionMapping:gc,CubeUVReflectionMapping:Ea},ty={RepeatWrapping:ps,ClampToEdgeWrapping:bi,MirroredRepeatWrapping:la},ny={NearestFilter:vn,NearestMipmapNearestFilter:sh,NearestMipmapLinearFilter:Xs,LinearFilter:rn,LinearMipmapNearestFilter:ta,LinearMipmapLinearFilter:Ni};class x1 extends ei{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Lr.get(e);if(o!==void 0){if(r.manager.itemStart(e),o.then){o.then(l=>{t&&t(l),r.manager.itemEnd(e)}).catch(l=>{i&&i(l)});return}return setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const c=fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){return Lr.add(e,l),t&&t(l),r.manager.itemEnd(e),l}).catch(function(l){i&&i(l),Lr.remove(e),r.manager.itemError(e),r.manager.itemEnd(e)});Lr.add(e,c),r.manager.itemStart(e)}}let Ol;class Bp{static getContext(){return Ol===void 0&&(Ol=new(window.AudioContext||window.webkitAudioContext)),Ol}static setContext(e){Ol=e}}class NE extends ei{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Yi(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(c){try{const l=c.slice(0);Bp.getContext().decodeAudioData(l,function(h){t(h)}).catch(a)}catch(l){a(l)}},n,i);function a(c){i?i(c):console.error(c),r.manager.itemError(e)}}}const iy=new je,ry=new je,Rs=new je;class UE{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new _n,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new _n,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Rs.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,o=t.near*Math.tan(io*t.fov*.5)/t.zoom;let a,c;ry.elements[12]=-i,iy.elements[12]=i,a=-o*t.aspect+r,c=o*t.aspect+r,Rs.elements[0]=2*t.near/(c-a),Rs.elements[8]=(c+a)/(c-a),this.cameraL.projectionMatrix.copy(Rs),a=-o*t.aspect-r,c=o*t.aspect-r,Rs.elements[0]=2*t.near/(c-a),Rs.elements[8]=(c+a)/(c-a),this.cameraR.projectionMatrix.copy(Rs)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(ry),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(iy)}}class M1 extends _n{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class b1{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=sy(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=sy();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function sy(){return performance.now()}const Ps=new F,oy=new Vn,FE=new F,Is=new F;class BE extends Tt{constructor(){super(),this.type="AudioListener",this.context=Bp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new b1}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ps,oy,FE),Is.set(0,0,-1).applyQuaternion(oy),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ps.x,i),t.positionY.linearRampToValueAtTime(Ps.y,i),t.positionZ.linearRampToValueAtTime(Ps.z,i),t.forwardX.linearRampToValueAtTime(Is.x,i),t.forwardY.linearRampToValueAtTime(Is.y,i),t.forwardZ.linearRampToValueAtTime(Is.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Ps.x,Ps.y,Ps.z),t.setOrientation(Is.x,Is.y,Is.z,n.x,n.y,n.z)}}class S1 extends Tt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const Ds=new F,ay=new Vn,zE=new F,Ls=new F;class kE extends S1{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ds,ay,zE),Ls.set(0,0,1).applyQuaternion(ay);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Ds.x,n),t.positionY.linearRampToValueAtTime(Ds.y,n),t.positionZ.linearRampToValueAtTime(Ds.z,n),t.orientationX.linearRampToValueAtTime(Ls.x,n),t.orientationY.linearRampToValueAtTime(Ls.y,n),t.orientationZ.linearRampToValueAtTime(Ls.z,n)}else t.setPosition(Ds.x,Ds.y,Ds.z),t.setOrientation(Ls.x,Ls.y,Ls.z)}}class VE{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class T1{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[r+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,r,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-r,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,l=t+t;c!==l;++c)if(n[c]!==n[c+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,o=i;r!==o;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Vn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const o=this._workIndex*r;Vn.multiplyQuaternionsFlat(e,o,e,t,e,n),Vn.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,r){const o=1-i;for(let a=0;a!==r;++a){const c=t+a;e[c]=e[c]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,r){for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const zp="\\[\\]\\.:\\/",HE=new RegExp("["+zp+"]","g"),kp="[^"+zp+"]",GE="[^"+zp.replace("\\.","")+"]",WE=/((?:WC+[\/:])*)/.source.replace("WC",kp),XE=/(WCOD+)?/.source.replace("WCOD",GE),jE=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",kp),$E=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",kp),qE=new RegExp("^"+WE+XE+jE+$E+"$"),YE=["material","materials","bones","map"];class ZE{constructor(e,t,n){const i=n||wt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class wt{constructor(e,t,n){this.path=t,this.parsedPath=n||wt.parseTrackName(t),this.node=wt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new wt.Composite(e,t,n):new wt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(HE,"")}static parseTrackName(e){const t=qE.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);YE.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let o=0;o<r.length;o++){const a=r[o];if(a.name===t||a.uuid===t)return a;const c=n(a.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=wt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let l=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===l){l=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(l!==void 0){if(e[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[l]}}const o=e[i];if(o===void 0){const l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}c=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(c=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}wt.Composite=ZE;wt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};wt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};wt.prototype.GetterByBindingType=[wt.prototype._getValue_direct,wt.prototype._getValue_array,wt.prototype._getValue_arrayElement,wt.prototype._getValue_toArray];wt.prototype.SetterByBindingTypeAndVersioning=[[wt.prototype._setValue_direct,wt.prototype._setValue_direct_setNeedsUpdate,wt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_array,wt.prototype._setValue_array_setNeedsUpdate,wt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_arrayElement,wt.prototype._setValue_arrayElement_setNeedsUpdate,wt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_fromArray,wt.prototype._setValue_fromArray_setNeedsUpdate,wt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class KE{constructor(){this.isAnimationObjectGroup=!0,this.uuid=wi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let a,c=e.length,l=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const d=arguments[u],f=d.uuid;let p=t[f];if(p===void 0){p=c++,t[f]=p,e.push(d);for(let _=0,g=o;_!==g;++_)r[_].push(new wt(d,n[_],i[_]))}else if(p<l){a=e[p];const _=--l,g=e[_];t[g.uuid]=p,e[p]=g,t[f]=_,e[_]=d;for(let m=0,b=o;m!==b;++m){const M=r[m],x=M[_];let A=M[p];M[p]=x,A===void 0&&(A=new wt(d,n[m],i[m])),M[_]=A}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const c=arguments[o],l=c.uuid,u=t[l];if(u!==void 0&&u>=r){const h=r++,d=e[h];t[d.uuid]=u,e[u]=d,t[l]=h,e[h]=c;for(let f=0,p=i;f!==p;++f){const _=n[f],g=_[h],m=_[u];_[u]=g,_[h]=m}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=e.length;for(let a=0,c=arguments.length;a!==c;++a){const l=arguments[a],u=l.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<r){const d=--r,f=e[d],p=--o,_=e[p];t[f.uuid]=h,e[h]=f,t[_.uuid]=d,e[d]=_,e.pop();for(let g=0,m=i;g!==m;++g){const b=n[g],M=b[d],x=b[p];b[h]=M,b[d]=x,b.pop()}}else{const d=--o,f=e[d];d>0&&(t[f.uuid]=h),e[h]=f,e.pop();for(let p=0,_=i;p!==_;++p){const g=n[p];g[h]=g[d],g.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const o=this._paths,a=this._parsedPaths,c=this._objects,l=c.length,u=this.nCachedObjects_,h=new Array(l);i=r.length,n[e]=i,o.push(e),a.push(t),r.push(h);for(let d=u,f=c.length;d!==f;++d){const p=c[d];h[d]=new wt(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,o=this._bindings,a=o.length-1,c=o[a],l=e[a];t[l]=n,o[n]=c,o.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}}class w1{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,o=r.length,a=new Array(o),c={endingStart:js,endingEnd:js};for(let l=0;l!==o;++l){const u=r[l].createInterpolant(null);a[l]=u,u.settings=c}this._interpolantSettings=c,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=gM,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n=!1){if(e.fadeOut(t),this.fadeIn(t),n===!0){const i=this._clip.duration,r=e._clip.duration,o=r/i,a=i/r;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n=!1){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const c=a.parameterPositions,l=a.sampleValues;return c[0]=r,c[1]=r+n,l[0]=e/o,l[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const c=(e-r)*n;c<0||n===0?t=0:(this._startTime=null,t=n*c)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const c=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case lp:for(let u=0,h=c.length;u!==h;++u)c[u].evaluate(o),l[u].accumulateAdditive(a);break;case dh:default:for(let u=0,h=c.length;u!==h;++u)c[u].evaluate(o),l[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const o=n===_M;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(n===mM){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,r+=Math.abs(a);const c=this.repetitions-r;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const l=e<0;this._setEndings(l,!l,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=$s,i.endingEnd=$s):(e?i.endingStart=this.zeroSlopeAtStart?$s:js:i.endingStart=_c,t?i.endingEnd=this.zeroSlopeAtEnd?$s:js:i.endingEnd=_c)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=r,c[0]=t,a[1]=r+e,c[1]=n,this}}const JE=new Float32Array(1);class QE extends mr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,a=e._interpolants,c=n.uuid,l=this._bindingsByRootAndName;let u=l[c];u===void 0&&(u={},l[c]=u);for(let h=0;h!==r;++h){const d=i[h],f=d.name;let p=u[f];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,c,f));continue}const _=t&&t._propertyBindings[h].binding.parsedPath;p=new T1(wt.create(n,f,_),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,c,f),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,a=o[r],c=a.knownActions,l=c[c.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,c[u]=l,c.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete h[d],c.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,a=o[i],c=t[t.length-1],l=e._cacheIndex;c._cacheIndex=l,t[l]=c,t.pop(),delete a[r],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Ip(new Float32Array(2),new Float32Array(2),1,JE),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?ya.findByName(i,e):e;const a=o!==null?o.uuid:e,c=this._actionsByClip[a];let l=null;if(n===void 0&&(o!==null?n=o.blendMode:n=dh),c!==void 0){const h=c.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;l=c.knownActions[0],o===null&&(o=l._clip)}if(o===null)return null;const u=new w1(this,o,t,n);return this._bindAction(u,l),this._addInactiveAction(u,a,r),u}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?ya.findByName(n,e):e,o=r?r.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let l=0;l!==n;++l)t[l]._update(i,e,r,o);const a=this._bindings,c=this._nActiveBindings;for(let l=0;l!==c;++l)a[l].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const o=r.knownActions;for(let a=0,c=o.length;a!==c;++a){const l=o[a];this._deactivateAction(l);const u=l._cacheIndex,h=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,c=a[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const a=r[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class eA extends fh{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new ph(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class tA extends fh{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isRenderTargetArray=!0,this.depth=n,this.texture=new Hc(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Vp{constructor(e){this.value=e}clone(){return new Vp(this.value.clone===void 0?this.value:this.value.clone())}}let nA=0;class iA extends mr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:nA++}),this.name="",this.usage=yc,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const r=Array.isArray(t[n])?t[n]:[t[n]];for(let o=0;o<r.length;o++)this.uniforms.push(r[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class rA extends Wc{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class sA{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const cy=new je;class Hp{constructor(e,t,n=0,i=1/0){this.ray=new yo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new mh,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return cy.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(cy),this}intersectObject(e,t=!0,n=[]){return Tf(e,this,n,t),n.sort(ly),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Tf(e[i],this,n,t);return n.sort(ly),n}}function ly(s,e){return s.distance-e.distance}function Tf(s,e,t,n){let i=!0;if(s.layers.test(e.layers)&&s.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let o=0,a=r.length;o<a;o++)Tf(r[o],e,t,!0)}}class oA{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=rt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(rt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class aA{constructor(e=1,t=0,n=0){this.radius=e,this.theta=t,this.y=n}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class Gp{constructor(e,t,n,i){Gp.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const r=this.elements;return r[0]=e,r[2]=t,r[1]=n,r[3]=i,this}}const uy=new le;class cA{constructor(e=new le(1/0,1/0),t=new le(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=uy.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,uy).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const hy=new F,Nl=new F;class E1{constructor(e=new F,t=new F){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){hy.subVectors(e,this.start),Nl.subVectors(this.end,this.start);const n=Nl.dot(Nl);let r=Nl.dot(hy)/n;return t&&(r=rt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const dy=new F;class lA extends Tt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new st,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,c=32;o<c;o++,a++){const l=o/c*Math.PI*2,u=a/c*Math.PI*2;i.push(Math.cos(l),Math.sin(l),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new ke(i,3));const r=new Wn({fog:!1,toneMapped:!1});this.cone=new Zi(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),dy.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(dy),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Zr=new F,Ul=new je,Nd=new je;class uA extends Zi{constructor(e){const t=A1(e),n=new st,i=[],r=[],o=new Ce(0,0,1),a=new Ce(0,1,0);for(let l=0;l<t.length;l++){const u=t[l];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(a.r,a.g,a.b))}n.setAttribute("position",new ke(i,3)),n.setAttribute("color",new ke(r,3));const c=new Wn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,c),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Nd.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const a=t[r];a.parent&&a.parent.isBone&&(Ul.multiplyMatrices(Nd,a.matrixWorld),Zr.setFromMatrixPosition(Ul),i.setXYZ(o,Zr.x,Zr.y,Zr.z),Ul.multiplyMatrices(Nd,a.parent.matrixWorld),Zr.setFromMatrixPosition(Ul),i.setXYZ(o+1,Zr.x,Zr.y,Zr.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function A1(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push(...A1(s.children[t]));return e}class hA extends en{constructor(e,t,n){const i=new Yc(t,4,2),r=new Si({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const dA=new F,fy=new Ce,py=new Ce;class fA extends Tt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new qc(t);i.rotateY(Math.PI*.5),this.material=new Si({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),o=new Float32Array(r.count*3);i.setAttribute("color",new Ot(o,3)),this.add(new en(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");fy.copy(this.light.color),py.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?fy:py;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(dA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class pA extends Zi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ce(n),i=new Ce(i);const r=t/2,o=e/t,a=e/2,c=[],l=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=o){c.push(-a,0,p,a,0,p),c.push(p,0,-a,p,0,a);const _=d===r?n:i;_.toArray(l,f),f+=3,_.toArray(l,f),f+=3,_.toArray(l,f),f+=3,_.toArray(l,f),f+=3}const u=new st;u.setAttribute("position",new ke(c,3)),u.setAttribute("color",new ke(l,3));const h=new Wn({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class mA extends Zi{constructor(e=10,t=16,n=8,i=64,r=4473924,o=8947848){r=new Ce(r),o=new Ce(o);const a=[],c=[];if(t>1)for(let h=0;h<t;h++){const d=h/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const _=h&1?r:o;c.push(_.r,_.g,_.b),c.push(_.r,_.g,_.b)}for(let h=0;h<n;h++){const d=h&1?r:o,f=e-e/n*h;for(let p=0;p<i;p++){let _=p/i*(Math.PI*2),g=Math.sin(_)*f,m=Math.cos(_)*f;a.push(g,0,m),c.push(d.r,d.g,d.b),_=(p+1)/i*(Math.PI*2),g=Math.sin(_)*f,m=Math.cos(_)*f,a.push(g,0,m),c.push(d.r,d.g,d.b)}}const l=new st;l.setAttribute("position",new ke(a,3)),l.setAttribute("color",new ke(c,3));const u=new Wn({vertexColors:!0,toneMapped:!1});super(l,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const my=new F,Fl=new F,gy=new F;class gA extends Tt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new st;i.setAttribute("position",new ke([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Wn({fog:!1,toneMapped:!1});this.lightPlane=new kr(i,r),this.add(this.lightPlane),i=new st,i.setAttribute("position",new ke([0,0,0,0,0,1],3)),this.targetLine=new kr(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),my.setFromMatrixPosition(this.light.matrixWorld),Fl.setFromMatrixPosition(this.light.target.matrixWorld),gy.subVectors(Fl,my),this.lightPlane.lookAt(Fl),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Fl),this.targetLine.scale.z=gy.length()}}const Bl=new F,tn=new gh;class _A extends Zi{constructor(e){const t=new st,n=new Wn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,_){c(p),c(_)}function c(p){i.push(0,0,0),r.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(i.length/3-1)}t.setAttribute("position",new ke(i,3)),t.setAttribute("color",new ke(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const l=new Ce(16755200),u=new Ce(16711680),h=new Ce(43775),d=new Ce(16777215),f=new Ce(3355443);this.setColors(l,u,h,d,f)}setColors(e,t,n,i,r){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;tn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const r=this.camera.coordinateSystem===Ui?-1:0;an("c",t,e,tn,0,0,r),an("t",t,e,tn,0,0,1),an("n1",t,e,tn,-1,-1,r),an("n2",t,e,tn,n,-1,r),an("n3",t,e,tn,-1,i,r),an("n4",t,e,tn,n,i,r),an("f1",t,e,tn,-1,-1,1),an("f2",t,e,tn,n,-1,1),an("f3",t,e,tn,-1,i,1),an("f4",t,e,tn,n,i,1),an("u1",t,e,tn,n*.7,i*1.1,r),an("u2",t,e,tn,-1*.7,i*1.1,r),an("u3",t,e,tn,0,i*2,r),an("cf1",t,e,tn,-1,0,1),an("cf2",t,e,tn,n,0,1),an("cf3",t,e,tn,0,-1,1),an("cf4",t,e,tn,0,i,1),an("cn1",t,e,tn,-1,0,r),an("cn2",t,e,tn,n,0,r),an("cn3",t,e,tn,0,-1,r),an("cn4",t,e,tn,0,i,r),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function an(s,e,t,n,i,r,o){Bl.set(i,r,o).unproject(n);const a=e[s];if(a!==void 0){const c=t.getAttribute("position");for(let l=0,u=a.length;l<u;l++)c.setXYZ(a[l],Bl.x,Bl.y,Bl.z)}}const zl=new fn;class vA extends Zi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new st;r.setIndex(new Ot(n,1)),r.setAttribute("position",new Ot(i,3)),super(r,new Wn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&zl.setFromObject(this.object),zl.isEmpty())return;const e=zl.min,t=zl.max,n=this.geometry.attributes.position,i=n.array;i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=e.x,i[4]=t.y,i[5]=t.z,i[6]=e.x,i[7]=e.y,i[8]=t.z,i[9]=t.x,i[10]=e.y,i[11]=t.z,i[12]=t.x,i[13]=t.y,i[14]=e.z,i[15]=e.x,i[16]=t.y,i[17]=e.z,i[18]=e.x,i[19]=e.y,i[20]=e.z,i[21]=t.x,i[22]=e.y,i[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class yA extends Zi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new st;r.setIndex(new Ot(n,1)),r.setAttribute("position",new ke(i,3)),super(r,new Wn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class xA extends kr{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new st;o.setAttribute("position",new ke(r,3)),o.computeBoundingSphere(),super(o,new Wn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],c=new st;c.setAttribute("position",new ke(a,3)),c.computeBoundingSphere(),this.add(new en(c,new Si({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const _y=new F;let kl,Ud;class MA extends Tt{constructor(e=new F(0,0,1),t=new F(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",kl===void 0&&(kl=new st,kl.setAttribute("position",new ke([0,0,0,0,1,0],3)),Ud=new $c(.5,1,5,1),Ud.translate(0,-.5,0)),this.position.copy(t),this.line=new kr(kl,new Wn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new en(Ud,new Si({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{_y.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(_y,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class bA extends Zi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new st;i.setAttribute("position",new ke(t,3)),i.setAttribute("color",new ke(n,3));const r=new Wn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Ce,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class SA{constructor(){this.type="ShapePath",this.color=new Ce,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new ju,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,o){return this.currentPath.bezierCurveTo(e,t,n,i,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(m){const b=[];for(let M=0,x=m.length;M<x;M++){const A=m[M],C=new ro;C.curves=A.curves,b.push(C)}return b}function n(m,b){const M=b.length;let x=!1;for(let A=M-1,C=0;C<M;A=C++){let D=b[A],O=b[C],w=O.x-D.x,E=O.y-D.y;if(Math.abs(E)>Number.EPSILON){if(E<0&&(D=b[C],w=-w,O=b[A],E=-E),m.y<D.y||m.y>O.y)continue;if(m.y===D.y){if(m.x===D.x)return!0}else{const z=E*(m.x-D.x)-w*(m.y-D.y);if(z===0)return!0;if(z<0)continue;x=!x}}else{if(m.y!==D.y)continue;if(O.x<=m.x&&m.x<=D.x||D.x<=m.x&&m.x<=O.x)return!0}}return x}const i=ji.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,a,c;const l=[];if(r.length===1)return a=r[0],c=new ro,c.curves=a.curves,l.push(c),l;let u=!i(r[0].getPoints());u=e?!u:u;const h=[],d=[];let f=[],p=0,_;d[p]=void 0,f[p]=[];for(let m=0,b=r.length;m<b;m++)a=r[m],_=a.getPoints(),o=i(_),o=e?!o:o,o?(!u&&d[p]&&p++,d[p]={s:new ro,p:_},d[p].s.curves=a.curves,u&&p++,f[p]=[]):f[p].push({h:a,p:_[0]});if(!d[0])return t(r);if(d.length>1){let m=!1,b=0;for(let M=0,x=d.length;M<x;M++)h[M]=[];for(let M=0,x=d.length;M<x;M++){const A=f[M];for(let C=0;C<A.length;C++){const D=A[C];let O=!0;for(let w=0;w<d.length;w++)n(D.p,d[w].p)&&(M!==w&&b++,O?(O=!1,h[w].push(D)):m=!0);O&&h[M].push(D)}}b>0&&m===!1&&(f=h)}let g;for(let m=0,b=d.length;m<b;m++){c=d[m].s,l.push(c),g=f[m];for(let M=0,x=g.length;M<x;M++)c.holes.push(g[M].h)}return l}}class TA extends mr{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function wA(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function EA(s,e){const t=s.image&&s.image.width?s.image.width/s.image.height:1;return t>e?(s.repeat.x=e/t,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=t/e,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function AA(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function wf(s,e,t,n){const i=CA(n);switch(t){case sp:return s*e;case lh:return s*e/i.components*i.byteLength;case Vc:return s*e/i.components*i.byteLength;case ap:return s*e*2/i.components*i.byteLength;case uh:return s*e*2/i.components*i.byteLength;case op:return s*e*3/i.components*i.byteLength;case Jn:return s*e*4/i.components*i.byteLength;case hh:return s*e*4/i.components*i.byteLength;case nc:case ic:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case rc:case sc:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case _u:case yu:return Math.max(s,16)*Math.max(e,8)/4;case gu:case vu:return Math.max(s,8)*Math.max(e,8)/2;case xu:case Mu:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*8;case bu:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Su:return Math.floor((s+3)/4)*Math.floor((e+3)/4)*16;case Tu:return Math.floor((s+4)/5)*Math.floor((e+3)/4)*16;case wu:return Math.floor((s+4)/5)*Math.floor((e+4)/5)*16;case Eu:return Math.floor((s+5)/6)*Math.floor((e+4)/5)*16;case Au:return Math.floor((s+5)/6)*Math.floor((e+5)/6)*16;case Cu:return Math.floor((s+7)/8)*Math.floor((e+4)/5)*16;case Ru:return Math.floor((s+7)/8)*Math.floor((e+5)/6)*16;case Pu:return Math.floor((s+7)/8)*Math.floor((e+7)/8)*16;case Iu:return Math.floor((s+9)/10)*Math.floor((e+4)/5)*16;case Du:return Math.floor((s+9)/10)*Math.floor((e+5)/6)*16;case Lu:return Math.floor((s+9)/10)*Math.floor((e+7)/8)*16;case Ou:return Math.floor((s+9)/10)*Math.floor((e+9)/10)*16;case Nu:return Math.floor((s+11)/12)*Math.floor((e+9)/10)*16;case Uu:return Math.floor((s+11)/12)*Math.floor((e+11)/12)*16;case oc:case Fu:case Bu:return Math.ceil(s/4)*Math.ceil(e/4)*16;case cp:case zu:return Math.ceil(s/4)*Math.ceil(e/4)*8;case ku:case Vu:return Math.ceil(s/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function CA(s){switch(s){case $i:case np:return{byteLength:1,components:1};case ua:case ip:case Aa:return{byteLength:2,components:1};case ah:case ch:return{byteLength:2,components:4};case zr:case oh:case oi:return{byteLength:4,components:1};case rp:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class RA{static contain(e,t){return wA(e,t)}static cover(e,t){return EA(e,t)}static fill(e){return AA(e)}static getByteLength(e,t,n,i){return wf(e,t,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ih}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ih);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function C1(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function PA(s){const e=new WeakMap;function t(a,c){const l=a.array,u=a.usage,h=l.byteLength,d=s.createBuffer();s.bindBuffer(c,d),s.bufferData(c,l,u),a.onUploadCallback();let f;if(l instanceof Float32Array)f=s.FLOAT;else if(l instanceof Uint16Array)a.isFloat16BufferAttribute?f=s.HALF_FLOAT:f=s.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=s.SHORT;else if(l instanceof Uint32Array)f=s.UNSIGNED_INT;else if(l instanceof Int32Array)f=s.INT;else if(l instanceof Int8Array)f=s.BYTE;else if(l instanceof Uint8Array)f=s.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:d,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:a.version,size:h}}function n(a,c,l){const u=c.array,h=c.updateRanges;if(s.bindBuffer(l,a),h.length===0)s.bufferSubData(l,0,u);else{h.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<h.length;f++){const p=h[d],_=h[f];_.start<=p.start+p.count+1?p.count=Math.max(p.count,_.start+_.count-p.start):(++d,h[d]=_)}h.length=d+1;for(let f=0,p=h.length;f<p;f++){const _=h[f];s.bufferSubData(l,_.start*u.BYTES_PER_ELEMENT,u,_.start,_.count)}c.clearUpdateRanges()}c.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function r(a){a.isInterleavedBufferAttribute&&(a=a.data);const c=e.get(a);c&&(s.deleteBuffer(c.buffer),e.delete(a))}function o(a,c){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=e.get(a);(!u||u.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const l=e.get(a);if(l===void 0)e.set(a,t(a,c));else if(l.version<a.version){if(l.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(l.buffer,a,c),l.version=a.version}}return{get:i,remove:r,update:o}}var IA=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,DA=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,LA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,OA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,NA=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,UA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,FA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,BA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,zA=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,kA=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,VA=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,HA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,GA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,WA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,XA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,jA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,$A=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,qA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,YA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,ZA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,KA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,JA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,QA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,e2=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,t2=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,n2=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,i2=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,r2=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,s2=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,o2=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,a2="gl_FragColor = linearToOutputTexel( gl_FragColor );",c2=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,l2=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,u2=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,h2=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,d2=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,f2=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,p2=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,m2=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,g2=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,_2=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,v2=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,y2=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,x2=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,M2=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,b2=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,S2=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,T2=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,w2=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,E2=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,A2=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,C2=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,R2=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,P2=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,I2=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,D2=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,L2=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,O2=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,N2=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,U2=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,F2=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,B2=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,z2=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,k2=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,V2=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,H2=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,G2=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,W2=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,X2=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,j2=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,$2=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,q2=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Y2=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Z2=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,K2=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,J2=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Q2=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,eC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,tC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,nC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,iC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,rC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,sC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,oC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,aC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,cC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,lC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,uC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,hC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,dC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,fC=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,pC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,mC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,gC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,_C=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,vC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,yC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,xC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,MC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,bC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,SC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,TC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,wC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,EC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,AC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,CC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,RC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const PC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,IC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,DC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,LC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,OC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,NC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,UC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,FC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,BC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,zC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,kC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,VC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,HC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,GC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,WC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,XC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,$C=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,YC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ZC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,KC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,JC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,QC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,tR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nR=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,iR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,sR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,oR=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,cR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,lR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,tt={alphahash_fragment:IA,alphahash_pars_fragment:DA,alphamap_fragment:LA,alphamap_pars_fragment:OA,alphatest_fragment:NA,alphatest_pars_fragment:UA,aomap_fragment:FA,aomap_pars_fragment:BA,batching_pars_vertex:zA,batching_vertex:kA,begin_vertex:VA,beginnormal_vertex:HA,bsdfs:GA,iridescence_fragment:WA,bumpmap_pars_fragment:XA,clipping_planes_fragment:jA,clipping_planes_pars_fragment:$A,clipping_planes_pars_vertex:qA,clipping_planes_vertex:YA,color_fragment:ZA,color_pars_fragment:KA,color_pars_vertex:JA,color_vertex:QA,common:e2,cube_uv_reflection_fragment:t2,defaultnormal_vertex:n2,displacementmap_pars_vertex:i2,displacementmap_vertex:r2,emissivemap_fragment:s2,emissivemap_pars_fragment:o2,colorspace_fragment:a2,colorspace_pars_fragment:c2,envmap_fragment:l2,envmap_common_pars_fragment:u2,envmap_pars_fragment:h2,envmap_pars_vertex:d2,envmap_physical_pars_fragment:S2,envmap_vertex:f2,fog_vertex:p2,fog_pars_vertex:m2,fog_fragment:g2,fog_pars_fragment:_2,gradientmap_pars_fragment:v2,lightmap_pars_fragment:y2,lights_lambert_fragment:x2,lights_lambert_pars_fragment:M2,lights_pars_begin:b2,lights_toon_fragment:T2,lights_toon_pars_fragment:w2,lights_phong_fragment:E2,lights_phong_pars_fragment:A2,lights_physical_fragment:C2,lights_physical_pars_fragment:R2,lights_fragment_begin:P2,lights_fragment_maps:I2,lights_fragment_end:D2,logdepthbuf_fragment:L2,logdepthbuf_pars_fragment:O2,logdepthbuf_pars_vertex:N2,logdepthbuf_vertex:U2,map_fragment:F2,map_pars_fragment:B2,map_particle_fragment:z2,map_particle_pars_fragment:k2,metalnessmap_fragment:V2,metalnessmap_pars_fragment:H2,morphinstance_vertex:G2,morphcolor_vertex:W2,morphnormal_vertex:X2,morphtarget_pars_vertex:j2,morphtarget_vertex:$2,normal_fragment_begin:q2,normal_fragment_maps:Y2,normal_pars_fragment:Z2,normal_pars_vertex:K2,normal_vertex:J2,normalmap_pars_fragment:Q2,clearcoat_normal_fragment_begin:eC,clearcoat_normal_fragment_maps:tC,clearcoat_pars_fragment:nC,iridescence_pars_fragment:iC,opaque_fragment:rC,packing:sC,premultiplied_alpha_fragment:oC,project_vertex:aC,dithering_fragment:cC,dithering_pars_fragment:lC,roughnessmap_fragment:uC,roughnessmap_pars_fragment:hC,shadowmap_pars_fragment:dC,shadowmap_pars_vertex:fC,shadowmap_vertex:pC,shadowmask_pars_fragment:mC,skinbase_vertex:gC,skinning_pars_vertex:_C,skinning_vertex:vC,skinnormal_vertex:yC,specularmap_fragment:xC,specularmap_pars_fragment:MC,tonemapping_fragment:bC,tonemapping_pars_fragment:SC,transmission_fragment:TC,transmission_pars_fragment:wC,uv_pars_fragment:EC,uv_pars_vertex:AC,uv_vertex:CC,worldpos_vertex:RC,background_vert:PC,background_frag:IC,backgroundCube_vert:DC,backgroundCube_frag:LC,cube_vert:OC,cube_frag:NC,depth_vert:UC,depth_frag:FC,distanceRGBA_vert:BC,distanceRGBA_frag:zC,equirect_vert:kC,equirect_frag:VC,linedashed_vert:HC,linedashed_frag:GC,meshbasic_vert:WC,meshbasic_frag:XC,meshlambert_vert:jC,meshlambert_frag:$C,meshmatcap_vert:qC,meshmatcap_frag:YC,meshnormal_vert:ZC,meshnormal_frag:KC,meshphong_vert:JC,meshphong_frag:QC,meshphysical_vert:eR,meshphysical_frag:tR,meshtoon_vert:nR,meshtoon_frag:iR,points_vert:rR,points_frag:sR,shadow_vert:oR,shadow_frag:aR,sprite_vert:cR,sprite_frag:lR},Ee={common:{diffuse:{value:new Ce(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new ct},alphaMap:{value:null},alphaMapTransform:{value:new ct},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new ct}},envmap:{envMap:{value:null},envMapRotation:{value:new ct},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new ct}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new ct}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new ct},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new ct},normalScale:{value:new le(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new ct},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new ct}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new ct}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new ct}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ce(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ce(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new ct},alphaTest:{value:0},uvTransform:{value:new ct}},sprite:{diffuse:{value:new Ce(16777215)},opacity:{value:1},center:{value:new le(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new ct},alphaMap:{value:null},alphaMapTransform:{value:new ct},alphaTest:{value:0}}},Oi={basic:{uniforms:Yn([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.fog]),vertexShader:tt.meshbasic_vert,fragmentShader:tt.meshbasic_frag},lambert:{uniforms:Yn([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Ce(0)}}]),vertexShader:tt.meshlambert_vert,fragmentShader:tt.meshlambert_frag},phong:{uniforms:Yn([Ee.common,Ee.specularmap,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,Ee.lights,{emissive:{value:new Ce(0)},specular:{value:new Ce(1118481)},shininess:{value:30}}]),vertexShader:tt.meshphong_vert,fragmentShader:tt.meshphong_frag},standard:{uniforms:Yn([Ee.common,Ee.envmap,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.roughnessmap,Ee.metalnessmap,Ee.fog,Ee.lights,{emissive:{value:new Ce(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:tt.meshphysical_vert,fragmentShader:tt.meshphysical_frag},toon:{uniforms:Yn([Ee.common,Ee.aomap,Ee.lightmap,Ee.emissivemap,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.gradientmap,Ee.fog,Ee.lights,{emissive:{value:new Ce(0)}}]),vertexShader:tt.meshtoon_vert,fragmentShader:tt.meshtoon_frag},matcap:{uniforms:Yn([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,Ee.fog,{matcap:{value:null}}]),vertexShader:tt.meshmatcap_vert,fragmentShader:tt.meshmatcap_frag},points:{uniforms:Yn([Ee.points,Ee.fog]),vertexShader:tt.points_vert,fragmentShader:tt.points_frag},dashed:{uniforms:Yn([Ee.common,Ee.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:tt.linedashed_vert,fragmentShader:tt.linedashed_frag},depth:{uniforms:Yn([Ee.common,Ee.displacementmap]),vertexShader:tt.depth_vert,fragmentShader:tt.depth_frag},normal:{uniforms:Yn([Ee.common,Ee.bumpmap,Ee.normalmap,Ee.displacementmap,{opacity:{value:1}}]),vertexShader:tt.meshnormal_vert,fragmentShader:tt.meshnormal_frag},sprite:{uniforms:Yn([Ee.sprite,Ee.fog]),vertexShader:tt.sprite_vert,fragmentShader:tt.sprite_frag},background:{uniforms:{uvTransform:{value:new ct},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:tt.background_vert,fragmentShader:tt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new ct}},vertexShader:tt.backgroundCube_vert,fragmentShader:tt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:tt.cube_vert,fragmentShader:tt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:tt.equirect_vert,fragmentShader:tt.equirect_frag},distanceRGBA:{uniforms:Yn([Ee.common,Ee.displacementmap,{referencePosition:{value:new F},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:tt.distanceRGBA_vert,fragmentShader:tt.distanceRGBA_frag},shadow:{uniforms:Yn([Ee.lights,Ee.fog,{color:{value:new Ce(0)},opacity:{value:1}}]),vertexShader:tt.shadow_vert,fragmentShader:tt.shadow_frag}};Oi.physical={uniforms:Yn([Oi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new ct},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new ct},clearcoatNormalScale:{value:new le(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new ct},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new ct},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new ct},sheen:{value:0},sheenColor:{value:new Ce(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new ct},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new ct},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new ct},transmissionSamplerSize:{value:new le},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new ct},attenuationDistance:{value:0},attenuationColor:{value:new Ce(0)},specularColor:{value:new Ce(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new ct},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new ct},anisotropyVector:{value:new le},anisotropyMap:{value:null},anisotropyMapTransform:{value:new ct}}]),vertexShader:tt.meshphysical_vert,fragmentShader:tt.meshphysical_frag};const Vl={r:0,b:0,g:0},Os=new Ai,uR=new je;function hR(s,e,t,n,i,r,o){const a=new Ce(0);let c=r===!0?0:1,l,u,h=null,d=0,f=null;function p(M){let x=M.isScene===!0?M.background:null;return x&&x.isTexture&&(x=(M.backgroundBlurriness>0?t:e).get(x)),x}function _(M){let x=!1;const A=p(M);A===null?m(a,c):A&&A.isColor&&(m(A,1),x=!0);const C=s.xr.getEnvironmentBlendMode();C==="additive"?n.buffers.color.setClear(0,0,0,1,o):C==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(s.autoClear||x)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function g(M,x){const A=p(x);A&&(A.isCubeTexture||A.mapping===Ea)?(u===void 0&&(u=new en(new xo(1,1,1),new qi({name:"BackgroundCubeMaterial",uniforms:_a(Oi.backgroundCube.uniforms),vertexShader:Oi.backgroundCube.vertexShader,fragmentShader:Oi.backgroundCube.fragmentShader,side:Qn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(C,D,O){this.matrixWorld.copyPosition(O.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),Os.copy(x.backgroundRotation),Os.x*=-1,Os.y*=-1,Os.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&(Os.y*=-1,Os.z*=-1),u.material.uniforms.envMap.value=A,u.material.uniforms.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(uR.makeRotationFromEuler(Os)),u.material.toneMapped=_t.getTransfer(A.colorSpace)!==Ft,(h!==A||d!==A.version||f!==s.toneMapping)&&(u.material.needsUpdate=!0,h=A,d=A.version,f=s.toneMapping),u.layers.enableAll(),M.unshift(u,u.geometry,u.material,0,0,null)):A&&A.isTexture&&(l===void 0&&(l=new en(new Ra(2,2),new qi({name:"BackgroundMaterial",uniforms:_a(Oi.background.uniforms),vertexShader:Oi.background.vertexShader,fragmentShader:Oi.background.fragmentShader,side:dr,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=A,l.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,l.material.toneMapped=_t.getTransfer(A.colorSpace)!==Ft,A.matrixAutoUpdate===!0&&A.updateMatrix(),l.material.uniforms.uvTransform.value.copy(A.matrix),(h!==A||d!==A.version||f!==s.toneMapping)&&(l.material.needsUpdate=!0,h=A,d=A.version,f=s.toneMapping),l.layers.enableAll(),M.unshift(l,l.geometry,l.material,0,0,null))}function m(M,x){M.getRGB(Vl,OM(s)),n.buffers.color.setClear(Vl.r,Vl.g,Vl.b,x,o)}function b(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),l!==void 0&&(l.geometry.dispose(),l.material.dispose(),l=void 0)}return{getClearColor:function(){return a},setClearColor:function(M,x=1){a.set(M),c=x,m(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(M){c=M,m(a,c)},render:_,addToRenderList:g,dispose:b}}function dR(s,e){const t=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=d(null);let r=i,o=!1;function a(E,z,$,j,Y){let ee=!1;const q=h(j,$,z);r!==q&&(r=q,l(r.object)),ee=f(E,j,$,Y),ee&&p(E,j,$,Y),Y!==null&&e.update(Y,s.ELEMENT_ARRAY_BUFFER),(ee||o)&&(o=!1,x(E,z,$,j),Y!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(Y).buffer))}function c(){return s.createVertexArray()}function l(E){return s.bindVertexArray(E)}function u(E){return s.deleteVertexArray(E)}function h(E,z,$){const j=$.wireframe===!0;let Y=n[E.id];Y===void 0&&(Y={},n[E.id]=Y);let ee=Y[z.id];ee===void 0&&(ee={},Y[z.id]=ee);let q=ee[j];return q===void 0&&(q=d(c()),ee[j]=q),q}function d(E){const z=[],$=[],j=[];for(let Y=0;Y<t;Y++)z[Y]=0,$[Y]=0,j[Y]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:z,enabledAttributes:$,attributeDivisors:j,object:E,attributes:{},index:null}}function f(E,z,$,j){const Y=r.attributes,ee=z.attributes;let q=0;const se=$.getAttributes();for(const J in se)if(se[J].location>=0){const xe=Y[J];let Ae=ee[J];if(Ae===void 0&&(J==="instanceMatrix"&&E.instanceMatrix&&(Ae=E.instanceMatrix),J==="instanceColor"&&E.instanceColor&&(Ae=E.instanceColor)),xe===void 0||xe.attribute!==Ae||Ae&&xe.data!==Ae.data)return!0;q++}return r.attributesNum!==q||r.index!==j}function p(E,z,$,j){const Y={},ee=z.attributes;let q=0;const se=$.getAttributes();for(const J in se)if(se[J].location>=0){let xe=ee[J];xe===void 0&&(J==="instanceMatrix"&&E.instanceMatrix&&(xe=E.instanceMatrix),J==="instanceColor"&&E.instanceColor&&(xe=E.instanceColor));const Ae={};Ae.attribute=xe,xe&&xe.data&&(Ae.data=xe.data),Y[J]=Ae,q++}r.attributes=Y,r.attributesNum=q,r.index=j}function _(){const E=r.newAttributes;for(let z=0,$=E.length;z<$;z++)E[z]=0}function g(E){m(E,0)}function m(E,z){const $=r.newAttributes,j=r.enabledAttributes,Y=r.attributeDivisors;$[E]=1,j[E]===0&&(s.enableVertexAttribArray(E),j[E]=1),Y[E]!==z&&(s.vertexAttribDivisor(E,z),Y[E]=z)}function b(){const E=r.newAttributes,z=r.enabledAttributes;for(let $=0,j=z.length;$<j;$++)z[$]!==E[$]&&(s.disableVertexAttribArray($),z[$]=0)}function M(E,z,$,j,Y,ee,q){q===!0?s.vertexAttribIPointer(E,z,$,Y,ee):s.vertexAttribPointer(E,z,$,j,Y,ee)}function x(E,z,$,j){_();const Y=j.attributes,ee=$.getAttributes(),q=z.defaultAttributeValues;for(const se in ee){const J=ee[se];if(J.location>=0){let ge=Y[se];if(ge===void 0&&(se==="instanceMatrix"&&E.instanceMatrix&&(ge=E.instanceMatrix),se==="instanceColor"&&E.instanceColor&&(ge=E.instanceColor)),ge!==void 0){const xe=ge.normalized,Ae=ge.itemSize,He=e.get(ge);if(He===void 0)continue;const lt=He.buffer,Z=He.type,ce=He.bytesPerElement,me=Z===s.INT||Z===s.UNSIGNED_INT||ge.gpuType===oh;if(ge.isInterleavedBufferAttribute){const Te=ge.data,Ne=Te.stride,Ke=ge.offset;if(Te.isInstancedInterleavedBuffer){for(let Ge=0;Ge<J.locationSize;Ge++)m(J.location+Ge,Te.meshPerAttribute);E.isInstancedMesh!==!0&&j._maxInstanceCount===void 0&&(j._maxInstanceCount=Te.meshPerAttribute*Te.count)}else for(let Ge=0;Ge<J.locationSize;Ge++)g(J.location+Ge);s.bindBuffer(s.ARRAY_BUFFER,lt);for(let Ge=0;Ge<J.locationSize;Ge++)M(J.location+Ge,Ae/J.locationSize,Z,xe,Ne*ce,(Ke+Ae/J.locationSize*Ge)*ce,me)}else{if(ge.isInstancedBufferAttribute){for(let Te=0;Te<J.locationSize;Te++)m(J.location+Te,ge.meshPerAttribute);E.isInstancedMesh!==!0&&j._maxInstanceCount===void 0&&(j._maxInstanceCount=ge.meshPerAttribute*ge.count)}else for(let Te=0;Te<J.locationSize;Te++)g(J.location+Te);s.bindBuffer(s.ARRAY_BUFFER,lt);for(let Te=0;Te<J.locationSize;Te++)M(J.location+Te,Ae/J.locationSize,Z,xe,Ae*ce,Ae/J.locationSize*Te*ce,me)}}else if(q!==void 0){const xe=q[se];if(xe!==void 0)switch(xe.length){case 2:s.vertexAttrib2fv(J.location,xe);break;case 3:s.vertexAttrib3fv(J.location,xe);break;case 4:s.vertexAttrib4fv(J.location,xe);break;default:s.vertexAttrib1fv(J.location,xe)}}}}b()}function A(){O();for(const E in n){const z=n[E];for(const $ in z){const j=z[$];for(const Y in j)u(j[Y].object),delete j[Y];delete z[$]}delete n[E]}}function C(E){if(n[E.id]===void 0)return;const z=n[E.id];for(const $ in z){const j=z[$];for(const Y in j)u(j[Y].object),delete j[Y];delete z[$]}delete n[E.id]}function D(E){for(const z in n){const $=n[z];if($[E.id]===void 0)continue;const j=$[E.id];for(const Y in j)u(j[Y].object),delete j[Y];delete $[E.id]}}function O(){w(),o=!0,r!==i&&(r=i,l(r.object))}function w(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:O,resetDefaultState:w,dispose:A,releaseStatesOfGeometry:C,releaseStatesOfProgram:D,initAttributes:_,enableAttribute:g,disableUnusedAttributes:b}}function fR(s,e,t){let n;function i(l){n=l}function r(l,u){s.drawArrays(n,l,u),t.update(u,n,1)}function o(l,u,h){h!==0&&(s.drawArraysInstanced(n,l,u,h),t.update(u,n,h))}function a(l,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,l,0,u,0,h);let f=0;for(let p=0;p<h;p++)f+=u[p];t.update(f,n,1)}function c(l,u,h,d){if(h===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<l.length;p++)o(l[p],u[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,l,0,u,0,d,0,h);let p=0;for(let _=0;_<h;_++)p+=u[_]*d[_];t.update(p,n,1)}}this.setMode=i,this.render=r,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=c}function pR(s,e,t,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const D=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(D.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function o(D){return!(D!==Jn&&n.convert(D)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(D){const O=D===Aa&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(D!==$i&&n.convert(D)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&D!==oi&&!O)}function c(D){if(D==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";D="mediump"}return D==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=t.precision!==void 0?t.precision:"highp";const u=c(l);u!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",u,"instead."),l=u);const h=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=s.getParameter(s.MAX_TEXTURE_SIZE),g=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),m=s.getParameter(s.MAX_VERTEX_ATTRIBS),b=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),M=s.getParameter(s.MAX_VARYING_VECTORS),x=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),A=p>0,C=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:c,textureFormatReadable:o,textureTypeReadable:a,precision:l,logarithmicDepthBuffer:h,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:_,maxCubemapSize:g,maxAttributes:m,maxVertexUniforms:b,maxVaryings:M,maxFragmentUniforms:x,vertexTextures:A,maxSamples:C}}function mR(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new Qr,a=new ct,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||n!==0||i;return i=d,n=h.length,f},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(h,d){t=u(h,d,0)},this.setState=function(h,d,f){const p=h.clippingPlanes,_=h.clipIntersection,g=h.clipShadows,m=s.get(h);if(!i||p===null||p.length===0||r&&!g)r?u(null):l();else{const b=r?0:n,M=b*4;let x=m.clippingState||null;c.value=x,x=u(p,d,M,f);for(let A=0;A!==M;++A)x[A]=t[A];m.clippingState=x,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=b}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,d,f,p){const _=h!==null?h.length:0;let g=null;if(_!==0){if(g=c.value,p!==!0||g===null){const m=f+_*4,b=d.matrixWorldInverse;a.getNormalMatrix(b),(g===null||g.length<m)&&(g=new Float32Array(m));for(let M=0,x=f;M!==_;++M,x+=4)o.copy(h[M]).applyMatrix4(b,a),o.normal.toArray(g,x),g[x+3]=o.constant}c.value=g,c.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,g}}function gR(s){let e=new WeakMap;function t(o,a){return a===mc?o.mapping=Br:a===gc&&(o.mapping=fs),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===mc||a===gc)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const l=new UM(c.height);return l.fromEquirectangularTexture(s,o),e.set(o,l),o.addEventListener("dispose",i),t(l.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}const qo=4,vy=[.125,.215,.35,.446,.526,.582],Gs=20,Fd=new Ia,yy=new Ce;let Bd=null,zd=0,kd=0,Vd=!1;const Vs=(1+Math.sqrt(5))/2,Wo=1/Vs,xy=[new F(-Vs,Wo,0),new F(Vs,Wo,0),new F(-Wo,0,Vs),new F(Wo,0,Vs),new F(0,Vs,-Wo),new F(0,Vs,Wo),new F(-1,1,-1),new F(1,1,-1),new F(-1,1,1),new F(1,1,1)],_R=new F;class Ef{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,r={}){const{size:o=256,position:a=_R}=r;Bd=this._renderer.getRenderTarget(),zd=this._renderer.getActiveCubeFace(),kd=this._renderer.getActiveMipmapLevel(),Vd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const c=this._allocateTargets();return c.depthBuffer=!0,this._sceneToCubeUV(e,n,i,c,a),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Sy(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=by(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Bd,zd,kd),this._renderer.xr.enabled=Vd,e.scissorTest=!1,Hl(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Br||e.mapping===fs?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Bd=this._renderer.getRenderTarget(),zd=this._renderer.getActiveCubeFace(),kd=this._renderer.getActiveMipmapLevel(),Vd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:rn,minFilter:rn,generateMipmaps:!1,type:Aa,format:Jn,colorSpace:Gn,depthBuffer:!1},i=My(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=My(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=vR(r)),this._blurMaterial=yR(r,e,t)}return i}_compileMaterial(e){const t=new en(this._lodPlanes[0],e);this._renderer.compile(t,Fd)}_sceneToCubeUV(e,t,n,i,r){const c=new _n(90,1,t,n),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,f=h.toneMapping;h.getClearColor(yy),h.toneMapping=Ur,h.autoClear=!1;const p=new Si({name:"PMREM.Background",side:Qn,depthWrite:!1,depthTest:!1}),_=new en(new xo,p);let g=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,g=!0):(p.color.copy(yy),g=!0);for(let b=0;b<6;b++){const M=b%3;M===0?(c.up.set(0,l[b],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x+u[b],r.y,r.z)):M===1?(c.up.set(0,0,l[b]),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y+u[b],r.z)):(c.up.set(0,l[b],0),c.position.set(r.x,r.y,r.z),c.lookAt(r.x,r.y,r.z+u[b]));const x=this._cubeSize;Hl(i,M*x,b>2?x:0,x,x),h.setRenderTarget(i),g&&h.render(_,c),h.render(e,c)}_.geometry.dispose(),_.material.dispose(),h.toneMapping=f,h.autoClear=d,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Br||e.mapping===fs;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Sy()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=by());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new en(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;const c=this._cubeSize;Hl(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,Fd)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=xy[(i-r-1)%xy.length];this._blur(e,r-1,r,o,a)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new en(this._lodPlanes[i],l),d=l.uniforms,f=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Gs-1),_=r/p,g=isFinite(r)?1+Math.floor(u*_):Gs;g>Gs&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Gs}`);const m=[];let b=0;for(let D=0;D<Gs;++D){const O=D/_,w=Math.exp(-O*O/2);m.push(w),D===0?b+=w:D<g&&(b+=2*w)}for(let D=0;D<m.length;D++)m[D]=m[D]/b;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=m,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:M}=this;d.dTheta.value=p,d.mipInt.value=M-n;const x=this._sizeLods[i],A=3*x*(i>M-qo?i-M+qo:0),C=4*(this._cubeSize-x);Hl(t,A,C,3*x,2*x),c.setRenderTarget(t),c.render(h,Fd)}}function vR(s){const e=[],t=[],n=[];let i=s;const r=s-qo+1+vy.length;for(let o=0;o<r;o++){const a=Math.pow(2,i);t.push(a);let c=1/a;o>s-qo?c=vy[o-s+qo-1]:o===0&&(c=0),n.push(c);const l=1/(a-2),u=-l,h=1+l,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,_=3,g=2,m=1,b=new Float32Array(_*p*f),M=new Float32Array(g*p*f),x=new Float32Array(m*p*f);for(let C=0;C<f;C++){const D=C%3*2/3-1,O=C>2?0:-1,w=[D,O,0,D+2/3,O,0,D+2/3,O+1,0,D,O,0,D+2/3,O+1,0,D,O+1,0];b.set(w,_*p*C),M.set(d,g*p*C);const E=[C,C,C,C,C,C];x.set(E,m*p*C)}const A=new st;A.setAttribute("position",new Ot(b,_)),A.setAttribute("uv",new Ot(M,g)),A.setAttribute("faceIndex",new Ot(x,m)),e.push(A),i>qo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function My(s,e,t){const n=new fr(s,e,t);return n.texture.mapping=Ea,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Hl(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function yR(s,e,t){const n=new Float32Array(Gs),i=new F(0,1,0);return new qi({name:"SphericalGaussianBlur",defines:{n:Gs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Wp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Nr,depthTest:!1,depthWrite:!1})}function by(){return new qi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Wp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Nr,depthTest:!1,depthWrite:!1})}function Sy(){return new qi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Wp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Nr,depthTest:!1,depthWrite:!1})}function Wp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function xR(s){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const c=a.mapping,l=c===mc||c===gc,u=c===Br||c===fs;if(l||u){let h=e.get(a);const d=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new Ef(s)),h=l?t.fromEquirectangular(a,h):t.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),h.texture;if(h!==void 0)return h.texture;{const f=a.image;return l&&f&&f.height>0||u&&f&&i(f)?(t===null&&(t=new Ef(s)),h=l?t.fromEquirectangular(a):t.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),a.addEventListener("dispose",r),h.texture):null}}}return a}function i(a){let c=0;const l=6;for(let u=0;u<l;u++)a[u]!==void 0&&c++;return c===l}function r(a){const c=a.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function MR(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Jl("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function bR(s,e,t,n){const i={},r=new WeakMap;function o(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=r.get(d);f&&(e.remove(f),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d}function c(h){const d=h.attributes;for(const f in d)e.update(d[f],s.ARRAY_BUFFER)}function l(h){const d=[],f=h.index,p=h.attributes.position;let _=0;if(f!==null){const b=f.array;_=f.version;for(let M=0,x=b.length;M<x;M+=3){const A=b[M+0],C=b[M+1],D=b[M+2];d.push(A,C,C,D,D,A)}}else if(p!==void 0){const b=p.array;_=p.version;for(let M=0,x=b.length/3-1;M<x;M+=3){const A=M+0,C=M+1,D=M+2;d.push(A,C,C,D,D,A)}}else return;const g=new(PM(d)?pp:fp)(d,1);g.version=_;const m=r.get(h);m&&e.remove(m),r.set(h,g)}function u(h){const d=r.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&l(h)}else l(h);return r.get(h)}return{get:a,update:c,getWireframeAttribute:u}}function SR(s,e,t){let n;function i(d){n=d}let r,o;function a(d){r=d.type,o=d.bytesPerElement}function c(d,f){s.drawElements(n,f,r,d*o),t.update(f,n,1)}function l(d,f,p){p!==0&&(s.drawElementsInstanced(n,f,r,d*o,p),t.update(f,n,p))}function u(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,r,d,0,p);let g=0;for(let m=0;m<p;m++)g+=f[m];t.update(g,n,1)}function h(d,f,p,_){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<d.length;m++)l(d[m]/o,f[m],_[m]);else{g.multiDrawElementsInstancedWEBGL(n,f,0,r,d,0,_,0,p);let m=0;for(let b=0;b<p;b++)m+=f[b]*_[b];t.update(m,n,1)}}this.setMode=i,this.setIndex=a,this.render=c,this.renderInstances=l,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function TR(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=a*(r/3);break;case s.LINES:t.lines+=a*(r/2);break;case s.LINE_STRIP:t.lines+=a*(r-1);break;case s.LINE_LOOP:t.lines+=a*r;break;case s.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function wR(s,e,t){const n=new WeakMap,i=new mt;function r(o,a,c){const l=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let d=n.get(a);if(d===void 0||d.count!==h){let w=function(){D.dispose(),n.delete(a),a.removeEventListener("dispose",w)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,_=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],m=a.morphAttributes.normal||[],b=a.morphAttributes.color||[];let M=0;f===!0&&(M=1),p===!0&&(M=2),_===!0&&(M=3);let x=a.attributes.position.count*M,A=1;x>e.maxTextureSize&&(A=Math.ceil(x/e.maxTextureSize),x=e.maxTextureSize);const C=new Float32Array(x*A*4*h),D=new Hc(C,x,A,h);D.type=oi,D.needsUpdate=!0;const O=M*4;for(let E=0;E<h;E++){const z=g[E],$=m[E],j=b[E],Y=x*A*4*E;for(let ee=0;ee<z.count;ee++){const q=ee*O;f===!0&&(i.fromBufferAttribute(z,ee),C[Y+q+0]=i.x,C[Y+q+1]=i.y,C[Y+q+2]=i.z,C[Y+q+3]=0),p===!0&&(i.fromBufferAttribute($,ee),C[Y+q+4]=i.x,C[Y+q+5]=i.y,C[Y+q+6]=i.z,C[Y+q+7]=0),_===!0&&(i.fromBufferAttribute(j,ee),C[Y+q+8]=i.x,C[Y+q+9]=i.y,C[Y+q+10]=i.z,C[Y+q+11]=j.itemSize===4?i.w:1)}}d={count:h,texture:D,size:new le(x,A)},n.set(a,d),a.addEventListener("dispose",w)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)c.getUniforms().setValue(s,"morphTexture",o.morphTexture,t);else{let f=0;for(let _=0;_<l.length;_++)f+=l[_];const p=a.morphTargetsRelative?1:1-f;c.getUniforms().setValue(s,"morphTargetBaseInfluence",p),c.getUniforms().setValue(s,"morphTargetInfluences",l)}c.getUniforms().setValue(s,"morphTargetsTexture",d.texture,t),c.getUniforms().setValue(s,"morphTargetsTextureSize",d.size)}return{update:r}}function ER(s,e,t,n){let i=new WeakMap;function r(c){const l=n.render.frame,u=c.geometry,h=e.get(c,u);if(i.get(h)!==l&&(e.update(h),i.set(h,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),i.get(c)!==l&&(t.update(c.instanceMatrix,s.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,s.ARRAY_BUFFER),i.set(c,l))),c.isSkinnedMesh){const d=c.skeleton;i.get(d)!==l&&(d.update(),i.set(d,l))}return h}function o(){i=new WeakMap}function a(c){const l=c.target;l.removeEventListener("dispose",a),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:o}}const R1=new Xt,Ty=new Sh(1,1),P1=new Hc,I1=new ph,D1=new Gc,wy=[],Ey=[],Ay=new Float32Array(16),Cy=new Float32Array(9),Ry=new Float32Array(4);function Da(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=wy[i];if(r===void 0&&(r=new Float32Array(i),wy[i]=r),e!==0){n.toArray(r,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(r,a)}return r}function xn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function Mn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function Bh(s,e){let t=Ey[e];t===void 0&&(t=new Int32Array(e),Ey[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function AR(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function CR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(xn(t,e))return;s.uniform2fv(this.addr,e),Mn(t,e)}}function RR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(xn(t,e))return;s.uniform3fv(this.addr,e),Mn(t,e)}}function PR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(xn(t,e))return;s.uniform4fv(this.addr,e),Mn(t,e)}}function IR(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(xn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Mn(t,e)}else{if(xn(t,n))return;Ry.set(n),s.uniformMatrix2fv(this.addr,!1,Ry),Mn(t,n)}}function DR(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(xn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Mn(t,e)}else{if(xn(t,n))return;Cy.set(n),s.uniformMatrix3fv(this.addr,!1,Cy),Mn(t,n)}}function LR(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(xn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Mn(t,e)}else{if(xn(t,n))return;Ay.set(n),s.uniformMatrix4fv(this.addr,!1,Ay),Mn(t,n)}}function OR(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function NR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(xn(t,e))return;s.uniform2iv(this.addr,e),Mn(t,e)}}function UR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(xn(t,e))return;s.uniform3iv(this.addr,e),Mn(t,e)}}function FR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(xn(t,e))return;s.uniform4iv(this.addr,e),Mn(t,e)}}function BR(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function zR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(xn(t,e))return;s.uniform2uiv(this.addr,e),Mn(t,e)}}function kR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(xn(t,e))return;s.uniform3uiv(this.addr,e),Mn(t,e)}}function VR(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(xn(t,e))return;s.uniform4uiv(this.addr,e),Mn(t,e)}}function HR(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(Ty.compareFunction=hp,r=Ty):r=R1,t.setTexture2D(e||r,i)}function GR(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||I1,i)}function WR(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||D1,i)}function XR(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||P1,i)}function jR(s){switch(s){case 5126:return AR;case 35664:return CR;case 35665:return RR;case 35666:return PR;case 35674:return IR;case 35675:return DR;case 35676:return LR;case 5124:case 35670:return OR;case 35667:case 35671:return NR;case 35668:case 35672:return UR;case 35669:case 35673:return FR;case 5125:return BR;case 36294:return zR;case 36295:return kR;case 36296:return VR;case 35678:case 36198:case 36298:case 36306:case 35682:return HR;case 35679:case 36299:case 36307:return GR;case 35680:case 36300:case 36308:case 36293:return WR;case 36289:case 36303:case 36311:case 36292:return XR}}function $R(s,e){s.uniform1fv(this.addr,e)}function qR(s,e){const t=Da(e,this.size,2);s.uniform2fv(this.addr,t)}function YR(s,e){const t=Da(e,this.size,3);s.uniform3fv(this.addr,t)}function ZR(s,e){const t=Da(e,this.size,4);s.uniform4fv(this.addr,t)}function KR(s,e){const t=Da(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function JR(s,e){const t=Da(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function QR(s,e){const t=Da(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function eP(s,e){s.uniform1iv(this.addr,e)}function tP(s,e){s.uniform2iv(this.addr,e)}function nP(s,e){s.uniform3iv(this.addr,e)}function iP(s,e){s.uniform4iv(this.addr,e)}function rP(s,e){s.uniform1uiv(this.addr,e)}function sP(s,e){s.uniform2uiv(this.addr,e)}function oP(s,e){s.uniform3uiv(this.addr,e)}function aP(s,e){s.uniform4uiv(this.addr,e)}function cP(s,e,t){const n=this.cache,i=e.length,r=Bh(t,i);xn(n,r)||(s.uniform1iv(this.addr,r),Mn(n,r));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||R1,r[o])}function lP(s,e,t){const n=this.cache,i=e.length,r=Bh(t,i);xn(n,r)||(s.uniform1iv(this.addr,r),Mn(n,r));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||I1,r[o])}function uP(s,e,t){const n=this.cache,i=e.length,r=Bh(t,i);xn(n,r)||(s.uniform1iv(this.addr,r),Mn(n,r));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||D1,r[o])}function hP(s,e,t){const n=this.cache,i=e.length,r=Bh(t,i);xn(n,r)||(s.uniform1iv(this.addr,r),Mn(n,r));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||P1,r[o])}function dP(s){switch(s){case 5126:return $R;case 35664:return qR;case 35665:return YR;case 35666:return ZR;case 35674:return KR;case 35675:return JR;case 35676:return QR;case 5124:case 35670:return eP;case 35667:case 35671:return tP;case 35668:case 35672:return nP;case 35669:case 35673:return iP;case 5125:return rP;case 36294:return sP;case 36295:return oP;case 36296:return aP;case 35678:case 36198:case 36298:case 36306:case 35682:return cP;case 35679:case 36299:case 36307:return lP;case 35680:case 36300:case 36308:case 36293:return uP;case 36289:case 36303:case 36311:case 36292:return hP}}class fP{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=jR(t.type)}}class pP{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=dP(t.type)}}class mP{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const Hd=/(\w+)(\])?(\[|\.)?/g;function Py(s,e){s.seq.push(e),s.map[e.id]=e}function gP(s,e,t){const n=s.name,i=n.length;for(Hd.lastIndex=0;;){const r=Hd.exec(n),o=Hd.lastIndex;let a=r[1];const c=r[2]==="]",l=r[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===i){Py(t,l===void 0?new fP(a,s,e):new pP(a,s,e));break}else{let h=t.map[a];h===void 0&&(h=new mP(a),Py(t,h)),t=h}}}class eu{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);gP(r,o,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const a=t[r],c=n[a.id];c.needsUpdate!==!1&&a.setValue(e,c.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function Iy(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const _P=37297;let vP=0;function yP(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}const Dy=new ct;function xP(s){_t._getMatrix(Dy,_t.workingColorSpace,s);const e=`mat3( ${Dy.elements.map(t=>t.toFixed(4))} )`;switch(_t.getTransfer(s)){case vc:return[e,"LinearTransferOETF"];case Ft:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[e,"LinearTransferOETF"]}}function Ly(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+yP(s.getShaderSource(e),o)}else return i}function MP(s,e){const t=xP(e);return[`vec4 ${s}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function bP(s,e){let t;switch(e){case lM:t="Linear";break;case uM:t="Reinhard";break;case hM:t="Cineon";break;case tp:t="ACESFilmic";break;case mu:t="AgX";break;case fM:t="Neutral";break;case dM:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Gl=new F;function SP(){_t.getLuminanceCoefficients(Gl);const s=Gl.x.toFixed(4),e=Gl.y.toFixed(4),t=Gl.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function TP(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ja).join(`
`)}function wP(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function EP(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let a=1;r.type===s.FLOAT_MAT2&&(a=2),r.type===s.FLOAT_MAT3&&(a=3),r.type===s.FLOAT_MAT4&&(a=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function Ja(s){return s!==""}function Oy(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ny(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const AP=/^[ \t]*#include +<([\w\d./]+)>/gm;function Af(s){return s.replace(AP,RP)}const CP=new Map;function RP(s,e){let t=tt[e];if(t===void 0){const n=CP.get(e);if(n!==void 0)t=tt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Af(t)}const PP=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Uy(s){return s.replace(PP,IP)}function IP(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Fy(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function DP(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===ep?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===ea?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===nr&&(e="SHADOWMAP_TYPE_VSM"),e}function LP(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Br:case fs:e="ENVMAP_TYPE_CUBE";break;case Ea:e="ENVMAP_TYPE_CUBE_UV";break}return e}function OP(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case fs:e="ENVMAP_MODE_REFRACTION";break}return e}function NP(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case kc:e="ENVMAP_BLENDING_MULTIPLY";break;case aM:e="ENVMAP_BLENDING_MIX";break;case cM:e="ENVMAP_BLENDING_ADD";break}return e}function UP(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function FP(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,a=t.fragmentShader;const c=DP(t),l=LP(t),u=OP(t),h=NP(t),d=UP(t),f=TP(t),p=wP(r),_=i.createProgram();let g,m,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ja).join(`
`),g.length>0&&(g+=`
`),m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Ja).join(`
`),m.length>0&&(m+=`
`)):(g=[Fy(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ja).join(`
`),m=[Fy(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ur?"#define TONE_MAPPING":"",t.toneMapping!==Ur?tt.tonemapping_pars_fragment:"",t.toneMapping!==Ur?bP("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",tt.colorspace_pars_fragment,MP("linearToOutputTexel",t.outputColorSpace),SP(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ja).join(`
`)),o=Af(o),o=Oy(o,t),o=Ny(o,t),a=Af(a),a=Oy(a,t),a=Ny(a,t),o=Uy(o),a=Uy(a),t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",t.glslVersion===yf?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===yf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const M=b+g+o,x=b+m+a,A=Iy(i,i.VERTEX_SHADER,M),C=Iy(i,i.FRAGMENT_SHADER,x);i.attachShader(_,A),i.attachShader(_,C),t.index0AttributeName!==void 0?i.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(_,0,"position"),i.linkProgram(_);function D(z){if(s.debug.checkShaderErrors){const $=i.getProgramInfoLog(_).trim(),j=i.getShaderInfoLog(A).trim(),Y=i.getShaderInfoLog(C).trim();let ee=!0,q=!0;if(i.getProgramParameter(_,i.LINK_STATUS)===!1)if(ee=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,_,A,C);else{const se=Ly(i,A,"vertex"),J=Ly(i,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(_,i.VALIDATE_STATUS)+`

Material Name: `+z.name+`
Material Type: `+z.type+`

Program Info Log: `+$+`
`+se+`
`+J)}else $!==""?console.warn("THREE.WebGLProgram: Program Info Log:",$):(j===""||Y==="")&&(q=!1);q&&(z.diagnostics={runnable:ee,programLog:$,vertexShader:{log:j,prefix:g},fragmentShader:{log:Y,prefix:m}})}i.deleteShader(A),i.deleteShader(C),O=new eu(i,_),w=EP(i,_)}let O;this.getUniforms=function(){return O===void 0&&D(this),O};let w;this.getAttributes=function(){return w===void 0&&D(this),w};let E=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return E===!1&&(E=i.getProgramParameter(_,_P)),E},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(_),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=vP++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=A,this.fragmentShader=C,this}let BP=0;class zP{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new kP(e),t.set(e,n)),n}}class kP{constructor(e){this.id=BP++,this.code=e,this.usedTimes=0}}function VP(s,e,t,n,i,r,o){const a=new mh,c=new zP,l=new Set,u=[],h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(w){return l.add(w),w===0?"uv":`uv${w}`}function g(w,E,z,$,j){const Y=$.fog,ee=j.geometry,q=w.isMeshStandardMaterial?$.environment:null,se=(w.isMeshStandardMaterial?t:e).get(w.envMap||q),J=se&&se.mapping===Ea?se.image.height:null,ge=p[w.type];w.precision!==null&&(f=i.getMaxPrecision(w.precision),f!==w.precision&&console.warn("THREE.WebGLProgram.getParameters:",w.precision,"not supported, using",f,"instead."));const xe=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,Ae=xe!==void 0?xe.length:0;let He=0;ee.morphAttributes.position!==void 0&&(He=1),ee.morphAttributes.normal!==void 0&&(He=2),ee.morphAttributes.color!==void 0&&(He=3);let lt,Z,ce,me;if(ge){const pe=Oi[ge];lt=pe.vertexShader,Z=pe.fragmentShader}else lt=w.vertexShader,Z=w.fragmentShader,c.update(w),ce=c.getVertexShaderID(w),me=c.getFragmentShaderID(w);const Te=s.getRenderTarget(),Ne=s.state.buffers.depth.getReversed(),Ke=j.isInstancedMesh===!0,Ge=j.isBatchedMesh===!0,gt=!!w.map,y=!!w.matcap,We=!!se,B=!!w.aoMap,be=!!w.lightMap,ie=!!w.bumpMap,re=!!w.normalMap,te=!!w.displacementMap,Se=!!w.emissiveMap,ue=!!w.metalnessMap,U=!!w.roughnessMap,P=w.anisotropy>0,W=w.clearcoat>0,K=w.dispersion>0,oe=w.iridescence>0,Q=w.sheen>0,Be=w.transmission>0,Me=P&&!!w.anisotropyMap,Ve=W&&!!w.clearcoatMap,Xe=W&&!!w.clearcoatNormalMap,he=W&&!!w.clearcoatRoughnessMap,Pe=oe&&!!w.iridescenceMap,$e=oe&&!!w.iridescenceThicknessMap,Je=Q&&!!w.sheenColorMap,Re=Q&&!!w.sheenRoughnessMap,at=!!w.specularMap,nt=!!w.specularColorMap,Et=!!w.specularIntensityMap,G=Be&&!!w.transmissionMap,Ie=Be&&!!w.thicknessMap,ne=!!w.gradientMap,de=!!w.alphaMap,Ue=w.alphaTest>0,De=!!w.alphaHash,it=!!w.extensions;let Ht=Ur;w.toneMapped&&(Te===null||Te.isXRRenderTarget===!0)&&(Ht=s.toneMapping);const we={shaderID:ge,shaderType:w.type,shaderName:w.name,vertexShader:lt,fragmentShader:Z,defines:w.defines,customVertexShaderID:ce,customFragmentShaderID:me,isRawShaderMaterial:w.isRawShaderMaterial===!0,glslVersion:w.glslVersion,precision:f,batching:Ge,batchingColor:Ge&&j._colorsTexture!==null,instancing:Ke,instancingColor:Ke&&j.instanceColor!==null,instancingMorph:Ke&&j.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:Te===null?s.outputColorSpace:Te.isXRRenderTarget===!0?Te.texture.colorSpace:Gn,alphaToCoverage:!!w.alphaToCoverage,map:gt,matcap:y,envMap:We,envMapMode:We&&se.mapping,envMapCubeUVHeight:J,aoMap:B,lightMap:be,bumpMap:ie,normalMap:re,displacementMap:d&&te,emissiveMap:Se,normalMapObjectSpace:re&&w.normalMapType===MM,normalMapTangentSpace:re&&w.normalMapType===ys,metalnessMap:ue,roughnessMap:U,anisotropy:P,anisotropyMap:Me,clearcoat:W,clearcoatMap:Ve,clearcoatNormalMap:Xe,clearcoatRoughnessMap:he,dispersion:K,iridescence:oe,iridescenceMap:Pe,iridescenceThicknessMap:$e,sheen:Q,sheenColorMap:Je,sheenRoughnessMap:Re,specularMap:at,specularColorMap:nt,specularIntensityMap:Et,transmission:Be,transmissionMap:G,thicknessMap:Ie,gradientMap:ne,opaque:w.transparent===!1&&w.blending===no&&w.alphaToCoverage===!1,alphaMap:de,alphaTest:Ue,alphaHash:De,combine:w.combine,mapUv:gt&&_(w.map.channel),aoMapUv:B&&_(w.aoMap.channel),lightMapUv:be&&_(w.lightMap.channel),bumpMapUv:ie&&_(w.bumpMap.channel),normalMapUv:re&&_(w.normalMap.channel),displacementMapUv:te&&_(w.displacementMap.channel),emissiveMapUv:Se&&_(w.emissiveMap.channel),metalnessMapUv:ue&&_(w.metalnessMap.channel),roughnessMapUv:U&&_(w.roughnessMap.channel),anisotropyMapUv:Me&&_(w.anisotropyMap.channel),clearcoatMapUv:Ve&&_(w.clearcoatMap.channel),clearcoatNormalMapUv:Xe&&_(w.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:he&&_(w.clearcoatRoughnessMap.channel),iridescenceMapUv:Pe&&_(w.iridescenceMap.channel),iridescenceThicknessMapUv:$e&&_(w.iridescenceThicknessMap.channel),sheenColorMapUv:Je&&_(w.sheenColorMap.channel),sheenRoughnessMapUv:Re&&_(w.sheenRoughnessMap.channel),specularMapUv:at&&_(w.specularMap.channel),specularColorMapUv:nt&&_(w.specularColorMap.channel),specularIntensityMapUv:Et&&_(w.specularIntensityMap.channel),transmissionMapUv:G&&_(w.transmissionMap.channel),thicknessMapUv:Ie&&_(w.thicknessMap.channel),alphaMapUv:de&&_(w.alphaMap.channel),vertexTangents:!!ee.attributes.tangent&&(re||P),vertexColors:w.vertexColors,vertexAlphas:w.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,pointsUvs:j.isPoints===!0&&!!ee.attributes.uv&&(gt||de),fog:!!Y,useFog:w.fog===!0,fogExp2:!!Y&&Y.isFogExp2,flatShading:w.flatShading===!0,sizeAttenuation:w.sizeAttenuation===!0,logarithmicDepthBuffer:h,reverseDepthBuffer:Ne,skinning:j.isSkinnedMesh===!0,morphTargets:ee.morphAttributes.position!==void 0,morphNormals:ee.morphAttributes.normal!==void 0,morphColors:ee.morphAttributes.color!==void 0,morphTargetsCount:Ae,morphTextureStride:He,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numSpotLightMaps:E.spotLightMap.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numSpotLightShadowsWithMaps:E.numSpotLightShadowsWithMaps,numLightProbes:E.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:w.dithering,shadowMapEnabled:s.shadowMap.enabled&&z.length>0,shadowMapType:s.shadowMap.type,toneMapping:Ht,decodeVideoTexture:gt&&w.map.isVideoTexture===!0&&_t.getTransfer(w.map.colorSpace)===Ft,decodeVideoTextureEmissive:Se&&w.emissiveMap.isVideoTexture===!0&&_t.getTransfer(w.emissiveMap.colorSpace)===Ft,premultipliedAlpha:w.premultipliedAlpha,doubleSided:w.side===xi,flipSided:w.side===Qn,useDepthPacking:w.depthPacking>=0,depthPacking:w.depthPacking||0,index0AttributeName:w.index0AttributeName,extensionClipCullDistance:it&&w.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(it&&w.extensions.multiDraw===!0||Ge)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:w.customProgramCacheKey()};return we.vertexUv1s=l.has(1),we.vertexUv2s=l.has(2),we.vertexUv3s=l.has(3),l.clear(),we}function m(w){const E=[];if(w.shaderID?E.push(w.shaderID):(E.push(w.customVertexShaderID),E.push(w.customFragmentShaderID)),w.defines!==void 0)for(const z in w.defines)E.push(z),E.push(w.defines[z]);return w.isRawShaderMaterial===!1&&(b(E,w),M(E,w),E.push(s.outputColorSpace)),E.push(w.customProgramCacheKey),E.join()}function b(w,E){w.push(E.precision),w.push(E.outputColorSpace),w.push(E.envMapMode),w.push(E.envMapCubeUVHeight),w.push(E.mapUv),w.push(E.alphaMapUv),w.push(E.lightMapUv),w.push(E.aoMapUv),w.push(E.bumpMapUv),w.push(E.normalMapUv),w.push(E.displacementMapUv),w.push(E.emissiveMapUv),w.push(E.metalnessMapUv),w.push(E.roughnessMapUv),w.push(E.anisotropyMapUv),w.push(E.clearcoatMapUv),w.push(E.clearcoatNormalMapUv),w.push(E.clearcoatRoughnessMapUv),w.push(E.iridescenceMapUv),w.push(E.iridescenceThicknessMapUv),w.push(E.sheenColorMapUv),w.push(E.sheenRoughnessMapUv),w.push(E.specularMapUv),w.push(E.specularColorMapUv),w.push(E.specularIntensityMapUv),w.push(E.transmissionMapUv),w.push(E.thicknessMapUv),w.push(E.combine),w.push(E.fogExp2),w.push(E.sizeAttenuation),w.push(E.morphTargetsCount),w.push(E.morphAttributeCount),w.push(E.numDirLights),w.push(E.numPointLights),w.push(E.numSpotLights),w.push(E.numSpotLightMaps),w.push(E.numHemiLights),w.push(E.numRectAreaLights),w.push(E.numDirLightShadows),w.push(E.numPointLightShadows),w.push(E.numSpotLightShadows),w.push(E.numSpotLightShadowsWithMaps),w.push(E.numLightProbes),w.push(E.shadowMapType),w.push(E.toneMapping),w.push(E.numClippingPlanes),w.push(E.numClipIntersection),w.push(E.depthPacking)}function M(w,E){a.disableAll(),E.supportsVertexTextures&&a.enable(0),E.instancing&&a.enable(1),E.instancingColor&&a.enable(2),E.instancingMorph&&a.enable(3),E.matcap&&a.enable(4),E.envMap&&a.enable(5),E.normalMapObjectSpace&&a.enable(6),E.normalMapTangentSpace&&a.enable(7),E.clearcoat&&a.enable(8),E.iridescence&&a.enable(9),E.alphaTest&&a.enable(10),E.vertexColors&&a.enable(11),E.vertexAlphas&&a.enable(12),E.vertexUv1s&&a.enable(13),E.vertexUv2s&&a.enable(14),E.vertexUv3s&&a.enable(15),E.vertexTangents&&a.enable(16),E.anisotropy&&a.enable(17),E.alphaHash&&a.enable(18),E.batching&&a.enable(19),E.dispersion&&a.enable(20),E.batchingColor&&a.enable(21),w.push(a.mask),a.disableAll(),E.fog&&a.enable(0),E.useFog&&a.enable(1),E.flatShading&&a.enable(2),E.logarithmicDepthBuffer&&a.enable(3),E.reverseDepthBuffer&&a.enable(4),E.skinning&&a.enable(5),E.morphTargets&&a.enable(6),E.morphNormals&&a.enable(7),E.morphColors&&a.enable(8),E.premultipliedAlpha&&a.enable(9),E.shadowMapEnabled&&a.enable(10),E.doubleSided&&a.enable(11),E.flipSided&&a.enable(12),E.useDepthPacking&&a.enable(13),E.dithering&&a.enable(14),E.transmission&&a.enable(15),E.sheen&&a.enable(16),E.opaque&&a.enable(17),E.pointsUvs&&a.enable(18),E.decodeVideoTexture&&a.enable(19),E.decodeVideoTextureEmissive&&a.enable(20),E.alphaToCoverage&&a.enable(21),w.push(a.mask)}function x(w){const E=p[w.type];let z;if(E){const $=Oi[E];z=mp.clone($.uniforms)}else z=w.uniforms;return z}function A(w,E){let z;for(let $=0,j=u.length;$<j;$++){const Y=u[$];if(Y.cacheKey===E){z=Y,++z.usedTimes;break}}return z===void 0&&(z=new FP(s,E,w,r),u.push(z)),z}function C(w){if(--w.usedTimes===0){const E=u.indexOf(w);u[E]=u[u.length-1],u.pop(),w.destroy()}}function D(w){c.remove(w)}function O(){c.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:x,acquireProgram:A,releaseProgram:C,releaseShaderCache:D,programs:u,dispose:O}}function HP(){let s=new WeakMap;function e(o){return s.has(o)}function t(o){let a=s.get(o);return a===void 0&&(a={},s.set(o,a)),a}function n(o){s.delete(o)}function i(o,a,c){s.get(o)[a]=c}function r(){s=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:r}}function GP(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function By(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function zy(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(h,d,f,p,_,g){let m=s[e];return m===void 0?(m={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:_,group:g},s[e]=m):(m.id=h.id,m.object=h,m.geometry=d,m.material=f,m.groupOrder=p,m.renderOrder=h.renderOrder,m.z=_,m.group=g),e++,m}function a(h,d,f,p,_,g){const m=o(h,d,f,p,_,g);f.transmission>0?n.push(m):f.transparent===!0?i.push(m):t.push(m)}function c(h,d,f,p,_,g){const m=o(h,d,f,p,_,g);f.transmission>0?n.unshift(m):f.transparent===!0?i.unshift(m):t.unshift(m)}function l(h,d){t.length>1&&t.sort(h||GP),n.length>1&&n.sort(d||By),i.length>1&&i.sort(d||By)}function u(){for(let h=e,d=s.length;h<d;h++){const f=s[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:a,unshift:c,finish:u,sort:l}}function WP(){let s=new WeakMap;function e(n,i){const r=s.get(n);let o;return r===void 0?(o=new zy,s.set(n,[o])):i>=r.length?(o=new zy,r.push(o)):o=r[i],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function XP(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new F,color:new Ce};break;case"SpotLight":t={position:new F,direction:new F,color:new Ce,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new F,color:new Ce,distance:0,decay:0};break;case"HemisphereLight":t={direction:new F,skyColor:new Ce,groundColor:new Ce};break;case"RectAreaLight":t={color:new Ce,position:new F,halfWidth:new F,halfHeight:new F};break}return s[e.id]=t,t}}}function jP(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let $P=0;function qP(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function YP(s){const e=new XP,t=jP(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)n.probe.push(new F);const i=new F,r=new je,o=new je;function a(l){let u=0,h=0,d=0;for(let w=0;w<9;w++)n.probe[w].set(0,0,0);let f=0,p=0,_=0,g=0,m=0,b=0,M=0,x=0,A=0,C=0,D=0;l.sort(qP);for(let w=0,E=l.length;w<E;w++){const z=l[w],$=z.color,j=z.intensity,Y=z.distance,ee=z.shadow&&z.shadow.map?z.shadow.map.texture:null;if(z.isAmbientLight)u+=$.r*j,h+=$.g*j,d+=$.b*j;else if(z.isLightProbe){for(let q=0;q<9;q++)n.probe[q].addScaledVector(z.sh.coefficients[q],j);D++}else if(z.isDirectionalLight){const q=e.get(z);if(q.color.copy(z.color).multiplyScalar(z.intensity),z.castShadow){const se=z.shadow,J=t.get(z);J.shadowIntensity=se.intensity,J.shadowBias=se.bias,J.shadowNormalBias=se.normalBias,J.shadowRadius=se.radius,J.shadowMapSize=se.mapSize,n.directionalShadow[f]=J,n.directionalShadowMap[f]=ee,n.directionalShadowMatrix[f]=z.shadow.matrix,b++}n.directional[f]=q,f++}else if(z.isSpotLight){const q=e.get(z);q.position.setFromMatrixPosition(z.matrixWorld),q.color.copy($).multiplyScalar(j),q.distance=Y,q.coneCos=Math.cos(z.angle),q.penumbraCos=Math.cos(z.angle*(1-z.penumbra)),q.decay=z.decay,n.spot[_]=q;const se=z.shadow;if(z.map&&(n.spotLightMap[A]=z.map,A++,se.updateMatrices(z),z.castShadow&&C++),n.spotLightMatrix[_]=se.matrix,z.castShadow){const J=t.get(z);J.shadowIntensity=se.intensity,J.shadowBias=se.bias,J.shadowNormalBias=se.normalBias,J.shadowRadius=se.radius,J.shadowMapSize=se.mapSize,n.spotShadow[_]=J,n.spotShadowMap[_]=ee,x++}_++}else if(z.isRectAreaLight){const q=e.get(z);q.color.copy($).multiplyScalar(j),q.halfWidth.set(z.width*.5,0,0),q.halfHeight.set(0,z.height*.5,0),n.rectArea[g]=q,g++}else if(z.isPointLight){const q=e.get(z);if(q.color.copy(z.color).multiplyScalar(z.intensity),q.distance=z.distance,q.decay=z.decay,z.castShadow){const se=z.shadow,J=t.get(z);J.shadowIntensity=se.intensity,J.shadowBias=se.bias,J.shadowNormalBias=se.normalBias,J.shadowRadius=se.radius,J.shadowMapSize=se.mapSize,J.shadowCameraNear=se.camera.near,J.shadowCameraFar=se.camera.far,n.pointShadow[p]=J,n.pointShadowMap[p]=ee,n.pointShadowMatrix[p]=z.shadow.matrix,M++}n.point[p]=q,p++}else if(z.isHemisphereLight){const q=e.get(z);q.skyColor.copy(z.color).multiplyScalar(j),q.groundColor.copy(z.groundColor).multiplyScalar(j),n.hemi[m]=q,m++}}g>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ee.LTC_FLOAT_1,n.rectAreaLTC2=Ee.LTC_FLOAT_2):(n.rectAreaLTC1=Ee.LTC_HALF_1,n.rectAreaLTC2=Ee.LTC_HALF_2)),n.ambient[0]=u,n.ambient[1]=h,n.ambient[2]=d;const O=n.hash;(O.directionalLength!==f||O.pointLength!==p||O.spotLength!==_||O.rectAreaLength!==g||O.hemiLength!==m||O.numDirectionalShadows!==b||O.numPointShadows!==M||O.numSpotShadows!==x||O.numSpotMaps!==A||O.numLightProbes!==D)&&(n.directional.length=f,n.spot.length=_,n.rectArea.length=g,n.point.length=p,n.hemi.length=m,n.directionalShadow.length=b,n.directionalShadowMap.length=b,n.pointShadow.length=M,n.pointShadowMap.length=M,n.spotShadow.length=x,n.spotShadowMap.length=x,n.directionalShadowMatrix.length=b,n.pointShadowMatrix.length=M,n.spotLightMatrix.length=x+A-C,n.spotLightMap.length=A,n.numSpotLightShadowsWithMaps=C,n.numLightProbes=D,O.directionalLength=f,O.pointLength=p,O.spotLength=_,O.rectAreaLength=g,O.hemiLength=m,O.numDirectionalShadows=b,O.numPointShadows=M,O.numSpotShadows=x,O.numSpotMaps=A,O.numLightProbes=D,n.version=$P++)}function c(l,u){let h=0,d=0,f=0,p=0,_=0;const g=u.matrixWorldInverse;for(let m=0,b=l.length;m<b;m++){const M=l[m];if(M.isDirectionalLight){const x=n.directional[h];x.direction.setFromMatrixPosition(M.matrixWorld),i.setFromMatrixPosition(M.target.matrixWorld),x.direction.sub(i),x.direction.transformDirection(g),h++}else if(M.isSpotLight){const x=n.spot[f];x.position.setFromMatrixPosition(M.matrixWorld),x.position.applyMatrix4(g),x.direction.setFromMatrixPosition(M.matrixWorld),i.setFromMatrixPosition(M.target.matrixWorld),x.direction.sub(i),x.direction.transformDirection(g),f++}else if(M.isRectAreaLight){const x=n.rectArea[p];x.position.setFromMatrixPosition(M.matrixWorld),x.position.applyMatrix4(g),o.identity(),r.copy(M.matrixWorld),r.premultiply(g),o.extractRotation(r),x.halfWidth.set(M.width*.5,0,0),x.halfHeight.set(0,M.height*.5,0),x.halfWidth.applyMatrix4(o),x.halfHeight.applyMatrix4(o),p++}else if(M.isPointLight){const x=n.point[d];x.position.setFromMatrixPosition(M.matrixWorld),x.position.applyMatrix4(g),d++}else if(M.isHemisphereLight){const x=n.hemi[_];x.direction.setFromMatrixPosition(M.matrixWorld),x.direction.transformDirection(g),_++}}}return{setup:a,setupView:c,state:n}}function ky(s){const e=new YP(s),t=[],n=[];function i(u){l.camera=u,t.length=0,n.length=0}function r(u){t.push(u)}function o(u){n.push(u)}function a(){e.setup(t)}function c(u){e.setupView(t,u)}const l={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:l,setupLights:a,setupLightsView:c,pushLight:r,pushShadow:o}}function ZP(s){let e=new WeakMap;function t(i,r=0){const o=e.get(i);let a;return o===void 0?(a=new ky(s),e.set(i,[a])):r>=o.length?(a=new ky(s),o.push(a)):a=o[r],a}function n(){e=new WeakMap}return{get:t,dispose:n}}const KP=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,JP=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function QP(s,e,t){let n=new Ca;const i=new le,r=new le,o=new mt,a=new Cp({depthPacking:xM}),c=new Rp,l={},u=t.maxTextureSize,h={[dr]:Qn,[Qn]:dr,[xi]:xi},d=new qi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new le},radius:{value:4}},vertexShader:KP,fragmentShader:JP}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new st;p.setAttribute("position",new Ot(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new en(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ep;let m=this.type;this.render=function(C,D,O){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||C.length===0)return;const w=s.getRenderTarget(),E=s.getActiveCubeFace(),z=s.getActiveMipmapLevel(),$=s.state;$.setBlending(Nr),$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const j=m!==nr&&this.type===nr,Y=m===nr&&this.type!==nr;for(let ee=0,q=C.length;ee<q;ee++){const se=C[ee],J=se.shadow;if(J===void 0){console.warn("THREE.WebGLShadowMap:",se,"has no shadow.");continue}if(J.autoUpdate===!1&&J.needsUpdate===!1)continue;i.copy(J.mapSize);const ge=J.getFrameExtents();if(i.multiply(ge),r.copy(J.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(r.x=Math.floor(u/ge.x),i.x=r.x*ge.x,J.mapSize.x=r.x),i.y>u&&(r.y=Math.floor(u/ge.y),i.y=r.y*ge.y,J.mapSize.y=r.y)),J.map===null||j===!0||Y===!0){const Ae=this.type!==nr?{minFilter:vn,magFilter:vn}:{};J.map!==null&&J.map.dispose(),J.map=new fr(i.x,i.y,Ae),J.map.texture.name=se.name+".shadowMap",J.camera.updateProjectionMatrix()}s.setRenderTarget(J.map),s.clear();const xe=J.getViewportCount();for(let Ae=0;Ae<xe;Ae++){const He=J.getViewport(Ae);o.set(r.x*He.x,r.y*He.y,r.x*He.z,r.y*He.w),$.viewport(o),J.updateMatrices(se,Ae),n=J.getFrustum(),x(D,O,J.camera,se,this.type)}J.isPointLightShadow!==!0&&this.type===nr&&b(J,O),J.needsUpdate=!1}m=this.type,g.needsUpdate=!1,s.setRenderTarget(w,E,z)};function b(C,D){const O=e.update(_);d.defines.VSM_SAMPLES!==C.blurSamples&&(d.defines.VSM_SAMPLES=C.blurSamples,f.defines.VSM_SAMPLES=C.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),C.mapPass===null&&(C.mapPass=new fr(i.x,i.y)),d.uniforms.shadow_pass.value=C.map.texture,d.uniforms.resolution.value=C.mapSize,d.uniforms.radius.value=C.radius,s.setRenderTarget(C.mapPass),s.clear(),s.renderBufferDirect(D,null,O,d,_,null),f.uniforms.shadow_pass.value=C.mapPass.texture,f.uniforms.resolution.value=C.mapSize,f.uniforms.radius.value=C.radius,s.setRenderTarget(C.map),s.clear(),s.renderBufferDirect(D,null,O,f,_,null)}function M(C,D,O,w){let E=null;const z=O.isPointLight===!0?C.customDistanceMaterial:C.customDepthMaterial;if(z!==void 0)E=z;else if(E=O.isPointLight===!0?c:a,s.localClippingEnabled&&D.clipShadows===!0&&Array.isArray(D.clippingPlanes)&&D.clippingPlanes.length!==0||D.displacementMap&&D.displacementScale!==0||D.alphaMap&&D.alphaTest>0||D.map&&D.alphaTest>0||D.alphaToCoverage===!0){const $=E.uuid,j=D.uuid;let Y=l[$];Y===void 0&&(Y={},l[$]=Y);let ee=Y[j];ee===void 0&&(ee=E.clone(),Y[j]=ee,D.addEventListener("dispose",A)),E=ee}if(E.visible=D.visible,E.wireframe=D.wireframe,w===nr?E.side=D.shadowSide!==null?D.shadowSide:D.side:E.side=D.shadowSide!==null?D.shadowSide:h[D.side],E.alphaMap=D.alphaMap,E.alphaTest=D.alphaToCoverage===!0?.5:D.alphaTest,E.map=D.map,E.clipShadows=D.clipShadows,E.clippingPlanes=D.clippingPlanes,E.clipIntersection=D.clipIntersection,E.displacementMap=D.displacementMap,E.displacementScale=D.displacementScale,E.displacementBias=D.displacementBias,E.wireframeLinewidth=D.wireframeLinewidth,E.linewidth=D.linewidth,O.isPointLight===!0&&E.isMeshDistanceMaterial===!0){const $=s.properties.get(E);$.light=O}return E}function x(C,D,O,w,E){if(C.visible===!1)return;if(C.layers.test(D.layers)&&(C.isMesh||C.isLine||C.isPoints)&&(C.castShadow||C.receiveShadow&&E===nr)&&(!C.frustumCulled||n.intersectsObject(C))){C.modelViewMatrix.multiplyMatrices(O.matrixWorldInverse,C.matrixWorld);const j=e.update(C),Y=C.material;if(Array.isArray(Y)){const ee=j.groups;for(let q=0,se=ee.length;q<se;q++){const J=ee[q],ge=Y[J.materialIndex];if(ge&&ge.visible){const xe=M(C,ge,w,E);C.onBeforeShadow(s,C,D,O,j,xe,J),s.renderBufferDirect(O,null,j,xe,C,J),C.onAfterShadow(s,C,D,O,j,xe,J)}}}else if(Y.visible){const ee=M(C,Y,w,E);C.onBeforeShadow(s,C,D,O,j,ee,null),s.renderBufferDirect(O,null,j,ee,C,null),C.onAfterShadow(s,C,D,O,j,ee,null)}}const $=C.children;for(let j=0,Y=$.length;j<Y;j++)x($[j],D,O,w,E)}function A(C){C.target.removeEventListener("dispose",A);for(const O in l){const w=l[O],E=C.target.uuid;E in w&&(w[E].dispose(),delete w[E])}}}const eI={[cu]:lu,[uu]:fu,[hu]:pu,[lo]:du,[lu]:cu,[fu]:uu,[pu]:hu,[du]:lo};function tI(s,e){function t(){let G=!1;const Ie=new mt;let ne=null;const de=new mt(0,0,0,0);return{setMask:function(Ue){ne!==Ue&&!G&&(s.colorMask(Ue,Ue,Ue,Ue),ne=Ue)},setLocked:function(Ue){G=Ue},setClear:function(Ue,De,it,Ht,we){we===!0&&(Ue*=Ht,De*=Ht,it*=Ht),Ie.set(Ue,De,it,Ht),de.equals(Ie)===!1&&(s.clearColor(Ue,De,it,Ht),de.copy(Ie))},reset:function(){G=!1,ne=null,de.set(-1,0,0,0)}}}function n(){let G=!1,Ie=!1,ne=null,de=null,Ue=null;return{setReversed:function(De){if(Ie!==De){const it=e.get("EXT_clip_control");De?it.clipControlEXT(it.LOWER_LEFT_EXT,it.ZERO_TO_ONE_EXT):it.clipControlEXT(it.LOWER_LEFT_EXT,it.NEGATIVE_ONE_TO_ONE_EXT),Ie=De;const Ht=Ue;Ue=null,this.setClear(Ht)}},getReversed:function(){return Ie},setTest:function(De){De?Te(s.DEPTH_TEST):Ne(s.DEPTH_TEST)},setMask:function(De){ne!==De&&!G&&(s.depthMask(De),ne=De)},setFunc:function(De){if(Ie&&(De=eI[De]),de!==De){switch(De){case cu:s.depthFunc(s.NEVER);break;case lu:s.depthFunc(s.ALWAYS);break;case uu:s.depthFunc(s.LESS);break;case lo:s.depthFunc(s.LEQUAL);break;case hu:s.depthFunc(s.EQUAL);break;case du:s.depthFunc(s.GEQUAL);break;case fu:s.depthFunc(s.GREATER);break;case pu:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}de=De}},setLocked:function(De){G=De},setClear:function(De){Ue!==De&&(Ie&&(De=1-De),s.clearDepth(De),Ue=De)},reset:function(){G=!1,ne=null,de=null,Ue=null,Ie=!1}}}function i(){let G=!1,Ie=null,ne=null,de=null,Ue=null,De=null,it=null,Ht=null,we=null;return{setTest:function(pe){G||(pe?Te(s.STENCIL_TEST):Ne(s.STENCIL_TEST))},setMask:function(pe){Ie!==pe&&!G&&(s.stencilMask(pe),Ie=pe)},setFunc:function(pe,ht,on){(ne!==pe||de!==ht||Ue!==on)&&(s.stencilFunc(pe,ht,on),ne=pe,de=ht,Ue=on)},setOp:function(pe,ht,on){(De!==pe||it!==ht||Ht!==on)&&(s.stencilOp(pe,ht,on),De=pe,it=ht,Ht=on)},setLocked:function(pe){G=pe},setClear:function(pe){we!==pe&&(s.clearStencil(pe),we=pe)},reset:function(){G=!1,Ie=null,ne=null,de=null,Ue=null,De=null,it=null,Ht=null,we=null}}}const r=new t,o=new n,a=new i,c=new WeakMap,l=new WeakMap;let u={},h={},d=new WeakMap,f=[],p=null,_=!1,g=null,m=null,b=null,M=null,x=null,A=null,C=null,D=new Ce(0,0,0),O=0,w=!1,E=null,z=null,$=null,j=null,Y=null;const ee=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let q=!1,se=0;const J=s.getParameter(s.VERSION);J.indexOf("WebGL")!==-1?(se=parseFloat(/^WebGL (\d)/.exec(J)[1]),q=se>=1):J.indexOf("OpenGL ES")!==-1&&(se=parseFloat(/^OpenGL ES (\d)/.exec(J)[1]),q=se>=2);let ge=null,xe={};const Ae=s.getParameter(s.SCISSOR_BOX),He=s.getParameter(s.VIEWPORT),lt=new mt().fromArray(Ae),Z=new mt().fromArray(He);function ce(G,Ie,ne,de){const Ue=new Uint8Array(4),De=s.createTexture();s.bindTexture(G,De),s.texParameteri(G,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(G,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let it=0;it<ne;it++)G===s.TEXTURE_3D||G===s.TEXTURE_2D_ARRAY?s.texImage3D(Ie,0,s.RGBA,1,1,de,0,s.RGBA,s.UNSIGNED_BYTE,Ue):s.texImage2D(Ie+it,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Ue);return De}const me={};me[s.TEXTURE_2D]=ce(s.TEXTURE_2D,s.TEXTURE_2D,1),me[s.TEXTURE_CUBE_MAP]=ce(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),me[s.TEXTURE_2D_ARRAY]=ce(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),me[s.TEXTURE_3D]=ce(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),o.setClear(1),a.setClear(0),Te(s.DEPTH_TEST),o.setFunc(lo),ie(!1),re(ff),Te(s.CULL_FACE),B(Nr);function Te(G){u[G]!==!0&&(s.enable(G),u[G]=!0)}function Ne(G){u[G]!==!1&&(s.disable(G),u[G]=!1)}function Ke(G,Ie){return h[G]!==Ie?(s.bindFramebuffer(G,Ie),h[G]=Ie,G===s.DRAW_FRAMEBUFFER&&(h[s.FRAMEBUFFER]=Ie),G===s.FRAMEBUFFER&&(h[s.DRAW_FRAMEBUFFER]=Ie),!0):!1}function Ge(G,Ie){let ne=f,de=!1;if(G){ne=d.get(Ie),ne===void 0&&(ne=[],d.set(Ie,ne));const Ue=G.textures;if(ne.length!==Ue.length||ne[0]!==s.COLOR_ATTACHMENT0){for(let De=0,it=Ue.length;De<it;De++)ne[De]=s.COLOR_ATTACHMENT0+De;ne.length=Ue.length,de=!0}}else ne[0]!==s.BACK&&(ne[0]=s.BACK,de=!0);de&&s.drawBuffers(ne)}function gt(G){return p!==G?(s.useProgram(G),p=G,!0):!1}const y={[ns]:s.FUNC_ADD,[Wx]:s.FUNC_SUBTRACT,[Xx]:s.FUNC_REVERSE_SUBTRACT};y[jx]=s.MIN,y[$x]=s.MAX;const We={[qx]:s.ZERO,[Yx]:s.ONE,[Zx]:s.SRC_COLOR,[ou]:s.SRC_ALPHA,[nM]:s.SRC_ALPHA_SATURATE,[eM]:s.DST_COLOR,[Jx]:s.DST_ALPHA,[Kx]:s.ONE_MINUS_SRC_COLOR,[au]:s.ONE_MINUS_SRC_ALPHA,[tM]:s.ONE_MINUS_DST_COLOR,[Qx]:s.ONE_MINUS_DST_ALPHA,[iM]:s.CONSTANT_COLOR,[rM]:s.ONE_MINUS_CONSTANT_COLOR,[sM]:s.CONSTANT_ALPHA,[oM]:s.ONE_MINUS_CONSTANT_ALPHA};function B(G,Ie,ne,de,Ue,De,it,Ht,we,pe){if(G===Nr){_===!0&&(Ne(s.BLEND),_=!1);return}if(_===!1&&(Te(s.BLEND),_=!0),G!==Gx){if(G!==g||pe!==w){if((m!==ns||x!==ns)&&(s.blendEquation(s.FUNC_ADD),m=ns,x=ns),pe)switch(G){case no:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case pf:s.blendFunc(s.ONE,s.ONE);break;case mf:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case gf:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case no:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case pf:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case mf:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case gf:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}b=null,M=null,A=null,C=null,D.set(0,0,0),O=0,g=G,w=pe}return}Ue=Ue||Ie,De=De||ne,it=it||de,(Ie!==m||Ue!==x)&&(s.blendEquationSeparate(y[Ie],y[Ue]),m=Ie,x=Ue),(ne!==b||de!==M||De!==A||it!==C)&&(s.blendFuncSeparate(We[ne],We[de],We[De],We[it]),b=ne,M=de,A=De,C=it),(Ht.equals(D)===!1||we!==O)&&(s.blendColor(Ht.r,Ht.g,Ht.b,we),D.copy(Ht),O=we),g=G,w=!1}function be(G,Ie){G.side===xi?Ne(s.CULL_FACE):Te(s.CULL_FACE);let ne=G.side===Qn;Ie&&(ne=!ne),ie(ne),G.blending===no&&G.transparent===!1?B(Nr):B(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.blendColor,G.blendAlpha,G.premultipliedAlpha),o.setFunc(G.depthFunc),o.setTest(G.depthTest),o.setMask(G.depthWrite),r.setMask(G.colorWrite);const de=G.stencilWrite;a.setTest(de),de&&(a.setMask(G.stencilWriteMask),a.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),a.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),Se(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?Te(s.SAMPLE_ALPHA_TO_COVERAGE):Ne(s.SAMPLE_ALPHA_TO_COVERAGE)}function ie(G){E!==G&&(G?s.frontFace(s.CW):s.frontFace(s.CCW),E=G)}function re(G){G!==Vx?(Te(s.CULL_FACE),G!==z&&(G===ff?s.cullFace(s.BACK):G===Hx?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Ne(s.CULL_FACE),z=G}function te(G){G!==$&&(q&&s.lineWidth(G),$=G)}function Se(G,Ie,ne){G?(Te(s.POLYGON_OFFSET_FILL),(j!==Ie||Y!==ne)&&(s.polygonOffset(Ie,ne),j=Ie,Y=ne)):Ne(s.POLYGON_OFFSET_FILL)}function ue(G){G?Te(s.SCISSOR_TEST):Ne(s.SCISSOR_TEST)}function U(G){G===void 0&&(G=s.TEXTURE0+ee-1),ge!==G&&(s.activeTexture(G),ge=G)}function P(G,Ie,ne){ne===void 0&&(ge===null?ne=s.TEXTURE0+ee-1:ne=ge);let de=xe[ne];de===void 0&&(de={type:void 0,texture:void 0},xe[ne]=de),(de.type!==G||de.texture!==Ie)&&(ge!==ne&&(s.activeTexture(ne),ge=ne),s.bindTexture(G,Ie||me[G]),de.type=G,de.texture=Ie)}function W(){const G=xe[ge];G!==void 0&&G.type!==void 0&&(s.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function K(){try{s.compressedTexImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function oe(){try{s.compressedTexImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Q(){try{s.texSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Be(){try{s.texSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Me(){try{s.compressedTexSubImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ve(){try{s.compressedTexSubImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Xe(){try{s.texStorage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function he(){try{s.texStorage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Pe(){try{s.texImage2D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function $e(){try{s.texImage3D(...arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Je(G){lt.equals(G)===!1&&(s.scissor(G.x,G.y,G.z,G.w),lt.copy(G))}function Re(G){Z.equals(G)===!1&&(s.viewport(G.x,G.y,G.z,G.w),Z.copy(G))}function at(G,Ie){let ne=l.get(Ie);ne===void 0&&(ne=new WeakMap,l.set(Ie,ne));let de=ne.get(G);de===void 0&&(de=s.getUniformBlockIndex(Ie,G.name),ne.set(G,de))}function nt(G,Ie){const de=l.get(Ie).get(G);c.get(Ie)!==de&&(s.uniformBlockBinding(Ie,de,G.__bindingPointIndex),c.set(Ie,de))}function Et(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),o.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),u={},ge=null,xe={},h={},d=new WeakMap,f=[],p=null,_=!1,g=null,m=null,b=null,M=null,x=null,A=null,C=null,D=new Ce(0,0,0),O=0,w=!1,E=null,z=null,$=null,j=null,Y=null,lt.set(0,0,s.canvas.width,s.canvas.height),Z.set(0,0,s.canvas.width,s.canvas.height),r.reset(),o.reset(),a.reset()}return{buffers:{color:r,depth:o,stencil:a},enable:Te,disable:Ne,bindFramebuffer:Ke,drawBuffers:Ge,useProgram:gt,setBlending:B,setMaterial:be,setFlipSided:ie,setCullFace:re,setLineWidth:te,setPolygonOffset:Se,setScissorTest:ue,activeTexture:U,bindTexture:P,unbindTexture:W,compressedTexImage2D:K,compressedTexImage3D:oe,texImage2D:Pe,texImage3D:$e,updateUBOMapping:at,uniformBlockBinding:nt,texStorage2D:Xe,texStorage3D:he,texSubImage2D:Q,texSubImage3D:Be,compressedTexSubImage2D:Me,compressedTexSubImage3D:Ve,scissor:Je,viewport:Re,reset:Et}}function nI(s,e,t,n,i,r,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new le,u=new WeakMap;let h;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(U,P){return f?new OffscreenCanvas(U,P):Mc("canvas")}function _(U,P,W){let K=1;const oe=ue(U);if((oe.width>W||oe.height>W)&&(K=W/Math.max(oe.width,oe.height)),K<1)if(typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&U instanceof ImageBitmap||typeof VideoFrame<"u"&&U instanceof VideoFrame){const Q=Math.floor(K*oe.width),Be=Math.floor(K*oe.height);h===void 0&&(h=p(Q,Be));const Me=P?p(Q,Be):h;return Me.width=Q,Me.height=Be,Me.getContext("2d").drawImage(U,0,0,Q,Be),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+oe.width+"x"+oe.height+") to ("+Q+"x"+Be+")."),Me}else return"data"in U&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+oe.width+"x"+oe.height+")."),U;return U}function g(U){return U.generateMipmaps}function m(U){s.generateMipmap(U)}function b(U){return U.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:U.isWebGL3DRenderTarget?s.TEXTURE_3D:U.isWebGLArrayRenderTarget||U.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function M(U,P,W,K,oe=!1){if(U!==null){if(s[U]!==void 0)return s[U];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+U+"'")}let Q=P;if(P===s.RED&&(W===s.FLOAT&&(Q=s.R32F),W===s.HALF_FLOAT&&(Q=s.R16F),W===s.UNSIGNED_BYTE&&(Q=s.R8)),P===s.RED_INTEGER&&(W===s.UNSIGNED_BYTE&&(Q=s.R8UI),W===s.UNSIGNED_SHORT&&(Q=s.R16UI),W===s.UNSIGNED_INT&&(Q=s.R32UI),W===s.BYTE&&(Q=s.R8I),W===s.SHORT&&(Q=s.R16I),W===s.INT&&(Q=s.R32I)),P===s.RG&&(W===s.FLOAT&&(Q=s.RG32F),W===s.HALF_FLOAT&&(Q=s.RG16F),W===s.UNSIGNED_BYTE&&(Q=s.RG8)),P===s.RG_INTEGER&&(W===s.UNSIGNED_BYTE&&(Q=s.RG8UI),W===s.UNSIGNED_SHORT&&(Q=s.RG16UI),W===s.UNSIGNED_INT&&(Q=s.RG32UI),W===s.BYTE&&(Q=s.RG8I),W===s.SHORT&&(Q=s.RG16I),W===s.INT&&(Q=s.RG32I)),P===s.RGB_INTEGER&&(W===s.UNSIGNED_BYTE&&(Q=s.RGB8UI),W===s.UNSIGNED_SHORT&&(Q=s.RGB16UI),W===s.UNSIGNED_INT&&(Q=s.RGB32UI),W===s.BYTE&&(Q=s.RGB8I),W===s.SHORT&&(Q=s.RGB16I),W===s.INT&&(Q=s.RGB32I)),P===s.RGBA_INTEGER&&(W===s.UNSIGNED_BYTE&&(Q=s.RGBA8UI),W===s.UNSIGNED_SHORT&&(Q=s.RGBA16UI),W===s.UNSIGNED_INT&&(Q=s.RGBA32UI),W===s.BYTE&&(Q=s.RGBA8I),W===s.SHORT&&(Q=s.RGBA16I),W===s.INT&&(Q=s.RGBA32I)),P===s.RGB&&W===s.UNSIGNED_INT_5_9_9_9_REV&&(Q=s.RGB9_E5),P===s.RGBA){const Be=oe?vc:_t.getTransfer(K);W===s.FLOAT&&(Q=s.RGBA32F),W===s.HALF_FLOAT&&(Q=s.RGBA16F),W===s.UNSIGNED_BYTE&&(Q=Be===Ft?s.SRGB8_ALPHA8:s.RGBA8),W===s.UNSIGNED_SHORT_4_4_4_4&&(Q=s.RGBA4),W===s.UNSIGNED_SHORT_5_5_5_1&&(Q=s.RGB5_A1)}return(Q===s.R16F||Q===s.R32F||Q===s.RG16F||Q===s.RG32F||Q===s.RGBA16F||Q===s.RGBA32F)&&e.get("EXT_color_buffer_float"),Q}function x(U,P){let W;return U?P===null||P===zr||P===ha?W=s.DEPTH24_STENCIL8:P===oi?W=s.DEPTH32F_STENCIL8:P===ua&&(W=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):P===null||P===zr||P===ha?W=s.DEPTH_COMPONENT24:P===oi?W=s.DEPTH_COMPONENT32F:P===ua&&(W=s.DEPTH_COMPONENT16),W}function A(U,P){return g(U)===!0||U.isFramebufferTexture&&U.minFilter!==vn&&U.minFilter!==rn?Math.log2(Math.max(P.width,P.height))+1:U.mipmaps!==void 0&&U.mipmaps.length>0?U.mipmaps.length:U.isCompressedTexture&&Array.isArray(U.image)?P.mipmaps.length:1}function C(U){const P=U.target;P.removeEventListener("dispose",C),O(P),P.isVideoTexture&&u.delete(P)}function D(U){const P=U.target;P.removeEventListener("dispose",D),E(P)}function O(U){const P=n.get(U);if(P.__webglInit===void 0)return;const W=U.source,K=d.get(W);if(K){const oe=K[P.__cacheKey];oe.usedTimes--,oe.usedTimes===0&&w(U),Object.keys(K).length===0&&d.delete(W)}n.remove(U)}function w(U){const P=n.get(U);s.deleteTexture(P.__webglTexture);const W=U.source,K=d.get(W);delete K[P.__cacheKey],o.memory.textures--}function E(U){const P=n.get(U);if(U.depthTexture&&(U.depthTexture.dispose(),n.remove(U.depthTexture)),U.isWebGLCubeRenderTarget)for(let K=0;K<6;K++){if(Array.isArray(P.__webglFramebuffer[K]))for(let oe=0;oe<P.__webglFramebuffer[K].length;oe++)s.deleteFramebuffer(P.__webglFramebuffer[K][oe]);else s.deleteFramebuffer(P.__webglFramebuffer[K]);P.__webglDepthbuffer&&s.deleteRenderbuffer(P.__webglDepthbuffer[K])}else{if(Array.isArray(P.__webglFramebuffer))for(let K=0;K<P.__webglFramebuffer.length;K++)s.deleteFramebuffer(P.__webglFramebuffer[K]);else s.deleteFramebuffer(P.__webglFramebuffer);if(P.__webglDepthbuffer&&s.deleteRenderbuffer(P.__webglDepthbuffer),P.__webglMultisampledFramebuffer&&s.deleteFramebuffer(P.__webglMultisampledFramebuffer),P.__webglColorRenderbuffer)for(let K=0;K<P.__webglColorRenderbuffer.length;K++)P.__webglColorRenderbuffer[K]&&s.deleteRenderbuffer(P.__webglColorRenderbuffer[K]);P.__webglDepthRenderbuffer&&s.deleteRenderbuffer(P.__webglDepthRenderbuffer)}const W=U.textures;for(let K=0,oe=W.length;K<oe;K++){const Q=n.get(W[K]);Q.__webglTexture&&(s.deleteTexture(Q.__webglTexture),o.memory.textures--),n.remove(W[K])}n.remove(U)}let z=0;function $(){z=0}function j(){const U=z;return U>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+U+" texture units while this GPU supports only "+i.maxTextures),z+=1,U}function Y(U){const P=[];return P.push(U.wrapS),P.push(U.wrapT),P.push(U.wrapR||0),P.push(U.magFilter),P.push(U.minFilter),P.push(U.anisotropy),P.push(U.internalFormat),P.push(U.format),P.push(U.type),P.push(U.generateMipmaps),P.push(U.premultiplyAlpha),P.push(U.flipY),P.push(U.unpackAlignment),P.push(U.colorSpace),P.join()}function ee(U,P){const W=n.get(U);if(U.isVideoTexture&&te(U),U.isRenderTargetTexture===!1&&U.version>0&&W.__version!==U.version){const K=U.image;if(K===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(K.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Z(W,U,P);return}}t.bindTexture(s.TEXTURE_2D,W.__webglTexture,s.TEXTURE0+P)}function q(U,P){const W=n.get(U);if(U.version>0&&W.__version!==U.version){Z(W,U,P);return}t.bindTexture(s.TEXTURE_2D_ARRAY,W.__webglTexture,s.TEXTURE0+P)}function se(U,P){const W=n.get(U);if(U.version>0&&W.__version!==U.version){Z(W,U,P);return}t.bindTexture(s.TEXTURE_3D,W.__webglTexture,s.TEXTURE0+P)}function J(U,P){const W=n.get(U);if(U.version>0&&W.__version!==U.version){ce(W,U,P);return}t.bindTexture(s.TEXTURE_CUBE_MAP,W.__webglTexture,s.TEXTURE0+P)}const ge={[ps]:s.REPEAT,[bi]:s.CLAMP_TO_EDGE,[la]:s.MIRRORED_REPEAT},xe={[vn]:s.NEAREST,[sh]:s.NEAREST_MIPMAP_NEAREST,[Xs]:s.NEAREST_MIPMAP_LINEAR,[rn]:s.LINEAR,[ta]:s.LINEAR_MIPMAP_NEAREST,[Ni]:s.LINEAR_MIPMAP_LINEAR},Ae={[bM]:s.NEVER,[CM]:s.ALWAYS,[SM]:s.LESS,[hp]:s.LEQUAL,[TM]:s.EQUAL,[AM]:s.GEQUAL,[wM]:s.GREATER,[EM]:s.NOTEQUAL};function He(U,P){if(P.type===oi&&e.has("OES_texture_float_linear")===!1&&(P.magFilter===rn||P.magFilter===ta||P.magFilter===Xs||P.magFilter===Ni||P.minFilter===rn||P.minFilter===ta||P.minFilter===Xs||P.minFilter===Ni)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(U,s.TEXTURE_WRAP_S,ge[P.wrapS]),s.texParameteri(U,s.TEXTURE_WRAP_T,ge[P.wrapT]),(U===s.TEXTURE_3D||U===s.TEXTURE_2D_ARRAY)&&s.texParameteri(U,s.TEXTURE_WRAP_R,ge[P.wrapR]),s.texParameteri(U,s.TEXTURE_MAG_FILTER,xe[P.magFilter]),s.texParameteri(U,s.TEXTURE_MIN_FILTER,xe[P.minFilter]),P.compareFunction&&(s.texParameteri(U,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(U,s.TEXTURE_COMPARE_FUNC,Ae[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(P.magFilter===vn||P.minFilter!==Xs&&P.minFilter!==Ni||P.type===oi&&e.has("OES_texture_float_linear")===!1)return;if(P.anisotropy>1||n.get(P).__currentAnisotropy){const W=e.get("EXT_texture_filter_anisotropic");s.texParameterf(U,W.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy}}}function lt(U,P){let W=!1;U.__webglInit===void 0&&(U.__webglInit=!0,P.addEventListener("dispose",C));const K=P.source;let oe=d.get(K);oe===void 0&&(oe={},d.set(K,oe));const Q=Y(P);if(Q!==U.__cacheKey){oe[Q]===void 0&&(oe[Q]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,W=!0),oe[Q].usedTimes++;const Be=oe[U.__cacheKey];Be!==void 0&&(oe[U.__cacheKey].usedTimes--,Be.usedTimes===0&&w(P)),U.__cacheKey=Q,U.__webglTexture=oe[Q].texture}return W}function Z(U,P,W){let K=s.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(K=s.TEXTURE_2D_ARRAY),P.isData3DTexture&&(K=s.TEXTURE_3D);const oe=lt(U,P),Q=P.source;t.bindTexture(K,U.__webglTexture,s.TEXTURE0+W);const Be=n.get(Q);if(Q.version!==Be.__version||oe===!0){t.activeTexture(s.TEXTURE0+W);const Me=_t.getPrimaries(_t.workingColorSpace),Ve=P.colorSpace===Rr?null:_t.getPrimaries(P.colorSpace),Xe=P.colorSpace===Rr||Me===Ve?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,P.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,P.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Xe);let he=_(P.image,!1,i.maxTextureSize);he=Se(P,he);const Pe=r.convert(P.format,P.colorSpace),$e=r.convert(P.type);let Je=M(P.internalFormat,Pe,$e,P.colorSpace,P.isVideoTexture);He(K,P);let Re;const at=P.mipmaps,nt=P.isVideoTexture!==!0,Et=Be.__version===void 0||oe===!0,G=Q.dataReady,Ie=A(P,he);if(P.isDepthTexture)Je=x(P.format===fa,P.type),Et&&(nt?t.texStorage2D(s.TEXTURE_2D,1,Je,he.width,he.height):t.texImage2D(s.TEXTURE_2D,0,Je,he.width,he.height,0,Pe,$e,null));else if(P.isDataTexture)if(at.length>0){nt&&Et&&t.texStorage2D(s.TEXTURE_2D,Ie,Je,at[0].width,at[0].height);for(let ne=0,de=at.length;ne<de;ne++)Re=at[ne],nt?G&&t.texSubImage2D(s.TEXTURE_2D,ne,0,0,Re.width,Re.height,Pe,$e,Re.data):t.texImage2D(s.TEXTURE_2D,ne,Je,Re.width,Re.height,0,Pe,$e,Re.data);P.generateMipmaps=!1}else nt?(Et&&t.texStorage2D(s.TEXTURE_2D,Ie,Je,he.width,he.height),G&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,he.width,he.height,Pe,$e,he.data)):t.texImage2D(s.TEXTURE_2D,0,Je,he.width,he.height,0,Pe,$e,he.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){nt&&Et&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ie,Je,at[0].width,at[0].height,he.depth);for(let ne=0,de=at.length;ne<de;ne++)if(Re=at[ne],P.format!==Jn)if(Pe!==null)if(nt){if(G)if(P.layerUpdates.size>0){const Ue=wf(Re.width,Re.height,P.format,P.type);for(const De of P.layerUpdates){const it=Re.data.subarray(De*Ue/Re.data.BYTES_PER_ELEMENT,(De+1)*Ue/Re.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,ne,0,0,De,Re.width,Re.height,1,Pe,it)}P.clearLayerUpdates()}else t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,ne,0,0,0,Re.width,Re.height,he.depth,Pe,Re.data)}else t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,ne,Je,Re.width,Re.height,he.depth,0,Re.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else nt?G&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,ne,0,0,0,Re.width,Re.height,he.depth,Pe,$e,Re.data):t.texImage3D(s.TEXTURE_2D_ARRAY,ne,Je,Re.width,Re.height,he.depth,0,Pe,$e,Re.data)}else{nt&&Et&&t.texStorage2D(s.TEXTURE_2D,Ie,Je,at[0].width,at[0].height);for(let ne=0,de=at.length;ne<de;ne++)Re=at[ne],P.format!==Jn?Pe!==null?nt?G&&t.compressedTexSubImage2D(s.TEXTURE_2D,ne,0,0,Re.width,Re.height,Pe,Re.data):t.compressedTexImage2D(s.TEXTURE_2D,ne,Je,Re.width,Re.height,0,Re.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):nt?G&&t.texSubImage2D(s.TEXTURE_2D,ne,0,0,Re.width,Re.height,Pe,$e,Re.data):t.texImage2D(s.TEXTURE_2D,ne,Je,Re.width,Re.height,0,Pe,$e,Re.data)}else if(P.isDataArrayTexture)if(nt){if(Et&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ie,Je,he.width,he.height,he.depth),G)if(P.layerUpdates.size>0){const ne=wf(he.width,he.height,P.format,P.type);for(const de of P.layerUpdates){const Ue=he.data.subarray(de*ne/he.data.BYTES_PER_ELEMENT,(de+1)*ne/he.data.BYTES_PER_ELEMENT);t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,de,he.width,he.height,1,Pe,$e,Ue)}P.clearLayerUpdates()}else t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,he.width,he.height,he.depth,Pe,$e,he.data)}else t.texImage3D(s.TEXTURE_2D_ARRAY,0,Je,he.width,he.height,he.depth,0,Pe,$e,he.data);else if(P.isData3DTexture)nt?(Et&&t.texStorage3D(s.TEXTURE_3D,Ie,Je,he.width,he.height,he.depth),G&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,he.width,he.height,he.depth,Pe,$e,he.data)):t.texImage3D(s.TEXTURE_3D,0,Je,he.width,he.height,he.depth,0,Pe,$e,he.data);else if(P.isFramebufferTexture){if(Et)if(nt)t.texStorage2D(s.TEXTURE_2D,Ie,Je,he.width,he.height);else{let ne=he.width,de=he.height;for(let Ue=0;Ue<Ie;Ue++)t.texImage2D(s.TEXTURE_2D,Ue,Je,ne,de,0,Pe,$e,null),ne>>=1,de>>=1}}else if(at.length>0){if(nt&&Et){const ne=ue(at[0]);t.texStorage2D(s.TEXTURE_2D,Ie,Je,ne.width,ne.height)}for(let ne=0,de=at.length;ne<de;ne++)Re=at[ne],nt?G&&t.texSubImage2D(s.TEXTURE_2D,ne,0,0,Pe,$e,Re):t.texImage2D(s.TEXTURE_2D,ne,Je,Pe,$e,Re);P.generateMipmaps=!1}else if(nt){if(Et){const ne=ue(he);t.texStorage2D(s.TEXTURE_2D,Ie,Je,ne.width,ne.height)}G&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Pe,$e,he)}else t.texImage2D(s.TEXTURE_2D,0,Je,Pe,$e,he);g(P)&&m(K),Be.__version=Q.version,P.onUpdate&&P.onUpdate(P)}U.__version=P.version}function ce(U,P,W){if(P.image.length!==6)return;const K=lt(U,P),oe=P.source;t.bindTexture(s.TEXTURE_CUBE_MAP,U.__webglTexture,s.TEXTURE0+W);const Q=n.get(oe);if(oe.version!==Q.__version||K===!0){t.activeTexture(s.TEXTURE0+W);const Be=_t.getPrimaries(_t.workingColorSpace),Me=P.colorSpace===Rr?null:_t.getPrimaries(P.colorSpace),Ve=P.colorSpace===Rr||Be===Me?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,P.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,P.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ve);const Xe=P.isCompressedTexture||P.image[0].isCompressedTexture,he=P.image[0]&&P.image[0].isDataTexture,Pe=[];for(let de=0;de<6;de++)!Xe&&!he?Pe[de]=_(P.image[de],!0,i.maxCubemapSize):Pe[de]=he?P.image[de].image:P.image[de],Pe[de]=Se(P,Pe[de]);const $e=Pe[0],Je=r.convert(P.format,P.colorSpace),Re=r.convert(P.type),at=M(P.internalFormat,Je,Re,P.colorSpace),nt=P.isVideoTexture!==!0,Et=Q.__version===void 0||K===!0,G=oe.dataReady;let Ie=A(P,$e);He(s.TEXTURE_CUBE_MAP,P);let ne;if(Xe){nt&&Et&&t.texStorage2D(s.TEXTURE_CUBE_MAP,Ie,at,$e.width,$e.height);for(let de=0;de<6;de++){ne=Pe[de].mipmaps;for(let Ue=0;Ue<ne.length;Ue++){const De=ne[Ue];P.format!==Jn?Je!==null?nt?G&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ue,0,0,De.width,De.height,Je,De.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ue,at,De.width,De.height,0,De.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):nt?G&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ue,0,0,De.width,De.height,Je,Re,De.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ue,at,De.width,De.height,0,Je,Re,De.data)}}}else{if(ne=P.mipmaps,nt&&Et){ne.length>0&&Ie++;const de=ue(Pe[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,Ie,at,de.width,de.height)}for(let de=0;de<6;de++)if(he){nt?G&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,Pe[de].width,Pe[de].height,Je,Re,Pe[de].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,at,Pe[de].width,Pe[de].height,0,Je,Re,Pe[de].data);for(let Ue=0;Ue<ne.length;Ue++){const it=ne[Ue].image[de].image;nt?G&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ue+1,0,0,it.width,it.height,Je,Re,it.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ue+1,at,it.width,it.height,0,Je,Re,it.data)}}else{nt?G&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,Je,Re,Pe[de]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,at,Je,Re,Pe[de]);for(let Ue=0;Ue<ne.length;Ue++){const De=ne[Ue];nt?G&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ue+1,0,0,Je,Re,De.image[de]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+de,Ue+1,at,Je,Re,De.image[de])}}}g(P)&&m(s.TEXTURE_CUBE_MAP),Q.__version=oe.version,P.onUpdate&&P.onUpdate(P)}U.__version=P.version}function me(U,P,W,K,oe,Q){const Be=r.convert(W.format,W.colorSpace),Me=r.convert(W.type),Ve=M(W.internalFormat,Be,Me,W.colorSpace),Xe=n.get(P),he=n.get(W);if(he.__renderTarget=P,!Xe.__hasExternalTextures){const Pe=Math.max(1,P.width>>Q),$e=Math.max(1,P.height>>Q);oe===s.TEXTURE_3D||oe===s.TEXTURE_2D_ARRAY?t.texImage3D(oe,Q,Ve,Pe,$e,P.depth,0,Be,Me,null):t.texImage2D(oe,Q,Ve,Pe,$e,0,Be,Me,null)}t.bindFramebuffer(s.FRAMEBUFFER,U),re(P)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,K,oe,he.__webglTexture,0,ie(P)):(oe===s.TEXTURE_2D||oe>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&oe<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,K,oe,he.__webglTexture,Q),t.bindFramebuffer(s.FRAMEBUFFER,null)}function Te(U,P,W){if(s.bindRenderbuffer(s.RENDERBUFFER,U),P.depthBuffer){const K=P.depthTexture,oe=K&&K.isDepthTexture?K.type:null,Q=x(P.stencilBuffer,oe),Be=P.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Me=ie(P);re(P)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Me,Q,P.width,P.height):W?s.renderbufferStorageMultisample(s.RENDERBUFFER,Me,Q,P.width,P.height):s.renderbufferStorage(s.RENDERBUFFER,Q,P.width,P.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Be,s.RENDERBUFFER,U)}else{const K=P.textures;for(let oe=0;oe<K.length;oe++){const Q=K[oe],Be=r.convert(Q.format,Q.colorSpace),Me=r.convert(Q.type),Ve=M(Q.internalFormat,Be,Me,Q.colorSpace),Xe=ie(P);W&&re(P)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Xe,Ve,P.width,P.height):re(P)?a.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Xe,Ve,P.width,P.height):s.renderbufferStorage(s.RENDERBUFFER,Ve,P.width,P.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Ne(U,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,U),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const K=n.get(P.depthTexture);K.__renderTarget=P,(!K.__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),ee(P.depthTexture,0);const oe=K.__webglTexture,Q=ie(P);if(P.depthTexture.format===da)re(P)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,oe,0,Q):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,oe,0);else if(P.depthTexture.format===fa)re(P)?a.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,oe,0,Q):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,oe,0);else throw new Error("Unknown depthTexture format")}function Ke(U){const P=n.get(U),W=U.isWebGLCubeRenderTarget===!0;if(P.__boundDepthTexture!==U.depthTexture){const K=U.depthTexture;if(P.__depthDisposeCallback&&P.__depthDisposeCallback(),K){const oe=()=>{delete P.__boundDepthTexture,delete P.__depthDisposeCallback,K.removeEventListener("dispose",oe)};K.addEventListener("dispose",oe),P.__depthDisposeCallback=oe}P.__boundDepthTexture=K}if(U.depthTexture&&!P.__autoAllocateDepthBuffer){if(W)throw new Error("target.depthTexture not supported in Cube render targets");const K=U.texture.mipmaps;K&&K.length>0?Ne(P.__webglFramebuffer[0],U):Ne(P.__webglFramebuffer,U)}else if(W){P.__webglDepthbuffer=[];for(let K=0;K<6;K++)if(t.bindFramebuffer(s.FRAMEBUFFER,P.__webglFramebuffer[K]),P.__webglDepthbuffer[K]===void 0)P.__webglDepthbuffer[K]=s.createRenderbuffer(),Te(P.__webglDepthbuffer[K],U,!1);else{const oe=U.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Q=P.__webglDepthbuffer[K];s.bindRenderbuffer(s.RENDERBUFFER,Q),s.framebufferRenderbuffer(s.FRAMEBUFFER,oe,s.RENDERBUFFER,Q)}}else{const K=U.texture.mipmaps;if(K&&K.length>0?t.bindFramebuffer(s.FRAMEBUFFER,P.__webglFramebuffer[0]):t.bindFramebuffer(s.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer===void 0)P.__webglDepthbuffer=s.createRenderbuffer(),Te(P.__webglDepthbuffer,U,!1);else{const oe=U.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Q=P.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,Q),s.framebufferRenderbuffer(s.FRAMEBUFFER,oe,s.RENDERBUFFER,Q)}}t.bindFramebuffer(s.FRAMEBUFFER,null)}function Ge(U,P,W){const K=n.get(U);P!==void 0&&me(K.__webglFramebuffer,U,U.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),W!==void 0&&Ke(U)}function gt(U){const P=U.texture,W=n.get(U),K=n.get(P);U.addEventListener("dispose",D);const oe=U.textures,Q=U.isWebGLCubeRenderTarget===!0,Be=oe.length>1;if(Be||(K.__webglTexture===void 0&&(K.__webglTexture=s.createTexture()),K.__version=P.version,o.memory.textures++),Q){W.__webglFramebuffer=[];for(let Me=0;Me<6;Me++)if(P.mipmaps&&P.mipmaps.length>0){W.__webglFramebuffer[Me]=[];for(let Ve=0;Ve<P.mipmaps.length;Ve++)W.__webglFramebuffer[Me][Ve]=s.createFramebuffer()}else W.__webglFramebuffer[Me]=s.createFramebuffer()}else{if(P.mipmaps&&P.mipmaps.length>0){W.__webglFramebuffer=[];for(let Me=0;Me<P.mipmaps.length;Me++)W.__webglFramebuffer[Me]=s.createFramebuffer()}else W.__webglFramebuffer=s.createFramebuffer();if(Be)for(let Me=0,Ve=oe.length;Me<Ve;Me++){const Xe=n.get(oe[Me]);Xe.__webglTexture===void 0&&(Xe.__webglTexture=s.createTexture(),o.memory.textures++)}if(U.samples>0&&re(U)===!1){W.__webglMultisampledFramebuffer=s.createFramebuffer(),W.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,W.__webglMultisampledFramebuffer);for(let Me=0;Me<oe.length;Me++){const Ve=oe[Me];W.__webglColorRenderbuffer[Me]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,W.__webglColorRenderbuffer[Me]);const Xe=r.convert(Ve.format,Ve.colorSpace),he=r.convert(Ve.type),Pe=M(Ve.internalFormat,Xe,he,Ve.colorSpace,U.isXRRenderTarget===!0),$e=ie(U);s.renderbufferStorageMultisample(s.RENDERBUFFER,$e,Pe,U.width,U.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Me,s.RENDERBUFFER,W.__webglColorRenderbuffer[Me])}s.bindRenderbuffer(s.RENDERBUFFER,null),U.depthBuffer&&(W.__webglDepthRenderbuffer=s.createRenderbuffer(),Te(W.__webglDepthRenderbuffer,U,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(Q){t.bindTexture(s.TEXTURE_CUBE_MAP,K.__webglTexture),He(s.TEXTURE_CUBE_MAP,P);for(let Me=0;Me<6;Me++)if(P.mipmaps&&P.mipmaps.length>0)for(let Ve=0;Ve<P.mipmaps.length;Ve++)me(W.__webglFramebuffer[Me][Ve],U,P,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ve);else me(W.__webglFramebuffer[Me],U,P,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0);g(P)&&m(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Be){for(let Me=0,Ve=oe.length;Me<Ve;Me++){const Xe=oe[Me],he=n.get(Xe);t.bindTexture(s.TEXTURE_2D,he.__webglTexture),He(s.TEXTURE_2D,Xe),me(W.__webglFramebuffer,U,Xe,s.COLOR_ATTACHMENT0+Me,s.TEXTURE_2D,0),g(Xe)&&m(s.TEXTURE_2D)}t.unbindTexture()}else{let Me=s.TEXTURE_2D;if((U.isWebGL3DRenderTarget||U.isWebGLArrayRenderTarget)&&(Me=U.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),t.bindTexture(Me,K.__webglTexture),He(Me,P),P.mipmaps&&P.mipmaps.length>0)for(let Ve=0;Ve<P.mipmaps.length;Ve++)me(W.__webglFramebuffer[Ve],U,P,s.COLOR_ATTACHMENT0,Me,Ve);else me(W.__webglFramebuffer,U,P,s.COLOR_ATTACHMENT0,Me,0);g(P)&&m(Me),t.unbindTexture()}U.depthBuffer&&Ke(U)}function y(U){const P=U.textures;for(let W=0,K=P.length;W<K;W++){const oe=P[W];if(g(oe)){const Q=b(U),Be=n.get(oe).__webglTexture;t.bindTexture(Q,Be),m(Q),t.unbindTexture()}}}const We=[],B=[];function be(U){if(U.samples>0){if(re(U)===!1){const P=U.textures,W=U.width,K=U.height;let oe=s.COLOR_BUFFER_BIT;const Q=U.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Be=n.get(U),Me=P.length>1;if(Me)for(let Xe=0;Xe<P.length;Xe++)t.bindFramebuffer(s.FRAMEBUFFER,Be.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Xe,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,Be.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Xe,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,Be.__webglMultisampledFramebuffer);const Ve=U.texture.mipmaps;Ve&&Ve.length>0?t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Be.__webglFramebuffer[0]):t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Be.__webglFramebuffer);for(let Xe=0;Xe<P.length;Xe++){if(U.resolveDepthBuffer&&(U.depthBuffer&&(oe|=s.DEPTH_BUFFER_BIT),U.stencilBuffer&&U.resolveStencilBuffer&&(oe|=s.STENCIL_BUFFER_BIT)),Me){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Be.__webglColorRenderbuffer[Xe]);const he=n.get(P[Xe]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,he,0)}s.blitFramebuffer(0,0,W,K,0,0,W,K,oe,s.NEAREST),c===!0&&(We.length=0,B.length=0,We.push(s.COLOR_ATTACHMENT0+Xe),U.depthBuffer&&U.resolveDepthBuffer===!1&&(We.push(Q),B.push(Q),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,B)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,We))}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Me)for(let Xe=0;Xe<P.length;Xe++){t.bindFramebuffer(s.FRAMEBUFFER,Be.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Xe,s.RENDERBUFFER,Be.__webglColorRenderbuffer[Xe]);const he=n.get(P[Xe]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,Be.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Xe,s.TEXTURE_2D,he,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,Be.__webglMultisampledFramebuffer)}else if(U.depthBuffer&&U.resolveDepthBuffer===!1&&c){const P=U.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[P])}}}function ie(U){return Math.min(i.maxSamples,U.samples)}function re(U){const P=n.get(U);return U.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function te(U){const P=o.render.frame;u.get(U)!==P&&(u.set(U,P),U.update())}function Se(U,P){const W=U.colorSpace,K=U.format,oe=U.type;return U.isCompressedTexture===!0||U.isVideoTexture===!0||W!==Gn&&W!==Rr&&(_t.getTransfer(W)===Ft?(K!==Jn||oe!==$i)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",W)),P}function ue(U){return typeof HTMLImageElement<"u"&&U instanceof HTMLImageElement?(l.width=U.naturalWidth||U.width,l.height=U.naturalHeight||U.height):typeof VideoFrame<"u"&&U instanceof VideoFrame?(l.width=U.displayWidth,l.height=U.displayHeight):(l.width=U.width,l.height=U.height),l}this.allocateTextureUnit=j,this.resetTextureUnits=$,this.setTexture2D=ee,this.setTexture2DArray=q,this.setTexture3D=se,this.setTextureCube=J,this.rebindTextures=Ge,this.setupRenderTarget=gt,this.updateRenderTargetMipmap=y,this.updateMultisampleRenderTarget=be,this.setupDepthRenderbuffer=Ke,this.setupFrameBufferTexture=me,this.useMultisampledRTT=re}function L1(s,e){function t(n,i=Rr){let r;const o=_t.getTransfer(i);if(n===$i)return s.UNSIGNED_BYTE;if(n===ah)return s.UNSIGNED_SHORT_4_4_4_4;if(n===ch)return s.UNSIGNED_SHORT_5_5_5_1;if(n===rp)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===np)return s.BYTE;if(n===ip)return s.SHORT;if(n===ua)return s.UNSIGNED_SHORT;if(n===oh)return s.INT;if(n===zr)return s.UNSIGNED_INT;if(n===oi)return s.FLOAT;if(n===Aa)return s.HALF_FLOAT;if(n===sp)return s.ALPHA;if(n===op)return s.RGB;if(n===Jn)return s.RGBA;if(n===da)return s.DEPTH_COMPONENT;if(n===fa)return s.DEPTH_STENCIL;if(n===lh)return s.RED;if(n===Vc)return s.RED_INTEGER;if(n===ap)return s.RG;if(n===uh)return s.RG_INTEGER;if(n===hh)return s.RGBA_INTEGER;if(n===nc||n===ic||n===rc||n===sc)if(o===Ft)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===nc)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===ic)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===rc)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===sc)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===nc)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===ic)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===rc)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===sc)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===gu||n===_u||n===vu||n===yu)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===gu)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===_u)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===vu)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===yu)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===xu||n===Mu||n===bu)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===xu||n===Mu)return o===Ft?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===bu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Su||n===Tu||n===wu||n===Eu||n===Au||n===Cu||n===Ru||n===Pu||n===Iu||n===Du||n===Lu||n===Ou||n===Nu||n===Uu)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===Su)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Tu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===wu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Eu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Au)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Cu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Ru)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Pu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Iu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Du)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Lu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Ou)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Nu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Uu)return o===Ft?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===oc||n===Fu||n===Bu)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===oc)return o===Ft?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Fu)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Bu)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===cp||n===zu||n===ku||n===Vu)if(r=e.get("EXT_texture_compression_rgtc"),r!==null){if(n===oc)return r.COMPRESSED_RED_RGTC1_EXT;if(n===zu)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===ku)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Vu)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===ha?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:t}}const iI=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,rI=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class sI{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new Xt,r=e.properties.get(i);r.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new qi({vertexShader:iI,fragmentShader:rI,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new en(new Ra(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class oI extends mr{constructor(e,t){super();const n=this;let i=null,r=1,o=null,a="local-floor",c=1,l=null,u=null,h=null,d=null,f=null,p=null;const _=new sI,g=t.getContextAttributes();let m=null,b=null;const M=[],x=[],A=new le;let C=null;const D=new _n;D.viewport=new mt;const O=new _n;O.viewport=new mt;const w=[D,O],E=new M1;let z=null,$=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Z){let ce=M[Z];return ce===void 0&&(ce=new Ql,M[Z]=ce),ce.getTargetRaySpace()},this.getControllerGrip=function(Z){let ce=M[Z];return ce===void 0&&(ce=new Ql,M[Z]=ce),ce.getGripSpace()},this.getHand=function(Z){let ce=M[Z];return ce===void 0&&(ce=new Ql,M[Z]=ce),ce.getHandSpace()};function j(Z){const ce=x.indexOf(Z.inputSource);if(ce===-1)return;const me=M[ce];me!==void 0&&(me.update(Z.inputSource,Z.frame,l||o),me.dispatchEvent({type:Z.type,data:Z.inputSource}))}function Y(){i.removeEventListener("select",j),i.removeEventListener("selectstart",j),i.removeEventListener("selectend",j),i.removeEventListener("squeeze",j),i.removeEventListener("squeezestart",j),i.removeEventListener("squeezeend",j),i.removeEventListener("end",Y),i.removeEventListener("inputsourceschange",ee);for(let Z=0;Z<M.length;Z++){const ce=x[Z];ce!==null&&(x[Z]=null,M[Z].disconnect(ce))}z=null,$=null,_.reset(),e.setRenderTarget(m),f=null,d=null,h=null,i=null,b=null,lt.stop(),n.isPresenting=!1,e.setPixelRatio(C),e.setSize(A.width,A.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Z){r=Z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Z){a=Z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(Z){l=Z},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(Z){if(i=Z,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",j),i.addEventListener("selectstart",j),i.addEventListener("selectend",j),i.addEventListener("squeeze",j),i.addEventListener("squeezestart",j),i.addEventListener("squeezeend",j),i.addEventListener("end",Y),i.addEventListener("inputsourceschange",ee),g.xrCompatible!==!0&&await t.makeXRCompatible(),C=e.getPixelRatio(),e.getSize(A),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let me=null,Te=null,Ne=null;g.depth&&(Ne=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,me=g.stencil?fa:da,Te=g.stencil?ha:zr);const Ke={colorFormat:t.RGBA8,depthFormat:Ne,scaleFactor:r};h=new XRWebGLBinding(i,t),d=h.createProjectionLayer(Ke),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),b=new fr(d.textureWidth,d.textureHeight,{format:Jn,type:$i,depthTexture:new Sh(d.textureWidth,d.textureHeight,Te,void 0,void 0,void 0,void 0,void 0,void 0,me),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const me={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,me),i.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),b=new fr(f.framebufferWidth,f.framebufferHeight,{format:Jn,type:$i,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(c),l=null,o=await i.requestReferenceSpace(a),lt.setContext(i),lt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function ee(Z){for(let ce=0;ce<Z.removed.length;ce++){const me=Z.removed[ce],Te=x.indexOf(me);Te>=0&&(x[Te]=null,M[Te].disconnect(me))}for(let ce=0;ce<Z.added.length;ce++){const me=Z.added[ce];let Te=x.indexOf(me);if(Te===-1){for(let Ke=0;Ke<M.length;Ke++)if(Ke>=x.length){x.push(me),Te=Ke;break}else if(x[Ke]===null){x[Ke]=me,Te=Ke;break}if(Te===-1)break}const Ne=M[Te];Ne&&Ne.connect(me)}}const q=new F,se=new F;function J(Z,ce,me){q.setFromMatrixPosition(ce.matrixWorld),se.setFromMatrixPosition(me.matrixWorld);const Te=q.distanceTo(se),Ne=ce.projectionMatrix.elements,Ke=me.projectionMatrix.elements,Ge=Ne[14]/(Ne[10]-1),gt=Ne[14]/(Ne[10]+1),y=(Ne[9]+1)/Ne[5],We=(Ne[9]-1)/Ne[5],B=(Ne[8]-1)/Ne[0],be=(Ke[8]+1)/Ke[0],ie=Ge*B,re=Ge*be,te=Te/(-B+be),Se=te*-B;if(ce.matrixWorld.decompose(Z.position,Z.quaternion,Z.scale),Z.translateX(Se),Z.translateZ(te),Z.matrixWorld.compose(Z.position,Z.quaternion,Z.scale),Z.matrixWorldInverse.copy(Z.matrixWorld).invert(),Ne[10]===-1)Z.projectionMatrix.copy(ce.projectionMatrix),Z.projectionMatrixInverse.copy(ce.projectionMatrixInverse);else{const ue=Ge+te,U=gt+te,P=ie-Se,W=re+(Te-Se),K=y*gt/U*ue,oe=We*gt/U*ue;Z.projectionMatrix.makePerspective(P,W,K,oe,ue,U),Z.projectionMatrixInverse.copy(Z.projectionMatrix).invert()}}function ge(Z,ce){ce===null?Z.matrixWorld.copy(Z.matrix):Z.matrixWorld.multiplyMatrices(ce.matrixWorld,Z.matrix),Z.matrixWorldInverse.copy(Z.matrixWorld).invert()}this.updateCamera=function(Z){if(i===null)return;let ce=Z.near,me=Z.far;_.texture!==null&&(_.depthNear>0&&(ce=_.depthNear),_.depthFar>0&&(me=_.depthFar)),E.near=O.near=D.near=ce,E.far=O.far=D.far=me,(z!==E.near||$!==E.far)&&(i.updateRenderState({depthNear:E.near,depthFar:E.far}),z=E.near,$=E.far),D.layers.mask=Z.layers.mask|2,O.layers.mask=Z.layers.mask|4,E.layers.mask=D.layers.mask|O.layers.mask;const Te=Z.parent,Ne=E.cameras;ge(E,Te);for(let Ke=0;Ke<Ne.length;Ke++)ge(Ne[Ke],Te);Ne.length===2?J(E,D,O):E.projectionMatrix.copy(D.projectionMatrix),xe(Z,E,Te)};function xe(Z,ce,me){me===null?Z.matrix.copy(ce.matrixWorld):(Z.matrix.copy(me.matrixWorld),Z.matrix.invert(),Z.matrix.multiply(ce.matrixWorld)),Z.matrix.decompose(Z.position,Z.quaternion,Z.scale),Z.updateMatrixWorld(!0),Z.projectionMatrix.copy(ce.projectionMatrix),Z.projectionMatrixInverse.copy(ce.projectionMatrixInverse),Z.isPerspectiveCamera&&(Z.fov=ga*2*Math.atan(1/Z.projectionMatrix.elements[5]),Z.zoom=1)}this.getCamera=function(){return E},this.getFoveation=function(){if(!(d===null&&f===null))return c},this.setFoveation=function(Z){c=Z,d!==null&&(d.fixedFoveation=Z),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=Z)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(E)};let Ae=null;function He(Z,ce){if(u=ce.getViewerPose(l||o),p=ce,u!==null){const me=u.views;f!==null&&(e.setRenderTargetFramebuffer(b,f.framebuffer),e.setRenderTarget(b));let Te=!1;me.length!==E.cameras.length&&(E.cameras.length=0,Te=!0);for(let Ge=0;Ge<me.length;Ge++){const gt=me[Ge];let y=null;if(f!==null)y=f.getViewport(gt);else{const B=h.getViewSubImage(d,gt);y=B.viewport,Ge===0&&(e.setRenderTargetTextures(b,B.colorTexture,B.depthStencilTexture),e.setRenderTarget(b))}let We=w[Ge];We===void 0&&(We=new _n,We.layers.enable(Ge),We.viewport=new mt,w[Ge]=We),We.matrix.fromArray(gt.transform.matrix),We.matrix.decompose(We.position,We.quaternion,We.scale),We.projectionMatrix.fromArray(gt.projectionMatrix),We.projectionMatrixInverse.copy(We.projectionMatrix).invert(),We.viewport.set(y.x,y.y,y.width,y.height),Ge===0&&(E.matrix.copy(We.matrix),E.matrix.decompose(E.position,E.quaternion,E.scale)),Te===!0&&E.cameras.push(We)}const Ne=i.enabledFeatures;if(Ne&&Ne.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&h){const Ge=h.getDepthInformation(me[0]);Ge&&Ge.isValid&&Ge.texture&&_.init(e,Ge,i.renderState)}}for(let me=0;me<M.length;me++){const Te=x[me],Ne=M[me];Te!==null&&Ne!==void 0&&Ne.update(Te,ce,l||o)}Ae&&Ae(Z,ce),ce.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ce}),p=null}const lt=new C1;lt.setAnimationLoop(He),this.setAnimationLoop=function(Z){Ae=Z},this.dispose=function(){}}}const Ns=new Ai,aI=new je;function cI(s,e){function t(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function n(g,m){m.color.getRGB(g.fogColor.value,OM(s)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function i(g,m,b,M,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?r(g,m):m.isMeshToonMaterial?(r(g,m),h(g,m)):m.isMeshPhongMaterial?(r(g,m),u(g,m)):m.isMeshStandardMaterial?(r(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,x)):m.isMeshMatcapMaterial?(r(g,m),p(g,m)):m.isMeshDepthMaterial?r(g,m):m.isMeshDistanceMaterial?(r(g,m),_(g,m)):m.isMeshNormalMaterial?r(g,m):m.isLineBasicMaterial?(o(g,m),m.isLineDashedMaterial&&a(g,m)):m.isPointsMaterial?c(g,m,b,M):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function r(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,t(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===Qn&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,t(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===Qn&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,t(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,t(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,t(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const b=e.get(m),M=b.envMap,x=b.envMapRotation;M&&(g.envMap.value=M,Ns.copy(x),Ns.x*=-1,Ns.y*=-1,Ns.z*=-1,M.isCubeTexture&&M.isRenderTargetTexture===!1&&(Ns.y*=-1,Ns.z*=-1),g.envMapRotation.value.setFromMatrix4(aI.makeRotationFromEuler(Ns)),g.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity,t(m.lightMap,g.lightMapTransform)),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,t(m.aoMap,g.aoMapTransform))}function o(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform))}function a(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function c(g,m,b,M){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*b,g.scale.value=M*.5,m.map&&(g.map.value=m.map,t(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function u(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function h(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,t(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,t(m.roughnessMap,g.roughnessMapTransform)),m.envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,b){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,t(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,t(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,t(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,t(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,t(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===Qn&&g.clearcoatNormalScale.value.negate())),m.dispersion>0&&(g.dispersion.value=m.dispersion),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,t(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,t(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=b.texture,g.transmissionSamplerSize.value.set(b.width,b.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,t(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,t(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,t(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,t(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,t(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function _(g,m){const b=e.get(m).light;g.referencePosition.value.setFromMatrixPosition(b.matrixWorld),g.nearDistance.value=b.shadow.camera.near,g.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function lI(s,e,t,n){let i={},r={},o=[];const a=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function c(b,M){const x=M.program;n.uniformBlockBinding(b,x)}function l(b,M){let x=i[b.id];x===void 0&&(p(b),x=u(b),i[b.id]=x,b.addEventListener("dispose",g));const A=M.program;n.updateUBOMapping(b,A);const C=e.render.frame;r[b.id]!==C&&(d(b),r[b.id]=C)}function u(b){const M=h();b.__bindingPointIndex=M;const x=s.createBuffer(),A=b.__size,C=b.usage;return s.bindBuffer(s.UNIFORM_BUFFER,x),s.bufferData(s.UNIFORM_BUFFER,A,C),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,M,x),x}function h(){for(let b=0;b<a;b++)if(o.indexOf(b)===-1)return o.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(b){const M=i[b.id],x=b.uniforms,A=b.__cache;s.bindBuffer(s.UNIFORM_BUFFER,M);for(let C=0,D=x.length;C<D;C++){const O=Array.isArray(x[C])?x[C]:[x[C]];for(let w=0,E=O.length;w<E;w++){const z=O[w];if(f(z,C,w,A)===!0){const $=z.__offset,j=Array.isArray(z.value)?z.value:[z.value];let Y=0;for(let ee=0;ee<j.length;ee++){const q=j[ee],se=_(q);typeof q=="number"||typeof q=="boolean"?(z.__data[0]=q,s.bufferSubData(s.UNIFORM_BUFFER,$+Y,z.__data)):q.isMatrix3?(z.__data[0]=q.elements[0],z.__data[1]=q.elements[1],z.__data[2]=q.elements[2],z.__data[3]=0,z.__data[4]=q.elements[3],z.__data[5]=q.elements[4],z.__data[6]=q.elements[5],z.__data[7]=0,z.__data[8]=q.elements[6],z.__data[9]=q.elements[7],z.__data[10]=q.elements[8],z.__data[11]=0):(q.toArray(z.__data,Y),Y+=se.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,$,z.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function f(b,M,x,A){const C=b.value,D=M+"_"+x;if(A[D]===void 0)return typeof C=="number"||typeof C=="boolean"?A[D]=C:A[D]=C.clone(),!0;{const O=A[D];if(typeof C=="number"||typeof C=="boolean"){if(O!==C)return A[D]=C,!0}else if(O.equals(C)===!1)return O.copy(C),!0}return!1}function p(b){const M=b.uniforms;let x=0;const A=16;for(let D=0,O=M.length;D<O;D++){const w=Array.isArray(M[D])?M[D]:[M[D]];for(let E=0,z=w.length;E<z;E++){const $=w[E],j=Array.isArray($.value)?$.value:[$.value];for(let Y=0,ee=j.length;Y<ee;Y++){const q=j[Y],se=_(q),J=x%A,ge=J%se.boundary,xe=J+ge;x+=ge,xe!==0&&A-xe<se.storage&&(x+=A-xe),$.__data=new Float32Array(se.storage/Float32Array.BYTES_PER_ELEMENT),$.__offset=x,x+=se.storage}}}const C=x%A;return C>0&&(x+=A-C),b.__size=x,b.__cache={},this}function _(b){const M={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(M.boundary=4,M.storage=4):b.isVector2?(M.boundary=8,M.storage=8):b.isVector3||b.isColor?(M.boundary=16,M.storage=12):b.isVector4?(M.boundary=16,M.storage=16):b.isMatrix3?(M.boundary=48,M.storage=48):b.isMatrix4?(M.boundary=64,M.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),M}function g(b){const M=b.target;M.removeEventListener("dispose",g);const x=o.indexOf(M.__bindingPointIndex);o.splice(x,1),s.deleteBuffer(i[M.id]),delete i[M.id],delete r[M.id]}function m(){for(const b in i)s.deleteBuffer(i[b]);o=[],i={},r={}}return{bind:c,update:l,dispose:m}}class O1{constructor(e={}){const{canvas:t=IM(),context:n=null,depth:i=!0,stencil:r=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),_=new Int32Array(4);let g=null,m=null;const b=[],M=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Ur,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const x=this;let A=!1;this._outputColorSpace=gn;let C=0,D=0,O=null,w=-1,E=null;const z=new mt,$=new mt;let j=null;const Y=new Ce(0);let ee=0,q=t.width,se=t.height,J=1,ge=null,xe=null;const Ae=new mt(0,0,q,se),He=new mt(0,0,q,se);let lt=!1;const Z=new Ca;let ce=!1,me=!1;const Te=new je,Ne=new je,Ke=new F,Ge=new mt,gt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let y=!1;function We(){return O===null?J:1}let B=n;function be(L,V){return t.getContext(L,V)}try{const L={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ih}`),t.addEventListener("webglcontextlost",de,!1),t.addEventListener("webglcontextrestored",Ue,!1),t.addEventListener("webglcontextcreationerror",De,!1),B===null){const V="webgl2";if(B=be(V,L),B===null)throw be(V)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let ie,re,te,Se,ue,U,P,W,K,oe,Q,Be,Me,Ve,Xe,he,Pe,$e,Je,Re,at,nt,Et,G;function Ie(){ie=new MR(B),ie.init(),nt=new L1(B,ie),re=new pR(B,ie,e,nt),te=new tI(B,ie),re.reverseDepthBuffer&&d&&te.buffers.depth.setReversed(!0),Se=new TR(B),ue=new HP,U=new nI(B,ie,te,ue,re,nt,Se),P=new gR(x),W=new xR(x),K=new PA(B),Et=new dR(B,K),oe=new bR(B,K,Se,Et),Q=new ER(B,oe,K,Se),Je=new wR(B,re,U),he=new mR(ue),Be=new VP(x,P,W,ie,re,Et,he),Me=new cI(x,ue),Ve=new WP,Xe=new ZP(ie),$e=new hR(x,P,W,te,Q,f,c),Pe=new QP(x,Q,re),G=new lI(B,Se,re,te),Re=new fR(B,ie,Se),at=new SR(B,ie,Se),Se.programs=Be.programs,x.capabilities=re,x.extensions=ie,x.properties=ue,x.renderLists=Ve,x.shadowMap=Pe,x.state=te,x.info=Se}Ie();const ne=new oI(x,B);this.xr=ne,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const L=ie.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=ie.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return J},this.setPixelRatio=function(L){L!==void 0&&(J=L,this.setSize(q,se,!1))},this.getSize=function(L){return L.set(q,se)},this.setSize=function(L,V,X=!0){if(ne.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}q=L,se=V,t.width=Math.floor(L*J),t.height=Math.floor(V*J),X===!0&&(t.style.width=L+"px",t.style.height=V+"px"),this.setViewport(0,0,L,V)},this.getDrawingBufferSize=function(L){return L.set(q*J,se*J).floor()},this.setDrawingBufferSize=function(L,V,X){q=L,se=V,J=X,t.width=Math.floor(L*X),t.height=Math.floor(V*X),this.setViewport(0,0,L,V)},this.getCurrentViewport=function(L){return L.copy(z)},this.getViewport=function(L){return L.copy(Ae)},this.setViewport=function(L,V,X,H){L.isVector4?Ae.set(L.x,L.y,L.z,L.w):Ae.set(L,V,X,H),te.viewport(z.copy(Ae).multiplyScalar(J).round())},this.getScissor=function(L){return L.copy(He)},this.setScissor=function(L,V,X,H){L.isVector4?He.set(L.x,L.y,L.z,L.w):He.set(L,V,X,H),te.scissor($.copy(He).multiplyScalar(J).round())},this.getScissorTest=function(){return lt},this.setScissorTest=function(L){te.setScissorTest(lt=L)},this.setOpaqueSort=function(L){ge=L},this.setTransparentSort=function(L){xe=L},this.getClearColor=function(L){return L.copy($e.getClearColor())},this.setClearColor=function(){$e.setClearColor(...arguments)},this.getClearAlpha=function(){return $e.getClearAlpha()},this.setClearAlpha=function(){$e.setClearAlpha(...arguments)},this.clear=function(L=!0,V=!0,X=!0){let H=0;if(L){let k=!1;if(O!==null){const ae=O.texture.format;k=ae===hh||ae===uh||ae===Vc}if(k){const ae=O.texture.type,ye=ae===$i||ae===zr||ae===ua||ae===ha||ae===ah||ae===ch,fe=$e.getClearColor(),_e=$e.getClearAlpha(),Fe=fe.r,Oe=fe.g,qe=fe.b;ye?(p[0]=Fe,p[1]=Oe,p[2]=qe,p[3]=_e,B.clearBufferuiv(B.COLOR,0,p)):(_[0]=Fe,_[1]=Oe,_[2]=qe,_[3]=_e,B.clearBufferiv(B.COLOR,0,_))}else H|=B.COLOR_BUFFER_BIT}V&&(H|=B.DEPTH_BUFFER_BIT),X&&(H|=B.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),B.clear(H)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",de,!1),t.removeEventListener("webglcontextrestored",Ue,!1),t.removeEventListener("webglcontextcreationerror",De,!1),$e.dispose(),Ve.dispose(),Xe.dispose(),ue.dispose(),P.dispose(),W.dispose(),Q.dispose(),Et.dispose(),G.dispose(),Be.dispose(),ne.dispose(),ne.removeEventListener("sessionstart",ft),ne.removeEventListener("sessionend",At),Dt.stop()};function de(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function Ue(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const L=Se.autoReset,V=Pe.enabled,X=Pe.autoUpdate,H=Pe.needsUpdate,k=Pe.type;Ie(),Se.autoReset=L,Pe.enabled=V,Pe.autoUpdate=X,Pe.needsUpdate=H,Pe.type=k}function De(L){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",L.statusMessage)}function it(L){const V=L.target;V.removeEventListener("dispose",it),Ht(V)}function Ht(L){we(L),ue.remove(L)}function we(L){const V=ue.get(L).programs;V!==void 0&&(V.forEach(function(X){Be.releaseProgram(X)}),L.isShaderMaterial&&Be.releaseShaderCache(L))}this.renderBufferDirect=function(L,V,X,H,k,ae){V===null&&(V=gt);const ye=k.isMesh&&k.matrixWorld.determinant()<0,fe=An(L,V,X,H,k);te.setMaterial(H,ye);let _e=X.index,Fe=1;if(H.wireframe===!0){if(_e=oe.getWireframeAttribute(X),_e===void 0)return;Fe=2}const Oe=X.drawRange,qe=X.attributes.position;let xt=Oe.start*Fe,Pt=(Oe.start+Oe.count)*Fe;ae!==null&&(xt=Math.max(xt,ae.start*Fe),Pt=Math.min(Pt,(ae.start+ae.count)*Fe)),_e!==null?(xt=Math.max(xt,0),Pt=Math.min(Pt,_e.count)):qe!=null&&(xt=Math.max(xt,0),Pt=Math.min(Pt,qe.count));const jt=Pt-xt;if(jt<0||jt===1/0)return;Et.setup(k,H,fe,X,_e);let Vt,bt=Re;if(_e!==null&&(Vt=K.get(_e),bt=at,bt.setIndex(Vt)),k.isMesh)H.wireframe===!0?(te.setLineWidth(H.wireframeLinewidth*We()),bt.setMode(B.LINES)):bt.setMode(B.TRIANGLES);else if(k.isLine){let Ze=H.linewidth;Ze===void 0&&(Ze=1),te.setLineWidth(Ze*We()),k.isLineSegments?bt.setMode(B.LINES):k.isLineLoop?bt.setMode(B.LINE_LOOP):bt.setMode(B.LINE_STRIP)}else k.isPoints?bt.setMode(B.POINTS):k.isSprite&&bt.setMode(B.TRIANGLES);if(k.isBatchedMesh)if(k._multiDrawInstances!==null)Jl("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),bt.renderMultiDrawInstances(k._multiDrawStarts,k._multiDrawCounts,k._multiDrawCount,k._multiDrawInstances);else if(ie.get("WEBGL_multi_draw"))bt.renderMultiDraw(k._multiDrawStarts,k._multiDrawCounts,k._multiDrawCount);else{const Ze=k._multiDrawStarts,ln=k._multiDrawCounts,It=k._multiDrawCount,ti=_e?K.get(_e).bytesPerElement:1,gr=ue.get(H).currentProgram.getUniforms();for(let Ln=0;Ln<It;Ln++)gr.setValue(B,"_gl_DrawID",Ln),bt.render(Ze[Ln]/ti,ln[Ln])}else if(k.isInstancedMesh)bt.renderInstances(xt,jt,k.count);else if(X.isInstancedBufferGeometry){const Ze=X._maxInstanceCount!==void 0?X._maxInstanceCount:1/0,ln=Math.min(X.instanceCount,Ze);bt.renderInstances(xt,jt,ln)}else bt.render(xt,jt)};function pe(L,V,X){L.transparent===!0&&L.side===xi&&L.forceSinglePass===!1?(L.side=Qn,L.needsUpdate=!0,Ct(L,V,X),L.side=dr,L.needsUpdate=!0,Ct(L,V,X),L.side=xi):Ct(L,V,X)}this.compile=function(L,V,X=null){X===null&&(X=L),m=Xe.get(X),m.init(V),M.push(m),X.traverseVisible(function(k){k.isLight&&k.layers.test(V.layers)&&(m.pushLight(k),k.castShadow&&m.pushShadow(k))}),L!==X&&L.traverseVisible(function(k){k.isLight&&k.layers.test(V.layers)&&(m.pushLight(k),k.castShadow&&m.pushShadow(k))}),m.setupLights();const H=new Set;return L.traverse(function(k){if(!(k.isMesh||k.isPoints||k.isLine||k.isSprite))return;const ae=k.material;if(ae)if(Array.isArray(ae))for(let ye=0;ye<ae.length;ye++){const fe=ae[ye];pe(fe,X,k),H.add(fe)}else pe(ae,X,k),H.add(ae)}),m=M.pop(),H},this.compileAsync=function(L,V,X=null){const H=this.compile(L,V,X);return new Promise(k=>{function ae(){if(H.forEach(function(ye){ue.get(ye).currentProgram.isReady()&&H.delete(ye)}),H.size===0){k(L);return}setTimeout(ae,10)}ie.get("KHR_parallel_shader_compile")!==null?ae():setTimeout(ae,10)})};let ht=null;function on(L){ht&&ht(L)}function ft(){Dt.stop()}function At(){Dt.start()}const Dt=new C1;Dt.setAnimationLoop(on),typeof self<"u"&&Dt.setContext(self),this.setAnimationLoop=function(L){ht=L,ne.setAnimationLoop(L),L===null?Dt.stop():Dt.start()},ne.addEventListener("sessionstart",ft),ne.addEventListener("sessionend",At),this.render=function(L,V){if(V!==void 0&&V.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;if(L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),V.parent===null&&V.matrixWorldAutoUpdate===!0&&V.updateMatrixWorld(),ne.enabled===!0&&ne.isPresenting===!0&&(ne.cameraAutoUpdate===!0&&ne.updateCamera(V),V=ne.getCamera()),L.isScene===!0&&L.onBeforeRender(x,L,V,O),m=Xe.get(L,M.length),m.init(V),M.push(m),Ne.multiplyMatrices(V.projectionMatrix,V.matrixWorldInverse),Z.setFromProjectionMatrix(Ne),me=this.localClippingEnabled,ce=he.init(this.clippingPlanes,me),g=Ve.get(L,b.length),g.init(),b.push(g),ne.enabled===!0&&ne.isPresenting===!0){const ae=x.xr.getDepthSensingMesh();ae!==null&&Ut(ae,V,-1/0,x.sortObjects)}Ut(L,V,0,x.sortObjects),g.finish(),x.sortObjects===!0&&g.sort(ge,xe),y=ne.enabled===!1||ne.isPresenting===!1||ne.hasDepthSensing()===!1,y&&$e.addToRenderList(g,L),this.info.render.frame++,ce===!0&&he.beginShadows();const X=m.state.shadowsArray;Pe.render(X,L,V),ce===!0&&he.endShadows(),this.info.autoReset===!0&&this.info.reset();const H=g.opaque,k=g.transmissive;if(m.setupLights(),V.isArrayCamera){const ae=V.cameras;if(k.length>0)for(let ye=0,fe=ae.length;ye<fe;ye++){const _e=ae[ye];Ye(H,k,L,_e)}y&&$e.render(L);for(let ye=0,fe=ae.length;ye<fe;ye++){const _e=ae[ye];Qe(g,L,_e,_e.viewport)}}else k.length>0&&Ye(H,k,L,V),y&&$e.render(L),Qe(g,L,V);O!==null&&D===0&&(U.updateMultisampleRenderTarget(O),U.updateRenderTargetMipmap(O)),L.isScene===!0&&L.onAfterRender(x,L,V),Et.resetDefaultState(),w=-1,E=null,M.pop(),M.length>0?(m=M[M.length-1],ce===!0&&he.setGlobalState(x.clippingPlanes,m.state.camera)):m=null,b.pop(),b.length>0?g=b[b.length-1]:g=null};function Ut(L,V,X,H){if(L.visible===!1)return;if(L.layers.test(V.layers)){if(L.isGroup)X=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(V);else if(L.isLight)m.pushLight(L),L.castShadow&&m.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||Z.intersectsSprite(L)){H&&Ge.setFromMatrixPosition(L.matrixWorld).applyMatrix4(Ne);const ye=Q.update(L),fe=L.material;fe.visible&&g.push(L,ye,fe,X,Ge.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(!L.frustumCulled||Z.intersectsObject(L))){const ye=Q.update(L),fe=L.material;if(H&&(L.boundingSphere!==void 0?(L.boundingSphere===null&&L.computeBoundingSphere(),Ge.copy(L.boundingSphere.center)):(ye.boundingSphere===null&&ye.computeBoundingSphere(),Ge.copy(ye.boundingSphere.center)),Ge.applyMatrix4(L.matrixWorld).applyMatrix4(Ne)),Array.isArray(fe)){const _e=ye.groups;for(let Fe=0,Oe=_e.length;Fe<Oe;Fe++){const qe=_e[Fe],xt=fe[qe.materialIndex];xt&&xt.visible&&g.push(L,ye,xt,X,Ge.z,qe)}}else fe.visible&&g.push(L,ye,fe,X,Ge.z,null)}}const ae=L.children;for(let ye=0,fe=ae.length;ye<fe;ye++)Ut(ae[ye],V,X,H)}function Qe(L,V,X,H){const k=L.opaque,ae=L.transmissive,ye=L.transparent;m.setupLightsView(X),ce===!0&&he.setGlobalState(x.clippingPlanes,X),H&&te.viewport(z.copy(H)),k.length>0&&et(k,V,X),ae.length>0&&et(ae,V,X),ye.length>0&&et(ye,V,X),te.buffers.depth.setTest(!0),te.buffers.depth.setMask(!0),te.buffers.color.setMask(!0),te.setPolygonOffset(!1)}function Ye(L,V,X,H){if((X.isScene===!0?X.overrideMaterial:null)!==null)return;m.state.transmissionRenderTarget[H.id]===void 0&&(m.state.transmissionRenderTarget[H.id]=new fr(1,1,{generateMipmaps:!0,type:ie.has("EXT_color_buffer_half_float")||ie.has("EXT_color_buffer_float")?Aa:$i,minFilter:Ni,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:_t.workingColorSpace}));const ae=m.state.transmissionRenderTarget[H.id],ye=H.viewport||z;ae.setSize(ye.z*x.transmissionResolutionScale,ye.w*x.transmissionResolutionScale);const fe=x.getRenderTarget();x.setRenderTarget(ae),x.getClearColor(Y),ee=x.getClearAlpha(),ee<1&&x.setClearColor(16777215,.5),x.clear(),y&&$e.render(X);const _e=x.toneMapping;x.toneMapping=Ur;const Fe=H.viewport;if(H.viewport!==void 0&&(H.viewport=void 0),m.setupLightsView(H),ce===!0&&he.setGlobalState(x.clippingPlanes,H),et(L,X,H),U.updateMultisampleRenderTarget(ae),U.updateRenderTargetMipmap(ae),ie.has("WEBGL_multisampled_render_to_texture")===!1){let Oe=!1;for(let qe=0,xt=V.length;qe<xt;qe++){const Pt=V[qe],jt=Pt.object,Vt=Pt.geometry,bt=Pt.material,Ze=Pt.group;if(bt.side===xi&&jt.layers.test(H.layers)){const ln=bt.side;bt.side=Qn,bt.needsUpdate=!0,ve(jt,X,H,Vt,bt,Ze),bt.side=ln,bt.needsUpdate=!0,Oe=!0}}Oe===!0&&(U.updateMultisampleRenderTarget(ae),U.updateRenderTargetMipmap(ae))}x.setRenderTarget(fe),x.setClearColor(Y,ee),Fe!==void 0&&(H.viewport=Fe),x.toneMapping=_e}function et(L,V,X){const H=V.isScene===!0?V.overrideMaterial:null;for(let k=0,ae=L.length;k<ae;k++){const ye=L[k],fe=ye.object,_e=ye.geometry,Fe=ye.group;let Oe=ye.material;Oe.allowOverride===!0&&H!==null&&(Oe=H),fe.layers.test(X.layers)&&ve(fe,V,X,_e,Oe,Fe)}}function ve(L,V,X,H,k,ae){L.onBeforeRender(x,V,X,H,k,ae),L.modelViewMatrix.multiplyMatrices(X.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),k.onBeforeRender(x,V,X,H,L,ae),k.transparent===!0&&k.side===xi&&k.forceSinglePass===!1?(k.side=Qn,k.needsUpdate=!0,x.renderBufferDirect(X,V,H,k,L,ae),k.side=dr,k.needsUpdate=!0,x.renderBufferDirect(X,V,H,k,L,ae),k.side=xi):x.renderBufferDirect(X,V,H,k,L,ae),L.onAfterRender(x,V,X,H,k,ae)}function Ct(L,V,X){V.isScene!==!0&&(V=gt);const H=ue.get(L),k=m.state.lights,ae=m.state.shadowsArray,ye=k.state.version,fe=Be.getParameters(L,k.state,ae,V,X),_e=Be.getProgramCacheKey(fe);let Fe=H.programs;H.environment=L.isMeshStandardMaterial?V.environment:null,H.fog=V.fog,H.envMap=(L.isMeshStandardMaterial?W:P).get(L.envMap||H.environment),H.envMapRotation=H.environment!==null&&L.envMap===null?V.environmentRotation:L.envMapRotation,Fe===void 0&&(L.addEventListener("dispose",it),Fe=new Map,H.programs=Fe);let Oe=Fe.get(_e);if(Oe!==void 0){if(H.currentProgram===Oe&&H.lightsStateVersion===ye)return Mt(L,fe),Oe}else fe.uniforms=Be.getUniforms(L),L.onBeforeCompile(fe,x),Oe=Be.acquireProgram(fe,_e),Fe.set(_e,Oe),H.uniforms=fe.uniforms;const qe=H.uniforms;return(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(qe.clippingPlanes=he.uniform),Mt(L,fe),H.needsLights=Rt(L),H.lightsStateVersion=ye,H.needsLights&&(qe.ambientLightColor.value=k.state.ambient,qe.lightProbe.value=k.state.probe,qe.directionalLights.value=k.state.directional,qe.directionalLightShadows.value=k.state.directionalShadow,qe.spotLights.value=k.state.spot,qe.spotLightShadows.value=k.state.spotShadow,qe.rectAreaLights.value=k.state.rectArea,qe.ltc_1.value=k.state.rectAreaLTC1,qe.ltc_2.value=k.state.rectAreaLTC2,qe.pointLights.value=k.state.point,qe.pointLightShadows.value=k.state.pointShadow,qe.hemisphereLights.value=k.state.hemi,qe.directionalShadowMap.value=k.state.directionalShadowMap,qe.directionalShadowMatrix.value=k.state.directionalShadowMatrix,qe.spotShadowMap.value=k.state.spotShadowMap,qe.spotLightMatrix.value=k.state.spotLightMatrix,qe.spotLightMap.value=k.state.spotLightMap,qe.pointShadowMap.value=k.state.pointShadowMap,qe.pointShadowMatrix.value=k.state.pointShadowMatrix),H.currentProgram=Oe,H.uniformsList=null,Oe}function Lt(L){if(L.uniformsList===null){const V=L.currentProgram.getUniforms();L.uniformsList=eu.seqWithValue(V.seq,L.uniforms)}return L.uniformsList}function Mt(L,V){const X=ue.get(L);X.outputColorSpace=V.outputColorSpace,X.batching=V.batching,X.batchingColor=V.batchingColor,X.instancing=V.instancing,X.instancingColor=V.instancingColor,X.instancingMorph=V.instancingMorph,X.skinning=V.skinning,X.morphTargets=V.morphTargets,X.morphNormals=V.morphNormals,X.morphColors=V.morphColors,X.morphTargetsCount=V.morphTargetsCount,X.numClippingPlanes=V.numClippingPlanes,X.numIntersection=V.numClipIntersection,X.vertexAlphas=V.vertexAlphas,X.vertexTangents=V.vertexTangents,X.toneMapping=V.toneMapping}function An(L,V,X,H,k){V.isScene!==!0&&(V=gt),U.resetTextureUnits();const ae=V.fog,ye=H.isMeshStandardMaterial?V.environment:null,fe=O===null?x.outputColorSpace:O.isXRRenderTarget===!0?O.texture.colorSpace:Gn,_e=(H.isMeshStandardMaterial?W:P).get(H.envMap||ye),Fe=H.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,Oe=!!X.attributes.tangent&&(!!H.normalMap||H.anisotropy>0),qe=!!X.morphAttributes.position,xt=!!X.morphAttributes.normal,Pt=!!X.morphAttributes.color;let jt=Ur;H.toneMapped&&(O===null||O.isXRRenderTarget===!0)&&(jt=x.toneMapping);const Vt=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,bt=Vt!==void 0?Vt.length:0,Ze=ue.get(H),ln=m.state.lights;if(ce===!0&&(me===!0||L!==E)){const bn=L===E&&H.id===w;he.setState(H,L,bn)}let It=!1;H.version===Ze.__version?(Ze.needsLights&&Ze.lightsStateVersion!==ln.state.version||Ze.outputColorSpace!==fe||k.isBatchedMesh&&Ze.batching===!1||!k.isBatchedMesh&&Ze.batching===!0||k.isBatchedMesh&&Ze.batchingColor===!0&&k.colorTexture===null||k.isBatchedMesh&&Ze.batchingColor===!1&&k.colorTexture!==null||k.isInstancedMesh&&Ze.instancing===!1||!k.isInstancedMesh&&Ze.instancing===!0||k.isSkinnedMesh&&Ze.skinning===!1||!k.isSkinnedMesh&&Ze.skinning===!0||k.isInstancedMesh&&Ze.instancingColor===!0&&k.instanceColor===null||k.isInstancedMesh&&Ze.instancingColor===!1&&k.instanceColor!==null||k.isInstancedMesh&&Ze.instancingMorph===!0&&k.morphTexture===null||k.isInstancedMesh&&Ze.instancingMorph===!1&&k.morphTexture!==null||Ze.envMap!==_e||H.fog===!0&&Ze.fog!==ae||Ze.numClippingPlanes!==void 0&&(Ze.numClippingPlanes!==he.numPlanes||Ze.numIntersection!==he.numIntersection)||Ze.vertexAlphas!==Fe||Ze.vertexTangents!==Oe||Ze.morphTargets!==qe||Ze.morphNormals!==xt||Ze.morphColors!==Pt||Ze.toneMapping!==jt||Ze.morphTargetsCount!==bt)&&(It=!0):(It=!0,Ze.__version=H.version);let ti=Ze.currentProgram;It===!0&&(ti=Ct(H,V,k));let gr=!1,Ln=!1,Gr=!1;const Bt=ti.getUniforms(),jn=Ze.uniforms;if(te.useProgram(ti.program)&&(gr=!0,Ln=!0,Gr=!0),H.id!==w&&(w=H.id,Ln=!0),gr||E!==L){te.buffers.depth.getReversed()?(Te.copy(L.projectionMatrix),JT(Te),QT(Te),Bt.setValue(B,"projectionMatrix",Te)):Bt.setValue(B,"projectionMatrix",L.projectionMatrix),Bt.setValue(B,"viewMatrix",L.matrixWorldInverse);const Cn=Bt.map.cameraPosition;Cn!==void 0&&Cn.setValue(B,Ke.setFromMatrixPosition(L.matrixWorld)),re.logarithmicDepthBuffer&&Bt.setValue(B,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),(H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshLambertMaterial||H.isMeshBasicMaterial||H.isMeshStandardMaterial||H.isShaderMaterial)&&Bt.setValue(B,"isOrthographic",L.isOrthographicCamera===!0),E!==L&&(E=L,Ln=!0,Gr=!0)}if(k.isSkinnedMesh){Bt.setOptional(B,k,"bindMatrix"),Bt.setOptional(B,k,"bindMatrixInverse");const bn=k.skeleton;bn&&(bn.boneTexture===null&&bn.computeBoneTexture(),Bt.setValue(B,"boneTexture",bn.boneTexture,U))}k.isBatchedMesh&&(Bt.setOptional(B,k,"batchingTexture"),Bt.setValue(B,"batchingTexture",k._matricesTexture,U),Bt.setOptional(B,k,"batchingIdTexture"),Bt.setValue(B,"batchingIdTexture",k._indirectTexture,U),Bt.setOptional(B,k,"batchingColorTexture"),k._colorsTexture!==null&&Bt.setValue(B,"batchingColorTexture",k._colorsTexture,U));const $n=X.morphAttributes;if(($n.position!==void 0||$n.normal!==void 0||$n.color!==void 0)&&Je.update(k,X,ti),(Ln||Ze.receiveShadow!==k.receiveShadow)&&(Ze.receiveShadow=k.receiveShadow,Bt.setValue(B,"receiveShadow",k.receiveShadow)),H.isMeshGouraudMaterial&&H.envMap!==null&&(jn.envMap.value=_e,jn.flipEnvMap.value=_e.isCubeTexture&&_e.isRenderTargetTexture===!1?-1:1),H.isMeshStandardMaterial&&H.envMap===null&&V.environment!==null&&(jn.envMapIntensity.value=V.environmentIntensity),Ln&&(Bt.setValue(B,"toneMappingExposure",x.toneMappingExposure),Ze.needsLights&&Xn(jn,Gr),ae&&H.fog===!0&&Me.refreshFogUniforms(jn,ae),Me.refreshMaterialUniforms(jn,H,J,se,m.state.transmissionRenderTarget[L.id]),eu.upload(B,Lt(Ze),jn,U)),H.isShaderMaterial&&H.uniformsNeedUpdate===!0&&(eu.upload(B,Lt(Ze),jn,U),H.uniformsNeedUpdate=!1),H.isSpriteMaterial&&Bt.setValue(B,"center",k.center),Bt.setValue(B,"modelViewMatrix",k.modelViewMatrix),Bt.setValue(B,"normalMatrix",k.normalMatrix),Bt.setValue(B,"modelMatrix",k.matrixWorld),H.isShaderMaterial||H.isRawShaderMaterial){const bn=H.uniformsGroups;for(let Cn=0,Eo=bn.length;Cn<Eo;Cn++){const Ji=bn[Cn];G.update(Ji,ti),G.bind(Ji,ti)}}return ti}function Xn(L,V){L.ambientLightColor.needsUpdate=V,L.lightProbe.needsUpdate=V,L.directionalLights.needsUpdate=V,L.directionalLightShadows.needsUpdate=V,L.pointLights.needsUpdate=V,L.pointLightShadows.needsUpdate=V,L.spotLights.needsUpdate=V,L.spotLightShadows.needsUpdate=V,L.rectAreaLights.needsUpdate=V,L.hemisphereLights.needsUpdate=V}function Rt(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return C},this.getActiveMipmapLevel=function(){return D},this.getRenderTarget=function(){return O},this.setRenderTargetTextures=function(L,V,X){const H=ue.get(L);H.__autoAllocateDepthBuffer=L.resolveDepthBuffer===!1,H.__autoAllocateDepthBuffer===!1&&(H.__useRenderToTexture=!1),ue.get(L.texture).__webglTexture=V,ue.get(L.depthTexture).__webglTexture=H.__autoAllocateDepthBuffer?void 0:X,H.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(L,V){const X=ue.get(L);X.__webglFramebuffer=V,X.__useDefaultFramebuffer=V===void 0};const yt=B.createFramebuffer();this.setRenderTarget=function(L,V=0,X=0){O=L,C=V,D=X;let H=!0,k=null,ae=!1,ye=!1;if(L){const _e=ue.get(L);if(_e.__useDefaultFramebuffer!==void 0)te.bindFramebuffer(B.FRAMEBUFFER,null),H=!1;else if(_e.__webglFramebuffer===void 0)U.setupRenderTarget(L);else if(_e.__hasExternalTextures)U.rebindTextures(L,ue.get(L.texture).__webglTexture,ue.get(L.depthTexture).__webglTexture);else if(L.depthBuffer){const qe=L.depthTexture;if(_e.__boundDepthTexture!==qe){if(qe!==null&&ue.has(qe)&&(L.width!==qe.image.width||L.height!==qe.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");U.setupDepthRenderbuffer(L)}}const Fe=L.texture;(Fe.isData3DTexture||Fe.isDataArrayTexture||Fe.isCompressedArrayTexture)&&(ye=!0);const Oe=ue.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(Array.isArray(Oe[V])?k=Oe[V][X]:k=Oe[V],ae=!0):L.samples>0&&U.useMultisampledRTT(L)===!1?k=ue.get(L).__webglMultisampledFramebuffer:Array.isArray(Oe)?k=Oe[X]:k=Oe,z.copy(L.viewport),$.copy(L.scissor),j=L.scissorTest}else z.copy(Ae).multiplyScalar(J).floor(),$.copy(He).multiplyScalar(J).floor(),j=lt;if(X!==0&&(k=yt),te.bindFramebuffer(B.FRAMEBUFFER,k)&&H&&te.drawBuffers(L,k),te.viewport(z),te.scissor($),te.setScissorTest(j),ae){const _e=ue.get(L.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+V,_e.__webglTexture,X)}else if(ye){const _e=ue.get(L.texture),Fe=V;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,_e.__webglTexture,X,Fe)}else if(L!==null&&X!==0){const _e=ue.get(L.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,_e.__webglTexture,X)}w=-1},this.readRenderTargetPixels=function(L,V,X,H,k,ae,ye){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let fe=ue.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&ye!==void 0&&(fe=fe[ye]),fe){te.bindFramebuffer(B.FRAMEBUFFER,fe);try{const _e=L.texture,Fe=_e.format,Oe=_e.type;if(!re.textureFormatReadable(Fe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!re.textureTypeReadable(Oe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}V>=0&&V<=L.width-H&&X>=0&&X<=L.height-k&&B.readPixels(V,X,H,k,nt.convert(Fe),nt.convert(Oe),ae)}finally{const _e=O!==null?ue.get(O).__webglFramebuffer:null;te.bindFramebuffer(B.FRAMEBUFFER,_e)}}},this.readRenderTargetPixelsAsync=async function(L,V,X,H,k,ae,ye){if(!(L&&L.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let fe=ue.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&ye!==void 0&&(fe=fe[ye]),fe)if(V>=0&&V<=L.width-H&&X>=0&&X<=L.height-k){te.bindFramebuffer(B.FRAMEBUFFER,fe);const _e=L.texture,Fe=_e.format,Oe=_e.type;if(!re.textureFormatReadable(Fe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!re.textureTypeReadable(Oe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const qe=B.createBuffer();B.bindBuffer(B.PIXEL_PACK_BUFFER,qe),B.bufferData(B.PIXEL_PACK_BUFFER,ae.byteLength,B.STREAM_READ),B.readPixels(V,X,H,k,nt.convert(Fe),nt.convert(Oe),0);const xt=O!==null?ue.get(O).__webglFramebuffer:null;te.bindFramebuffer(B.FRAMEBUFFER,xt);const Pt=B.fenceSync(B.SYNC_GPU_COMMANDS_COMPLETE,0);return B.flush(),await KT(B,Pt,4),B.bindBuffer(B.PIXEL_PACK_BUFFER,qe),B.getBufferSubData(B.PIXEL_PACK_BUFFER,0,ae),B.deleteBuffer(qe),B.deleteSync(Pt),ae}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(L,V=null,X=0){const H=Math.pow(2,-X),k=Math.floor(L.image.width*H),ae=Math.floor(L.image.height*H),ye=V!==null?V.x:0,fe=V!==null?V.y:0;U.setTexture2D(L,0),B.copyTexSubImage2D(B.TEXTURE_2D,X,0,0,ye,fe,k,ae),te.unbindTexture()};const pt=B.createFramebuffer(),kt=B.createFramebuffer();this.copyTextureToTexture=function(L,V,X=null,H=null,k=0,ae=null){ae===null&&(k!==0?(Jl("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),ae=k,k=0):ae=0);let ye,fe,_e,Fe,Oe,qe,xt,Pt,jt;const Vt=L.isCompressedTexture?L.mipmaps[ae]:L.image;if(X!==null)ye=X.max.x-X.min.x,fe=X.max.y-X.min.y,_e=X.isBox3?X.max.z-X.min.z:1,Fe=X.min.x,Oe=X.min.y,qe=X.isBox3?X.min.z:0;else{const $n=Math.pow(2,-k);ye=Math.floor(Vt.width*$n),fe=Math.floor(Vt.height*$n),L.isDataArrayTexture?_e=Vt.depth:L.isData3DTexture?_e=Math.floor(Vt.depth*$n):_e=1,Fe=0,Oe=0,qe=0}H!==null?(xt=H.x,Pt=H.y,jt=H.z):(xt=0,Pt=0,jt=0);const bt=nt.convert(V.format),Ze=nt.convert(V.type);let ln;V.isData3DTexture?(U.setTexture3D(V,0),ln=B.TEXTURE_3D):V.isDataArrayTexture||V.isCompressedArrayTexture?(U.setTexture2DArray(V,0),ln=B.TEXTURE_2D_ARRAY):(U.setTexture2D(V,0),ln=B.TEXTURE_2D),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,V.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,V.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,V.unpackAlignment);const It=B.getParameter(B.UNPACK_ROW_LENGTH),ti=B.getParameter(B.UNPACK_IMAGE_HEIGHT),gr=B.getParameter(B.UNPACK_SKIP_PIXELS),Ln=B.getParameter(B.UNPACK_SKIP_ROWS),Gr=B.getParameter(B.UNPACK_SKIP_IMAGES);B.pixelStorei(B.UNPACK_ROW_LENGTH,Vt.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Vt.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,Fe),B.pixelStorei(B.UNPACK_SKIP_ROWS,Oe),B.pixelStorei(B.UNPACK_SKIP_IMAGES,qe);const Bt=L.isDataArrayTexture||L.isData3DTexture,jn=V.isDataArrayTexture||V.isData3DTexture;if(L.isDepthTexture){const $n=ue.get(L),bn=ue.get(V),Cn=ue.get($n.__renderTarget),Eo=ue.get(bn.__renderTarget);te.bindFramebuffer(B.READ_FRAMEBUFFER,Cn.__webglFramebuffer),te.bindFramebuffer(B.DRAW_FRAMEBUFFER,Eo.__webglFramebuffer);for(let Ji=0;Ji<_e;Ji++)Bt&&(B.framebufferTextureLayer(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,ue.get(L).__webglTexture,k,qe+Ji),B.framebufferTextureLayer(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,ue.get(V).__webglTexture,ae,jt+Ji)),B.blitFramebuffer(Fe,Oe,ye,fe,xt,Pt,ye,fe,B.DEPTH_BUFFER_BIT,B.NEAREST);te.bindFramebuffer(B.READ_FRAMEBUFFER,null),te.bindFramebuffer(B.DRAW_FRAMEBUFFER,null)}else if(k!==0||L.isRenderTargetTexture||ue.has(L)){const $n=ue.get(L),bn=ue.get(V);te.bindFramebuffer(B.READ_FRAMEBUFFER,pt),te.bindFramebuffer(B.DRAW_FRAMEBUFFER,kt);for(let Cn=0;Cn<_e;Cn++)Bt?B.framebufferTextureLayer(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,$n.__webglTexture,k,qe+Cn):B.framebufferTexture2D(B.READ_FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,$n.__webglTexture,k),jn?B.framebufferTextureLayer(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,bn.__webglTexture,ae,jt+Cn):B.framebufferTexture2D(B.DRAW_FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_2D,bn.__webglTexture,ae),k!==0?B.blitFramebuffer(Fe,Oe,ye,fe,xt,Pt,ye,fe,B.COLOR_BUFFER_BIT,B.NEAREST):jn?B.copyTexSubImage3D(ln,ae,xt,Pt,jt+Cn,Fe,Oe,ye,fe):B.copyTexSubImage2D(ln,ae,xt,Pt,Fe,Oe,ye,fe);te.bindFramebuffer(B.READ_FRAMEBUFFER,null),te.bindFramebuffer(B.DRAW_FRAMEBUFFER,null)}else jn?L.isDataTexture||L.isData3DTexture?B.texSubImage3D(ln,ae,xt,Pt,jt,ye,fe,_e,bt,Ze,Vt.data):V.isCompressedArrayTexture?B.compressedTexSubImage3D(ln,ae,xt,Pt,jt,ye,fe,_e,bt,Vt.data):B.texSubImage3D(ln,ae,xt,Pt,jt,ye,fe,_e,bt,Ze,Vt):L.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,ae,xt,Pt,ye,fe,bt,Ze,Vt.data):L.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,ae,xt,Pt,Vt.width,Vt.height,bt,Vt.data):B.texSubImage2D(B.TEXTURE_2D,ae,xt,Pt,ye,fe,bt,Ze,Vt);B.pixelStorei(B.UNPACK_ROW_LENGTH,It),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,ti),B.pixelStorei(B.UNPACK_SKIP_PIXELS,gr),B.pixelStorei(B.UNPACK_SKIP_ROWS,Ln),B.pixelStorei(B.UNPACK_SKIP_IMAGES,Gr),ae===0&&V.generateMipmaps&&B.generateMipmap(ln),te.unbindTexture()},this.copyTextureToTexture3D=function(L,V,X=null,H=null,k=0){return Jl('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(L,V,X,H,k)},this.initRenderTarget=function(L){ue.get(L).__webglFramebuffer===void 0&&U.setupRenderTarget(L)},this.initTexture=function(L){L.isCubeTexture?U.setTextureCube(L,0):L.isData3DTexture?U.setTexture3D(L,0):L.isDataArrayTexture||L.isCompressedArrayTexture?U.setTexture2DArray(L,0):U.setTexture2D(L,0),te.unbindTexture()},this.resetState=function(){C=0,D=0,O=null,te.reset(),Et.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ui}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=_t._getDrawingBufferColorSpace(e),t.unpackColorSpace=_t._getUnpackColorSpace()}}const uI=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:tp,AddEquation:ns,AddOperation:cM,AdditiveAnimationBlendMode:lp,AdditiveBlending:pf,AgXToneMapping:mu,AlphaFormat:sp,AlwaysCompare:CM,AlwaysDepth:lu,AlwaysStencilFunc:vf,AmbientLight:p1,AnimationAction:w1,AnimationClip:ya,AnimationLoader:EE,AnimationMixer:QE,AnimationObjectGroup:KE,AnimationUtils:bE,ArcCurve:GM,ArrayCamera:M1,ArrowHelper:MA,AttachedBindMode:_f,Audio:S1,AudioAnalyser:VE,AudioContext:Bp,AudioListener:BE,AudioLoader:NE,AxesHelper:bA,BackSide:Qn,BasicDepthPacking:yM,BasicShadowMap:eT,BatchedMesh:kM,Bone:yh,BooleanKeyframeTrack:Mo,Box2:cA,Box3:fn,Box3Helper:yA,BoxGeometry:xo,BoxHelper:vA,BufferAttribute:Ot,BufferGeometry:st,BufferGeometryLoader:y1,ByteType:np,Cache:Lr,Camera:gh,CameraHelper:_A,CanvasTexture:Ww,CapsuleGeometry:Th,CatmullRomCurve3:WM,CineonToneMapping:hM,CircleGeometry:wh,ClampToEdgeWrapping:bi,Clock:b1,Color:Ce,ColorKeyframeTrack:Dp,ColorManagement:_t,CompressedArrayTexture:Hw,CompressedCubeTexture:Gw,CompressedTexture:bh,CompressedTextureLoader:AE,ConeGeometry:$c,ConstantAlphaFactor:sM,ConstantColorFactor:iM,Controls:TA,CubeCamera:NM,CubeReflectionMapping:Br,CubeRefractionMapping:fs,CubeTexture:Gc,CubeTextureLoader:CE,CubeUVReflectionMapping:Ea,CubicBezierCurve:Sp,CubicBezierCurve3:XM,CubicInterpolant:l1,CullFaceBack:ff,CullFaceFront:Hx,CullFaceFrontBack:QS,CullFaceNone:Vx,Curve:Ki,CurvePath:$M,CustomBlending:Gx,CustomToneMapping:dM,CylinderGeometry:jc,Cylindrical:aA,Data3DTexture:ph,DataArrayTexture:Hc,DataTexture:ur,DataTextureLoader:RE,DataUtils:pw,DecrementStencilOp:hT,DecrementWrapStencilOp:fT,DefaultLoadingManager:So,DepthArrayTexture:Xw,DepthFormat:da,DepthStencilFormat:fa,DepthTexture:Sh,DetachedBindMode:pM,DirectionalLight:Fp,DirectionalLightHelper:gA,DiscreteInterpolant:u1,DodecahedronGeometry:Eh,DoubleSide:xi,DstAlphaFactor:Jx,DstColorFactor:eM,DynamicCopyUsage:CT,DynamicDrawUsage:bT,DynamicReadUsage:wT,EdgesGeometry:HM,EllipseCurve:Ah,EqualCompare:TM,EqualDepth:hu,EqualStencilFunc:_T,EquirectangularReflectionMapping:mc,EquirectangularRefractionMapping:gc,Euler:Ai,EventDispatcher:mr,ExtrudeGeometry:Ch,FileLoader:Yi,Float16BufferAttribute:Mw,Float32BufferAttribute:ke,FloatType:oi,Fog:vh,FogExp2:_h,FramebufferTexture:Vw,FrontSide:dr,Frustum:Ca,FrustumArray:xh,GLBufferAttribute:sA,GLSL1:PT,GLSL3:yf,GreaterCompare:wM,GreaterDepth:fu,GreaterEqualCompare:AM,GreaterEqualDepth:du,GreaterEqualStencilFunc:MT,GreaterStencilFunc:yT,GridHelper:pA,Group:cr,HalfFloatType:Aa,HemisphereLight:f1,HemisphereLightHelper:fA,IcosahedronGeometry:Rh,ImageBitmapLoader:x1,ImageLoader:wc,ImageUtils:DM,IncrementStencilOp:uT,IncrementWrapStencilOp:dT,InstancedBufferAttribute:uo,InstancedBufferGeometry:v1,InstancedInterleavedBuffer:rA,InstancedMesh:yp,Int16BufferAttribute:yw,Int32BufferAttribute:xw,Int8BufferAttribute:gw,IntType:oh,InterleavedBuffer:Wc,InterleavedBufferAttribute:ms,Interpolant:Pa,InterpolateDiscrete:pa,InterpolateLinear:ma,InterpolateSmooth:Kl,InterpolationSamplingMode:LT,InterpolationSamplingType:DT,InvertStencilOp:pT,KeepStencilOp:ks,KeyframeTrack:ki,LOD:zM,LatheGeometry:Ph,Layers:mh,LessCompare:SM,LessDepth:uu,LessEqualCompare:hp,LessEqualDepth:lo,LessEqualStencilFunc:vT,LessStencilFunc:gT,Light:Ms,LightProbe:_1,Line:kr,Line3:E1,LineBasicMaterial:Wn,LineCurve:Tp,LineCurve3:jM,LineDashedMaterial:o1,LineLoop:xp,LineSegments:Zi,LinearFilter:rn,LinearInterpolant:Ip,LinearMipMapLinearFilter:rT,LinearMipMapNearestFilter:iT,LinearMipmapLinearFilter:Ni,LinearMipmapNearestFilter:ta,LinearSRGBColorSpace:Gn,LinearToneMapping:lM,LinearTransfer:vc,Loader:ei,LoaderUtils:us,LoadingManager:Lp,LoopOnce:mM,LoopPingPong:_M,LoopRepeat:gM,MOUSE:KS,Material:yn,MaterialLoader:Fh,MathUtils:RM,Matrix2:Gp,Matrix3:ct,Matrix4:je,MaxEquation:$x,Mesh:en,MeshBasicMaterial:Si,MeshDepthMaterial:Cp,MeshDistanceMaterial:Rp,MeshLambertMaterial:r1,MeshMatcapMaterial:s1,MeshNormalMaterial:i1,MeshPhongMaterial:t1,MeshPhysicalMaterial:zi,MeshStandardMaterial:Zc,MeshToonMaterial:n1,MinEquation:jx,MirroredRepeatWrapping:la,MixOperation:aM,MultiplyBlending:gf,MultiplyOperation:kc,NearestFilter:vn,NearestMipMapLinearFilter:nT,NearestMipMapNearestFilter:tT,NearestMipmapLinearFilter:Xs,NearestMipmapNearestFilter:sh,NeutralToneMapping:fM,NeverCompare:bM,NeverDepth:cu,NeverStencilFunc:mT,NoBlending:Nr,NoColorSpace:Rr,NoToneMapping:Ur,NormalAnimationBlendMode:dh,NormalBlending:no,NotEqualCompare:EM,NotEqualDepth:pu,NotEqualStencilFunc:xT,NumberKeyframeTrack:fo,Object3D:Tt,ObjectLoader:LE,ObjectSpaceNormalMap:MM,OctahedronGeometry:qc,OneFactor:Yx,OneMinusConstantAlphaFactor:oM,OneMinusConstantColorFactor:rM,OneMinusDstAlphaFactor:Qx,OneMinusDstColorFactor:tM,OneMinusSrcAlphaFactor:au,OneMinusSrcColorFactor:Kx,OrthographicCamera:Ia,PCFShadowMap:ep,PCFSoftShadowMap:ea,PMREMGenerator:Ef,Path:ju,PerspectiveCamera:_n,Plane:Qr,PlaneGeometry:Ra,PlaneHelper:xA,PointLight:Up,PointLightHelper:hA,Points:Mp,PointsMaterial:Mh,PolarGridHelper:mA,PolyhedronGeometry:xs,PositionalAudio:kE,PropertyBinding:wt,PropertyMixer:T1,QuadraticBezierCurve:wp,QuadraticBezierCurve3:Ep,Quaternion:Vn,QuaternionKeyframeTrack:po,QuaternionLinearInterpolant:h1,RED_GREEN_RGTC2_Format:ku,RED_RGTC1_Format:cp,REVISION:ih,RGBADepthPacking:xM,RGBAFormat:Jn,RGBAIntegerFormat:hh,RGBA_ASTC_10x10_Format:Ou,RGBA_ASTC_10x5_Format:Iu,RGBA_ASTC_10x6_Format:Du,RGBA_ASTC_10x8_Format:Lu,RGBA_ASTC_12x10_Format:Nu,RGBA_ASTC_12x12_Format:Uu,RGBA_ASTC_4x4_Format:Su,RGBA_ASTC_5x4_Format:Tu,RGBA_ASTC_5x5_Format:wu,RGBA_ASTC_6x5_Format:Eu,RGBA_ASTC_6x6_Format:Au,RGBA_ASTC_8x5_Format:Cu,RGBA_ASTC_8x6_Format:Ru,RGBA_ASTC_8x8_Format:Pu,RGBA_BPTC_Format:oc,RGBA_ETC2_EAC_Format:bu,RGBA_PVRTC_2BPPV1_Format:yu,RGBA_PVRTC_4BPPV1_Format:vu,RGBA_S3TC_DXT1_Format:ic,RGBA_S3TC_DXT3_Format:rc,RGBA_S3TC_DXT5_Format:sc,RGBDepthPacking:oT,RGBFormat:op,RGBIntegerFormat:sT,RGB_BPTC_SIGNED_Format:Fu,RGB_BPTC_UNSIGNED_Format:Bu,RGB_ETC1_Format:xu,RGB_ETC2_Format:Mu,RGB_PVRTC_2BPPV1_Format:_u,RGB_PVRTC_4BPPV1_Format:gu,RGB_S3TC_DXT1_Format:nc,RGDepthPacking:aT,RGFormat:ap,RGIntegerFormat:uh,RawShaderMaterial:e1,Ray:yo,Raycaster:Hp,RectAreaLight:m1,RedFormat:lh,RedIntegerFormat:Vc,ReinhardToneMapping:uM,RenderTarget:fh,RenderTarget3D:eA,RenderTargetArray:tA,RepeatWrapping:ps,ReplaceStencilOp:lT,ReverseSubtractEquation:Xx,RingGeometry:Ih,SIGNED_RED_GREEN_RGTC2_Format:Vu,SIGNED_RED_RGTC1_Format:zu,SRGBColorSpace:gn,SRGBTransfer:Ft,Scene:gp,ShaderChunk:tt,ShaderLib:Oi,ShaderMaterial:qi,ShadowMaterial:QM,Shape:ro,ShapeGeometry:Dh,ShapePath:SA,ShapeUtils:ji,ShortType:ip,Skeleton:Xc,SkeletonHelper:uA,SkinnedMesh:vp,Source:rs,Sphere:pn,SphereGeometry:Yc,Spherical:oA,SphericalHarmonics3:g1,SplineCurve:Ap,SpotLight:Np,SpotLightHelper:lA,Sprite:BM,SpriteMaterial:_p,SrcAlphaFactor:ou,SrcAlphaSaturateFactor:nM,SrcColorFactor:Zx,StaticCopyUsage:AT,StaticDrawUsage:yc,StaticReadUsage:TT,StereoCamera:UE,StreamCopyUsage:RT,StreamDrawUsage:ST,StreamReadUsage:ET,StringKeyframeTrack:bo,SubtractEquation:Wx,SubtractiveBlending:mf,TOUCH:JS,TangentSpaceNormalMap:ys,TetrahedronGeometry:Lh,Texture:Xt,TextureLoader:d1,TextureUtils:RA,TimestampQuery:IT,TorusGeometry:Oh,TorusKnotGeometry:Nh,Triangle:si,TriangleFanDrawMode:Hu,TriangleStripDrawMode:up,TrianglesDrawMode:vM,TubeGeometry:Uh,UVMapping:rh,Uint16BufferAttribute:fp,Uint32BufferAttribute:pp,Uint8BufferAttribute:_w,Uint8ClampedBufferAttribute:vw,Uniform:Vp,UniformsGroup:iA,UniformsLib:Ee,UniformsUtils:mp,UnsignedByteType:$i,UnsignedInt248Type:ha,UnsignedInt5999Type:rp,UnsignedIntType:zr,UnsignedShort4444Type:ah,UnsignedShort5551Type:ch,UnsignedShortType:ua,VSMShadowMap:nr,Vector2:le,Vector3:F,Vector4:mt,VectorKeyframeTrack:mo,VideoFrameTexture:kw,VideoTexture:VM,WebGL3DRenderTarget:rw,WebGLArrayRenderTarget:iw,WebGLCoordinateSystem:Ui,WebGLCubeRenderTarget:UM,WebGLRenderTarget:fr,WebGLRenderer:O1,WebGLUtils:L1,WebGPUCoordinateSystem:xc,WebXRController:Ql,WireframeGeometry:JM,WrapAroundEnding:_c,ZeroCurvatureEnding:js,ZeroFactor:qx,ZeroSlopeEnding:$s,ZeroStencilOp:cT,createCanvasElement:IM},Symbol.toStringTag,{value:"Module"})),Vy=(s,e)=>{if(s===e)return!0;if(!s||!e)return!1;const t=s.length;if(e.length!==t)return!1;for(let n=0;n<t;n++)if(s[n]!==e[n])return!1;return!0},hI=()=>{const s=[],n={items:s,remember:(i,r)=>{for(let a=0;a<s.length;a++){const c=s[a];if(Vy(r,c.keys)&&c.promise)return c.promise}const o={promise:i(),keys:r};return s.push(o),o.promise},clear:i=>{for(let r=0;r<s.length;r++){const o=s[r];if(Vy(i,o.keys)){s.splice(r,1);return}}}};return di("threlte-cache",n),n},dI=()=>{const s=fi("threlte-cache");if(!s)throw new Error("No cache found. The cache can only be used in a child component to <Canvas>.");return s},Hy=Symbol(),fI=s=>typeof(s==null?void 0:s.subscribe)=="function",N1=(s,e,t)=>{const n=s().map(o=>fI(o)?ZS(o):Hy),i=Fn(()=>s().map((o,a)=>n[a]===Hy?o:n[a].current)),r=()=>{v(i);let o;return Kf(()=>{o=e(v(i))}),o};t?vi(r):sr(r)},pI=(s,e)=>N1(s,e,!1),mI=(s,e)=>N1(s,e,!0),gI=Object.assign(pI,{pre:mI}),Bn=(s,e)=>(s==null?void 0:s[`is${e}`])===!0,Gd=s=>{const e=mn(void 0),t=mn(void 0);return s.then(n=>{e.set(n)}).catch(n=>{console.error("Error in asyncWritable:",n.message),t.set(n)}),Object.assign(Object.assign(s,e),{error:t,promise:s})},_I=typeof window<"u",ri=(s,e)=>{const t=Jf(s,r=>r);let n;const i=t.subscribe(async r=>{n&&n();const o=await e(r);o&&(n=o)});vs(()=>{i(),n&&n()})},nn=s=>{const e=mn(s),t={set:n=>{t.current=n,e.set(n)},subscribe:e.subscribe,update:n=>{const i=n(t.current);t.current=i,e.set(i)},current:s};return t},vI=s=>({subscribe:s.subscribe,get current(){return s.current}}),U1=(s,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)s=s[t[i]];return{target:s,key:n}}else return{target:s,key:e}},yI=s=>{const{dom:e,canvas:t}=s,n=nn({width:e.offsetWidth,height:e.offsetHeight});Ix(()=>{const r=new ResizeObserver(()=>{const{offsetWidth:o,offsetHeight:a}=e;(n.current.width!==o||n.current.height!==a)&&n.set({width:o,height:a})});return r.observe(e),()=>{r.disconnect()}});const i={dom:e,canvas:t,size:vI(n)};return di("threlte-dom-context",i),i},zh=()=>{const s=fi("threlte-dom-context");if(!s)throw new Error("useDOM can only be used in a child component to <Canvas>.");return s};function xI(s){return{all:s=s||new Map,on:function(e,t){var n=s.get(e);n?n.push(t):s.set(e,[t])},off:function(e,t){var n=s.get(e);n&&(t?n.splice(n.indexOf(t)>>>0,1):s.set(e,[]))},emit:function(e,t){var n=s.get(e);n&&n.slice().map(function(i){i(t)}),(n=s.get("*"))&&n.slice().map(function(i){i(e,t)})}}}class es{constructor(){Yt(this,"allVertices",{});Yt(this,"isolatedVertices",{});Yt(this,"connectedVertices",{});Yt(this,"sortedConnectedValues",[]);Yt(this,"needsSort",!1);Yt(this,"emitter",xI());Yt(this,"emit",this.emitter.emit.bind(this.emitter));Yt(this,"on",this.emitter.on.bind(this.emitter));Yt(this,"off",this.emitter.off.bind(this.emitter));Yt(this,"getKey",e=>typeof e=="object"?e.key:e)}get sortedVertices(){return this.mapNodes(e=>e)}moveToIsolated(e){const t=this.connectedVertices[e];t&&(this.isolatedVertices[e]=t,delete this.connectedVertices[e])}moveToConnected(e){const t=this.isolatedVertices[e];t&&(this.connectedVertices[e]=t,delete this.isolatedVertices[e])}add(e,t,n){if(this.allVertices[e]&&this.allVertices[e].value!==void 0)throw new Error(`A node with the key ${e.toString()} already exists`);let i=this.allVertices[e];i?i.value===void 0&&(i.value=t):(i={value:t,previous:new Set,next:new Set},this.allVertices[e]=i);const r=i.next.size>0||i.previous.size>0;if(!(n!=null&&n.after)&&!(n!=null&&n.before)&&!r){this.isolatedVertices[e]=i,this.emit("node:added",{key:e,type:"isolated",value:t});return}else this.connectedVertices[e]=i;if(n!=null&&n.after){const o=Array.isArray(n.after)?n.after:[n.after];o.forEach(a=>{i.previous.add(this.getKey(a))}),o.forEach(a=>{const c=this.getKey(a),l=this.allVertices[c];l?(l.next.add(e),this.moveToConnected(c)):(this.allVertices[c]={value:void 0,previous:new Set,next:new Set([e])},this.connectedVertices[c]=this.allVertices[c])})}if(n!=null&&n.before){const o=Array.isArray(n.before)?n.before:[n.before];o.forEach(a=>{i.next.add(this.getKey(a))}),o.forEach(a=>{const c=this.getKey(a),l=this.allVertices[c];l?(l.previous.add(e),this.moveToConnected(c)):(this.allVertices[c]={value:void 0,previous:new Set([e]),next:new Set},this.connectedVertices[c]=this.allVertices[c])})}this.emit("node:added",{key:e,type:"connected",value:t}),this.needsSort=!0}remove(e){const t=this.getKey(e);if(this.isolatedVertices[t]){delete this.isolatedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"isolated"});return}const i=this.connectedVertices[t];i&&(i.next.forEach(r=>{const o=this.connectedVertices[r];o&&(o.previous.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),i.previous.forEach(r=>{const o=this.connectedVertices[r];o&&(o.next.delete(t),o.previous.size===0&&o.next.size===0&&this.moveToIsolated(r))}),delete this.connectedVertices[t],delete this.allVertices[t],this.emit("node:removed",{key:t,type:"connected"}),this.needsSort=!0)}mapNodes(e){this.needsSort&&this.sort();const t=[];return this.forEachNode((n,i)=>{t.push(e(n,i))}),t}forEachNode(e){this.needsSort&&this.sort();let t=0;for(;t<this.sortedConnectedValues.length;t++)e(this.sortedConnectedValues[t],t);Reflect.ownKeys(this.isolatedVertices).forEach(n=>{const i=this.isolatedVertices[n];i.value!==void 0&&e(i.value,t++)})}getValueByKey(e){var t;return(t=this.allVertices[e])==null?void 0:t.value}getKeyByValue(e){return Reflect.ownKeys(this.connectedVertices).find(t=>this.connectedVertices[t].value===e)??Reflect.ownKeys(this.isolatedVertices).find(t=>this.isolatedVertices[t].value===e)}sort(){var o;const e=new Map,t=[],n=[],i=Reflect.ownKeys(this.connectedVertices).filter(a=>this.connectedVertices[a].value!==void 0);for(i.forEach(a=>{e.set(a,0)}),i.forEach(a=>{this.connectedVertices[a].next.forEach(l=>{this.connectedVertices[l]&&e.set(l,(e.get(l)||0)+1)})}),e.forEach((a,c)=>{a===0&&t.push(c)});t.length>0;){const a=t.shift();n.push(a);const c=i.find(l=>l===a);c&&((o=this.connectedVertices[c])==null||o.next.forEach(l=>{const u=(e.get(l)||0)-1;e.set(l,u),u===0&&t.push(l)}))}if(n.length!==i.length)throw new Error("The graph contains a cycle, and thus can not be sorted topologically.");const r=a=>a!==void 0;this.sortedConnectedValues=n.map(a=>this.connectedVertices[a].value).filter(r),this.needsSort=!1}clear(){this.allVertices={},this.isolatedVertices={},this.connectedVertices={},this.sortedConnectedValues=[],this.needsSort=!1}static isKey(e){return typeof e=="string"||typeof e=="symbol"}static isValue(e){return typeof e=="object"&&"key"in e}}class MI{constructor(e,t,n){Yt(this,"key");Yt(this,"stage");Yt(this,"callback");Yt(this,"runTask",!0);this.stage=e,this.key=t,this.callback=n}stop(){this.runTask=!1}start(){this.runTask=!0}run(e){this.runTask&&this.callback(e)}}class bI extends es{constructor(t,n,i){super();Yt(this,"key");Yt(this,"scheduler");Yt(this,"runTask",!0);Yt(this,"callback",(t,n)=>n());Yt(this,"removeTask",this.remove.bind(this));this.scheduler=t,this.key=n,this.start=this.start.bind(this),this.stop=this.stop.bind(this),i&&(this.callback=i.bind(this))}stop(){this.runTask=!1}start(){this.runTask=!0}get tasks(){return this.sortedVertices}createTask(t,n,i){const r=new MI(this,t,n);return this.add(t,r,i),r}getTask(t){return this.getValueByKey(t)}run(t){this.runTask&&this.callback(t,n=>{this.forEachNode(i=>{i.run(n??t)})})}runWithTiming(t){if(!this.runTask)return{};const n={};return this.callback(t,i=>{this.forEachNode(r=>{const o=performance.now();r.run(i??t);const a=performance.now()-o;n[r.key]=a})}),n}getSchedule(){return this.mapNodes(t=>t.key.toString())}}class SI extends es{constructor(t){super();Yt(this,"lastTime",performance.now());Yt(this,"clampDeltaTo",.1);Yt(this,"removeStage",this.remove.bind(this));t!=null&&t.clampDeltaTo&&(this.clampDeltaTo=t.clampDeltaTo),this.run=this.run.bind(this)}get stages(){return this.sortedVertices}createStage(t,n){const i=new bI(this,t,n==null?void 0:n.callback);return this.add(t,i,{after:n==null?void 0:n.after,before:n==null?void 0:n.before}),i}getStage(t){return this.getValueByKey(t)}run(t){const n=t-this.lastTime;this.forEachNode(i=>{i.run(Math.min(n/1e3,this.clampDeltaTo))}),this.lastTime=t}runWithTiming(t){const n=t-this.lastTime,i={},r=performance.now();return this.forEachNode(o=>{const a=performance.now(),c=o.runWithTiming(Math.min(n/1e3,this.clampDeltaTo)),l=performance.now()-a;i[o.key.toString()]={duration:l,tasks:c}}),{total:performance.now()-r,stages:i}}getSchedule(t={tasks:!0}){return{stages:this.mapNodes(n=>{if(n===void 0)throw new Error("Stage not found");return{key:n.key.toString(),tasks:t.tasks?n.getSchedule():void 0}})}}dispose(){this.clear()}}const TI=s=>{const e=new SI,t=e.createStage(Symbol("threlte-main-stage")),n={scheduler:e,frameInvalidated:!0,autoInvalidations:new Set,shouldAdvance:!1,advance:()=>{n.shouldAdvance=!0},autoRender:nn(s.autoRender??!0),renderMode:nn(s.renderMode??"on-demand"),invalidate(){n.frameInvalidated=!0},mainStage:t,shouldRender:()=>n.renderMode.current==="always"||n.renderMode.current==="on-demand"&&(n.frameInvalidated||n.autoInvalidations.size>0)||n.renderMode.current==="manual"&&n.shouldAdvance,renderStage:e.createStage(Symbol("threlte-render-stage"),{after:t,callback(i,r){n.shouldRender()&&r()}}),resetFrameInvalidation(){n.frameInvalidated=!1,n.shouldAdvance=!1}};return sr(()=>{n.autoRender.set(s.autoRender??!0)}),sr(()=>{n.renderMode.set(s.renderMode??"on-demand")}),vs(()=>{n.scheduler.dispose()}),di("threlte-scheduler-context",n),n},kh=()=>{const s=fi("threlte-scheduler-context");if(!s)throw new Error("useScheduler can only be used in a child component to <Canvas>.");return s},wI=()=>{const{size:s}=zh(),{invalidate:e}=kh(),t=new _n(75,0,.1,1e3);t.position.z=5,t.lookAt(0,0,0);const n=nn(t);ri(s,r=>{if(n.current===t){const o=n.current;o.aspect=r.width/r.height,o.updateProjectionMatrix(),e()}});const i={camera:n};return di("threlte-camera-context",i),i},F1=()=>{const s=fi("threlte-camera-context");if(!s)throw new Error("useCamera can only be used in a child component to <Canvas>.");return s},EI=()=>{const s={removeObjectFromDisposal:e=>{s.disposableObjects.delete(e)},disposableObjectMounted:e=>{const t=s.disposableObjects.get(e);t?s.disposableObjects.set(e,t+1):s.disposableObjects.set(e,1)},disposableObjectUnmounted:e=>{const t=s.disposableObjects.get(e);t&&t>0&&(s.disposableObjects.set(e,t-1),t-1<=0&&(s.shouldDispose=!0))},disposableObjects:new Map,shouldDispose:!1,dispose:async(e=!1)=>{await Px(),!(!s.shouldDispose&&!e)&&(s.disposableObjects.forEach((t,n)=>{var i;(t===0||e)&&((i=n==null?void 0:n.dispose)==null||i.call(n),s.disposableObjects.delete(n))}),s.shouldDispose=!1)}};return vs(()=>{s.dispose(!0)}),di("threlte-disposal-context",s),s},B1=()=>{const s=fi("threlte-disposal-context");if(!s)throw new Error("useDisposal can only be used in a child component to <Canvas>.");return s},z1=Symbol("threlte-parent-context"),k1=s=>{const e=nn(s);return di(z1,e),e},AI=()=>fi(z1),$u=Symbol("threlte-parent-object3d-context"),CI=s=>{const e=Dx(s);return di($u,e),e},RI=s=>{const e=fi($u),t=mn(s),n=Jf([t,e],([i,r])=>i??r);return di($u,n),t},PI=()=>fi($u);function Vh(s,e,t){if(!_I)return{task:void 0,start:()=>{},stop:()=>{},started:Dx(!1)};let n,i,r;es.isKey(s)?(n=s,i=e,r=t):(n=Symbol("useTask"),i=s,r=e);const o=kh();let a=o.mainStage;if(r){if(r.stage)if(es.isValue(r.stage))a=r.stage;else{const d=o.scheduler.getStage(r.stage);if(!d)throw new Error(`No stage found with key ${r.stage.toString()}`);a=d}else if(r.after)if(Array.isArray(r.after))for(let d=0;d<r.after.length;d++){const f=r.after[d];if(es.isValue(f)){a=f.stage;break}}else es.isValue(r.after)&&(a=r.after.stage);else if(r.before)if(Array.isArray(r.before))for(let d=0;d<r.before.length;d++){const f=r.before[d];if(es.isValue(f)){a=f.stage;break}}else es.isValue(r.before)&&(a=r.before.stage)}const c=mn(!1),l=a.createTask(n,i,r),u=()=>{c.set(!0),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.add(i),l.start()},h=()=>{c.set(!1),((r==null?void 0:r.autoInvalidate)??!0)&&o.autoInvalidations.delete(i),l.stop()};return(r==null?void 0:r.autoStart)??!0?u():h(),vs(()=>{h(),a.removeTask(n)}),{task:l,start:u,stop:h,started:{subscribe:c.subscribe}}}const II=s=>{const e={scene:new gp};return di("threlte-scene-context",e),e},V1=()=>{const s=fi("threlte-scene-context");if(!s)throw new Error("useScene can only be used in a child component to <Canvas>.");return s},DI=s=>{const{dispose:e}=B1(),{camera:t}=F1(),{scene:n}=V1(),{invalidate:i,renderStage:r,autoRender:o,scheduler:a,resetFrameInvalidation:c}=kh(),{size:l,canvas:u}=zh(),h=s.createRenderer?s.createRenderer(u):new O1({canvas:u,powerPreference:"high-performance",antialias:!0,alpha:!0}),d=r.createTask(Symbol("threlte-auto-render-task"),()=>{h.render(n,t.current)}),f={renderer:h,colorManagementEnabled:nn(s.colorManagementEnabled??!0),colorSpace:nn(s.colorSpace??"srgb"),dpr:nn(s.dpr??window.devicePixelRatio),shadows:nn(s.shadows??ea),toneMapping:nn(s.toneMapping??mu),autoRenderTask:d};di("threlte-renderer-context",f),ri([f.colorManagementEnabled],([g])=>{_t.enabled=g}),ri([f.colorSpace],([g])=>{"outputColorSpace"in h&&(h.outputColorSpace=g)}),ri([f.dpr],([g])=>{"setPixelRatio"in h&&h.setPixelRatio(g)});const{start:p,stop:_}=Vh(()=>{var g;!("xr"in h)||(g=h.xr)!=null&&g.isPresenting||(h.setSize(l.current.width,l.current.height),i(),_())},{before:d,autoStart:!1,autoInvalidate:!1});return ri([l],()=>{p()}),ri([f.shadows],([g])=>{"shadowMap"in h&&(h.shadowMap.enabled=!!g,g&&g!==!0?h.shadowMap.type=g:g===!0&&(h.shadowMap.type=ea))}),ri([f.toneMapping],([g])=>{"toneMapping"in h&&(h.toneMapping=g)}),ri([o],([g])=>(g?f.autoRenderTask.start():f.autoRenderTask.stop(),()=>{f.autoRenderTask.stop()})),"setAnimationLoop"in f.renderer&&f.renderer.setAnimationLoop(m=>{e(),a.run(m),c()}),vs(()=>{if("dispose"in f.renderer){const g=f.renderer.dispose;g()}}),sr(()=>{f.colorManagementEnabled.set(s.colorManagementEnabled??!0)}),sr(()=>{f.colorSpace.set(s.colorSpace??"srgb")}),sr(()=>{f.toneMapping.set(s.toneMapping??mu)}),sr(()=>{f.shadows.set(s.shadows??ea)}),sr(()=>{f.dpr.set(s.dpr??window.devicePixelRatio)}),f},LI=()=>{const s=fi("threlte-renderer-context");if(!s)throw new Error("useRenderer can only be used in a child component to <Canvas>.");return s},OI=()=>{const s=nn({});return di("threlte-user-context",s),s},NI=s=>{const{scene:e}=II();return{scene:e,...yI(s),...hI(),...k1(e),...CI(e),...EI(),...TI(s),...wI(),...DI(s),...OI()}};function UI(s,e){Fc(e,!0);let t=zc(e,["$$slots","$$events","$$legacy","children"]);NI(t);var n=Nt(),i=ze(n);ls(i,()=>e.children),Le(s,n),Bc()}var FI=ot('<div class="svelte-1osucwe"><canvas class="svelte-1osucwe"><!></canvas></div>');function BI(s,e){let t=zc(e,["$$slots","$$events","$$legacy","children"]),n=to(void 0),i=to(void 0);var r=FI(),o=Ir(r),a=Ir(o);{var c=l=>{UI(l,Qf({get dom(){return v(i)},get canvas(){return v(n)}},()=>t,{children:(u,h)=>{var d=Nt(),f=ze(d);ls(f,()=>e.children??cs),Le(u,d)},$$slots:{default:!0}}))};Cr(a,l=>{v(n)&&v(i)&&l(c)})}Dr(o),Qo(o,l=>In(n,l),()=>v(n)),Dr(r),Qo(r,l=>In(i,l),()=>v(i)),Le(s,r)}const To=()=>{const s=kh(),e=LI(),t=F1(),n=V1(),i=zh();return{advance:s.advance,autoRender:s.autoRender,autoRenderTask:e.autoRenderTask,camera:t.camera,colorManagementEnabled:e.colorManagementEnabled,colorSpace:e.colorSpace,dpr:e.dpr,invalidate:s.invalidate,mainStage:s.mainStage,renderer:e.renderer,renderMode:s.renderMode,renderStage:s.renderStage,scheduler:s.scheduler,shadows:e.shadows,shouldRender:s.shouldRender,dom:i.dom,canvas:i.canvas,size:i.size,toneMapping:e.toneMapping,get scene(){return n.scene},set scene(o){n.scene=o}}},zI=s=>typeof s=="object"&&s!==null,kI=()=>{const{invalidate:s}=To();let e;const t=mn(),n=AI(),i=PI(),r=k1(),o=RI();ri([t,r,n,i],([l,u,h,d])=>{if(e==null||e(),e=void 0,!u){s();return}if(l!==void 0){if(l){if(typeof l=="function")e=l({ref:u,parent:h,parentObject3D:d});else if(Bn(l,"Object3D")&&Bn(u,"Object3D"))e=()=>l==null?void 0:l.remove(u),l==null||l.add(u);else if(typeof l=="string"){const{target:f,key:p}=U1(h,l),_=f[p];e=()=>f[p]=_,f[p]=u}}}else Bn(u,"Object3D")?(e=()=>d==null?void 0:d.remove(u),d==null||d.add(u)):zI(h)&&(Bn(u,"Material")?h.material=u:Bn(u,"BufferGeometry")&&(h.geometry=u));s()});const a=l=>{t.set(l)},c=l=>{r.set(l),Bn(l,"Object3D")&&o.set(l)};return vs(()=>{e==null||e(),s()}),{updateRef:c,updateAttach:a}},VI=s=>Bn(s,"PerspectiveCamera")||Bn(s,"OrthographicCamera"),HI=()=>{const{invalidate:s,size:e,camera:t}=To(),n=mn(),i=mn(!0),r=mn(!1);return ri([n,r],([l,u])=>{!l||!u||(t.set(l),s())}),ri([n,i,e],([l,u,h])=>{!l||u||(Bn(l,"OrthographicCamera")?(l.left=h.width/-2,l.right=h.width/2,l.top=h.height/2,l.bottom=h.height/-2,l.updateProjectionMatrix(),l.updateMatrixWorld(),s()):Bn(l,"PerspectiveCamera")&&(l.aspect=h.width/h.height,l.updateProjectionMatrix(),l.updateMatrixWorld(),s()))}),{updateRef:l=>{VI(l)&&n.set(l)},updateManual:l=>{i.set(l)},updateMakeDefault:l=>{r.set(l)}}},GI=s=>{let e,t,n=!1;const i=()=>{e==null||e(),e=s==null?void 0:s(t)},r=o=>{t=o,n&&i()};return Ix(()=>{i(),n=!0}),vs(()=>e==null?void 0:e()),{updateRef:r}},Gy=Symbol("threlte-disposable-object-context"),WI=s=>typeof(s==null?void 0:s.dispose)=="function"&&!Bn(s,"Scene"),XI=s=>{let e;const t=mn(void 0),n=mn(s),{disposableObjectMounted:i,disposableObjectUnmounted:r,removeObjectFromDisposal:o}=B1(),a=fi(Gy),c=Jf([n,a??mn(!0)],([h,d])=>h??d??!0);return di(Gy,c),ri([t,c],([h,d])=>{h===e?d?e&&i(e):e&&o(e):d&&(e&&r(e),h&&i(h)),e=h}),vs(()=>{if(!lf(c))return;const h=lf(t);h&&r(h)}),{updateRef:h=>{WI(h)&&t.set(h)},updateDispose:h=>{n.set(h)}}},jI=s=>s!==null&&typeof s=="object"&&"addEventListener"in s&&"removeEventListener"in s,$I=(s={})=>{const e=i=>{var r;i!=null&&i.type&&((r=s[`on${i.type}`])==null||r.call(s,i))},t=(i,r)=>{const o=[];for(const a of Object.keys(r))a.startsWith("on")&&(i.addEventListener(a.slice(2),e),o.push(a));return()=>{for(let a=0;a<o.length;a++)i.removeEventListener(o[a],e)}};return{updateRef:i=>{if(jI(i))return t(i,s)}}};let Cf;const qI=s=>{Cf=s},YI=()=>{const s=Cf;return Cf=void 0,s},ZI=s=>{const t=fi("threlte-plugin-context");if(!t)return;const n=[],i=Object.values(t);if(i.length){const r=s();for(let o=0;o<i.length;o++){const a=i[o],c=a(r);c&&c.pluginProps&&n.push(...c.pluginProps)}}return{pluginsProps:n}},KI=new Set(["$$scope","$$slots","type","args","attach","instance"]),JI=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),QI=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,Wy=(s,e,t)=>{var n,i,r;return!Array.isArray(t)&&typeof t=="number"&&typeof((n=s[e])==null?void 0:n.setScalar)=="function"&&!((i=s[e])!=null&&i.isColor)?(o,a,c)=>{o[a].setScalar(c)}:typeof((r=s[e])==null?void 0:r.set)=="function"?Array.isArray(t)?(o,a,c)=>{o[a].set(...c)}:(o,a,c)=>{o[a].set(c)}:(o,a,c)=>{o[a]=c}},e3=()=>{const{invalidate:s}=To(),e=new Map,t=new Map,n=(r,o,a,c)=>{if(QI(a)){const h=e.get(o);if(h&&h.instance===r&&h.value===a)return;e.set(o,{instance:r,value:a})}const{key:l,target:u}=U1(r,o);if(a!=null){const h=t.get(o);if(h)h(u,l,a);else{const d=Wy(u,l,a);t.set(o,d),d(u,l,a)}}else Wy(u,l,a)(u,l,a);c.manualCamera||JI.has(l)&&(u.isPerspectiveCamera||u.isOrthographicCamera)&&u.updateProjectionMatrix()};return{updateProp:(r,o,a,c)=>{var l;!KI.has(o)&&!((l=c.pluginsProps)!=null&&l.includes(o))&&n(r,o,a,c),s()}}},t3=/^\s*class\s+/,n3=s=>typeof s!="function"?!1:t3.test(s.toString()),i3=s=>Array.isArray(s),r3=(s,e)=>n3(s)?i3(e)?new s(...e):new s:s;function Wd(s,e){Fc(e,!0);let t=wn(e,"is",19,YI),n=wn(e,"manual",3,!1),i=wn(e,"makeDefault",3,!1),r=wn(e,"ref",15),o=zc(e,["$$slots","$$events","$$legacy","is","args","attach","manual","makeDefault","dispose","ref","oncreate","children"]),a=Fn(()=>r3(t(),e.args));const c=GI(e.oncreate);vi(()=>{r()!==v(a)&&(r(v(a)),c.updateRef(v(a)))});const l=ZI(()=>({get ref(){return v(a)},get args(){return e.args},get attach(){return e.attach},get manual(){return n()},get makeDefault(){return i()},get dispose(){return e.dispose},get props(){return o}})),{updateProp:u}=e3();Object.keys(o).forEach(m=>{vi(()=>{u(v(a),m,o[m],{manualCamera:n(),pluginsProps:l==null?void 0:l.pluginsProps})})});const h=kI();vi(()=>h.updateAttach(e.attach)),vi(()=>h.updateRef(v(a)));const d=HI();vi(()=>d.updateRef(v(a))),vi(()=>d.updateManual(n())),vi(()=>d.updateMakeDefault(i()));const f=XI(e.dispose);vi(()=>f.updateRef(v(a))),vi(()=>f.updateDispose(e.dispose));const p=$I(o);vi(()=>p.updateRef(v(a)));var _=Nt(),g=ze(_);ls(g,()=>e.children??cs,()=>({ref:v(a)})),Le(s,_),Bc()}const s3={},R=new Proxy(function(){},{apply(s,e,t){return Wd(...t)},get(s,e){if(typeof e!="string")return Wd;const t=s3[e]||uI[e];if(t===void 0)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return qI(t),Wd}});function o3(s,e){const t="threlte-plugin-context";e&&di(t,{...fi(t),[s]:e})}function a3(s,e){const{remember:t,clear:n}=dI();let i;const r=()=>new s(...(e==null?void 0:e.args)??[]);return{load:(c,l)=>{const u=async h=>{var d;if(i||(i=r()),"loadAsync"in i){const f=await i.loadAsync(h,l==null?void 0:l.onProgress);return((d=l==null?void 0:l.transform)==null?void 0:d.call(l,f))??f}else return new Promise((f,p)=>{i.load(h,_=>{var g;return f(((g=l==null?void 0:l.transform)==null?void 0:g.call(l,_))??_)},_=>{var g;return(g=l==null?void 0:l.onProgress)==null?void 0:g.call(l,_)},p)})};if(Array.isArray(c)){const h=c.map(f=>t(()=>u(f),[s,f]));return Gd(Promise.all(h))}else if(typeof c=="string"){const h=t(()=>u(c),[s,c]);return Gd(h)}else{const h=Object.values(c).map(f=>t(()=>u(f),[s,f]));return Gd(Promise.all(h).then(f=>Object.fromEntries(Object.entries(c).map(([p],_)=>[p,f[_]]))))}},clear:c=>{Array.isArray(c)?c.forEach(l=>{n([s,l])}):typeof c=="string"?n([s,c]):Object.entries(c).forEach(([l,u])=>{n([s,l,u])})},loader:i}}function Xy(s,e){if(e===vM)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),s;if(e===Hu||e===up){let t=s.getIndex();if(t===null){const o=[],a=s.getAttribute("position");if(a!==void 0){for(let c=0;c<a.count;c++)o.push(c);s.setIndex(o),t=s.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),s}const n=t.count-2,i=[];if(e===Hu)for(let o=1;o<=n;o++)i.push(t.getX(0)),i.push(t.getX(o)),i.push(t.getX(o+1));else for(let o=0;o<n;o++)o%2===0?(i.push(t.getX(o)),i.push(t.getX(o+1)),i.push(t.getX(o+2))):(i.push(t.getX(o+2)),i.push(t.getX(o+1)),i.push(t.getX(o)));i.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const r=s.clone();return r.setIndex(i),r.clearGroups(),r}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),s}class c3 extends ei{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new f3(t)}),this.register(function(t){return new p3(t)}),this.register(function(t){return new S3(t)}),this.register(function(t){return new T3(t)}),this.register(function(t){return new w3(t)}),this.register(function(t){return new g3(t)}),this.register(function(t){return new _3(t)}),this.register(function(t){return new v3(t)}),this.register(function(t){return new y3(t)}),this.register(function(t){return new d3(t)}),this.register(function(t){return new x3(t)}),this.register(function(t){return new m3(t)}),this.register(function(t){return new b3(t)}),this.register(function(t){return new M3(t)}),this.register(function(t){return new u3(t)}),this.register(function(t){return new E3(t)}),this.register(function(t){return new A3(t)})}load(e,t,n,i){const r=this;let o;if(this.resourcePath!=="")o=this.resourcePath;else if(this.path!==""){const l=us.extractUrlBase(e);o=us.resolveURL(l,this.path)}else o=us.extractUrlBase(e);this.manager.itemStart(e);const a=function(l){i?i(l):console.error(l),r.manager.itemError(e),r.manager.itemEnd(e)},c=new Yi(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(l){try{r.parse(l,o,function(u){t(u),r.manager.itemEnd(e)},a)}catch(u){a(u)}},n,a)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,i){let r;const o={},a={},c=new TextDecoder;if(typeof e=="string")r=JSON.parse(e);else if(e instanceof ArrayBuffer)if(c.decode(new Uint8Array(e,0,4))===H1){try{o[vt.KHR_BINARY_GLTF]=new C3(e)}catch(h){i&&i(h);return}r=JSON.parse(o[vt.KHR_BINARY_GLTF].content)}else r=JSON.parse(c.decode(e));else r=e;if(r.asset===void 0||r.asset.version[0]<2){i&&i(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const l=new V3(r,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});l.fileLoader.setRequestHeader(this.requestHeader);for(let u=0;u<this.pluginCallbacks.length;u++){const h=this.pluginCallbacks[u](l);h.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),a[h.name]=h,o[h.name]=!0}if(r.extensionsUsed)for(let u=0;u<r.extensionsUsed.length;++u){const h=r.extensionsUsed[u],d=r.extensionsRequired||[];switch(h){case vt.KHR_MATERIALS_UNLIT:o[h]=new h3;break;case vt.KHR_DRACO_MESH_COMPRESSION:o[h]=new R3(r,this.dracoLoader);break;case vt.KHR_TEXTURE_TRANSFORM:o[h]=new P3;break;case vt.KHR_MESH_QUANTIZATION:o[h]=new I3;break;default:d.indexOf(h)>=0&&a[h]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+h+'".')}}l.setExtensions(o),l.setPlugins(a),l.parse(n,i)}parseAsync(e,t){const n=this;return new Promise(function(i,r){n.parse(e,t,i,r)})}}function l3(){let s={};return{get:function(e){return s[e]},add:function(e,t){s[e]=t},remove:function(e){delete s[e]},removeAll:function(){s={}}}}const vt={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class u3{constructor(e){this.parser=e,this.name=vt.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,i=t.length;n<i;n++){const r=t[n];r.extensions&&r.extensions[this.name]&&r.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,r.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let i=t.cache.get(n);if(i)return i;const r=t.json,c=((r.extensions&&r.extensions[this.name]||{}).lights||[])[e];let l;const u=new Ce(16777215);c.color!==void 0&&u.setRGB(c.color[0],c.color[1],c.color[2],Gn);const h=c.range!==void 0?c.range:0;switch(c.type){case"directional":l=new Fp(u),l.target.position.set(0,0,-1),l.add(l.target);break;case"point":l=new Up(u),l.distance=h;break;case"spot":l=new Np(u),l.distance=h,c.spot=c.spot||{},c.spot.innerConeAngle=c.spot.innerConeAngle!==void 0?c.spot.innerConeAngle:0,c.spot.outerConeAngle=c.spot.outerConeAngle!==void 0?c.spot.outerConeAngle:Math.PI/4,l.angle=c.spot.outerConeAngle,l.penumbra=1-c.spot.innerConeAngle/c.spot.outerConeAngle,l.target.position.set(0,0,-1),l.add(l.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+c.type)}return l.position.set(0,0,0),Sr(l,c),c.intensity!==void 0&&(l.intensity=c.intensity),l.name=t.createUniqueName(c.name||"light_"+e),i=Promise.resolve(l),t.cache.add(n,i),i}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,r=n.json.nodes[e],a=(r.extensions&&r.extensions[this.name]||{}).light;return a===void 0?null:this._loadLight(a).then(function(c){return n._getNodeRef(t.cache,a,c)})}}class h3{constructor(){this.name=vt.KHR_MATERIALS_UNLIT}getMaterialType(){return Si}extendParams(e,t,n){const i=[];e.color=new Ce(1,1,1),e.opacity=1;const r=t.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){const o=r.baseColorFactor;e.color.setRGB(o[0],o[1],o[2],Gn),e.opacity=o[3]}r.baseColorTexture!==void 0&&i.push(n.assignTexture(e,"map",r.baseColorTexture,gn))}return Promise.all(i)}}class d3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name].emissiveStrength;return r!==void 0&&(t.emissiveIntensity=r),Promise.resolve()}}class f3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],o=i.extensions[this.name];if(o.clearcoatFactor!==void 0&&(t.clearcoat=o.clearcoatFactor),o.clearcoatTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatMap",o.clearcoatTexture)),o.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=o.clearcoatRoughnessFactor),o.clearcoatRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"clearcoatRoughnessMap",o.clearcoatRoughnessTexture)),o.clearcoatNormalTexture!==void 0&&(r.push(n.assignTexture(t,"clearcoatNormalMap",o.clearcoatNormalTexture)),o.clearcoatNormalTexture.scale!==void 0)){const a=o.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new le(a,a)}return Promise.all(r)}}class p3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_DISPERSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name];return t.dispersion=r.dispersion!==void 0?r.dispersion:0,Promise.resolve()}}class m3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],o=i.extensions[this.name];return o.iridescenceFactor!==void 0&&(t.iridescence=o.iridescenceFactor),o.iridescenceTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceMap",o.iridescenceTexture)),o.iridescenceIor!==void 0&&(t.iridescenceIOR=o.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),o.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=o.iridescenceThicknessMinimum),o.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=o.iridescenceThicknessMaximum),o.iridescenceThicknessTexture!==void 0&&r.push(n.assignTexture(t,"iridescenceThicknessMap",o.iridescenceThicknessTexture)),Promise.all(r)}}class g3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_SHEEN}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[];t.sheenColor=new Ce(0,0,0),t.sheenRoughness=0,t.sheen=1;const o=i.extensions[this.name];if(o.sheenColorFactor!==void 0){const a=o.sheenColorFactor;t.sheenColor.setRGB(a[0],a[1],a[2],Gn)}return o.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=o.sheenRoughnessFactor),o.sheenColorTexture!==void 0&&r.push(n.assignTexture(t,"sheenColorMap",o.sheenColorTexture,gn)),o.sheenRoughnessTexture!==void 0&&r.push(n.assignTexture(t,"sheenRoughnessMap",o.sheenRoughnessTexture)),Promise.all(r)}}class _3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],o=i.extensions[this.name];return o.transmissionFactor!==void 0&&(t.transmission=o.transmissionFactor),o.transmissionTexture!==void 0&&r.push(n.assignTexture(t,"transmissionMap",o.transmissionTexture)),Promise.all(r)}}class v3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_VOLUME}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],o=i.extensions[this.name];t.thickness=o.thicknessFactor!==void 0?o.thicknessFactor:0,o.thicknessTexture!==void 0&&r.push(n.assignTexture(t,"thicknessMap",o.thicknessTexture)),t.attenuationDistance=o.attenuationDistance||1/0;const a=o.attenuationColor||[1,1,1];return t.attenuationColor=new Ce().setRGB(a[0],a[1],a[2],Gn),Promise.all(r)}}class y3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_IOR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const i=this.parser.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=i.extensions[this.name];return t.ior=r.ior!==void 0?r.ior:1.5,Promise.resolve()}}class x3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_SPECULAR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],o=i.extensions[this.name];t.specularIntensity=o.specularFactor!==void 0?o.specularFactor:1,o.specularTexture!==void 0&&r.push(n.assignTexture(t,"specularIntensityMap",o.specularTexture));const a=o.specularColorFactor||[1,1,1];return t.specularColor=new Ce().setRGB(a[0],a[1],a[2],Gn),o.specularColorTexture!==void 0&&r.push(n.assignTexture(t,"specularColorMap",o.specularColorTexture,gn)),Promise.all(r)}}class M3{constructor(e){this.parser=e,this.name=vt.EXT_MATERIALS_BUMP}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],o=i.extensions[this.name];return t.bumpScale=o.bumpFactor!==void 0?o.bumpFactor:1,o.bumpTexture!==void 0&&r.push(n.assignTexture(t,"bumpMap",o.bumpTexture)),Promise.all(r)}}class b3{constructor(e){this.parser=e,this.name=vt.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:zi}extendMaterialParams(e,t){const n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();const r=[],o=i.extensions[this.name];return o.anisotropyStrength!==void 0&&(t.anisotropy=o.anisotropyStrength),o.anisotropyRotation!==void 0&&(t.anisotropyRotation=o.anisotropyRotation),o.anisotropyTexture!==void 0&&r.push(n.assignTexture(t,"anisotropyMap",o.anisotropyTexture)),Promise.all(r)}}class S3{constructor(e){this.parser=e,this.name=vt.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,i=n.textures[e];if(!i.extensions||!i.extensions[this.name])return null;const r=i.extensions[this.name],o=t.options.ktx2Loader;if(!o){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,r.source,o)}}class T3{constructor(e){this.parser=e,this.name=vt.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const o=r.extensions[t],a=i.images[o.source];let c=n.textureLoader;if(a.uri){const l=n.options.manager.getHandler(a.uri);l!==null&&(c=l)}return n.loadTextureImage(e,o.source,c)}}class w3{constructor(e){this.parser=e,this.name=vt.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;const o=r.extensions[t],a=i.images[o.source];let c=n.textureLoader;if(a.uri){const l=n.options.manager.getHandler(a.uri);l!==null&&(c=l)}return n.loadTextureImage(e,o.source,c)}}class E3{constructor(e){this.name=vt.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const i=n.extensions[this.name],r=this.parser.getDependency("buffer",i.buffer),o=this.parser.options.meshoptDecoder;if(!o||!o.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return r.then(function(a){const c=i.byteOffset||0,l=i.byteLength||0,u=i.count,h=i.byteStride,d=new Uint8Array(a,c,l);return o.decodeGltfBufferAsync?o.decodeGltfBufferAsync(u,h,d,i.mode,i.filter).then(function(f){return f.buffer}):o.ready.then(function(){const f=new ArrayBuffer(u*h);return o.decodeGltfBuffer(new Uint8Array(f),u,h,d,i.mode,i.filter),f})})}else return null}}class A3{constructor(e){this.name=vt.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||n.mesh===void 0)return null;const i=t.meshes[n.mesh];for(const l of i.primitives)if(l.mode!==Di.TRIANGLES&&l.mode!==Di.TRIANGLE_STRIP&&l.mode!==Di.TRIANGLE_FAN&&l.mode!==void 0)return null;const o=n.extensions[this.name].attributes,a=[],c={};for(const l in o)a.push(this.parser.getDependency("accessor",o[l]).then(u=>(c[l]=u,c[l])));return a.length<1?null:(a.push(this.parser.createNodeMesh(e)),Promise.all(a).then(l=>{const u=l.pop(),h=u.isGroup?u.children:[u],d=l[0].count,f=[];for(const p of h){const _=new je,g=new F,m=new Vn,b=new F(1,1,1),M=new yp(p.geometry,p.material,d);for(let x=0;x<d;x++)c.TRANSLATION&&g.fromBufferAttribute(c.TRANSLATION,x),c.ROTATION&&m.fromBufferAttribute(c.ROTATION,x),c.SCALE&&b.fromBufferAttribute(c.SCALE,x),M.setMatrixAt(x,_.compose(g,m,b));for(const x in c)if(x==="_COLOR_0"){const A=c[x];M.instanceColor=new uo(A.array,A.itemSize,A.normalized)}else x!=="TRANSLATION"&&x!=="ROTATION"&&x!=="SCALE"&&p.geometry.setAttribute(x,c[x]);Tt.prototype.copy.call(M,p),this.parser.assignFinalMaterial(M),f.push(M)}return u.isGroup?(u.clear(),u.add(...f),u):f[0]}))}}const H1="glTF",$a=12,jy={JSON:1313821514,BIN:5130562};class C3{constructor(e){this.name=vt.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,$a),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==H1)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const i=this.header.length-$a,r=new DataView(e,$a);let o=0;for(;o<i;){const a=r.getUint32(o,!0);o+=4;const c=r.getUint32(o,!0);if(o+=4,c===jy.JSON){const l=new Uint8Array(e,$a+o,a);this.content=n.decode(l)}else if(c===jy.BIN){const l=$a+o;this.body=e.slice(l,l+a)}o+=a}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class R3{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=vt.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,i=this.dracoLoader,r=e.extensions[this.name].bufferView,o=e.extensions[this.name].attributes,a={},c={},l={};for(const u in o){const h=Rf[u]||u.toLowerCase();a[h]=o[u]}for(const u in e.attributes){const h=Rf[u]||u.toLowerCase();if(o[u]!==void 0){const d=n.accessors[e.attributes[u]],f=ia[d.componentType];l[h]=f.name,c[h]=d.normalized===!0}}return t.getDependency("bufferView",r).then(function(u){return new Promise(function(h,d){i.decodeDracoFile(u,function(f){for(const p in f.attributes){const _=f.attributes[p],g=c[p];g!==void 0&&(_.normalized=g)}h(f)},a,l,Gn,d)})})}}class P3{constructor(){this.name=vt.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class I3{constructor(){this.name=vt.KHR_MESH_QUANTIZATION}}class G1 extends Pa{constructor(e,t,n,i){super(e,t,n,i)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i*3+i;for(let o=0;o!==i;o++)t[o]=n[r+o];return t}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=a*2,l=a*3,u=i-t,h=(n-t)/u,d=h*h,f=d*h,p=e*l,_=p-l,g=-2*f+3*d,m=f-d,b=1-g,M=m-d+h;for(let x=0;x!==a;x++){const A=o[_+x+a],C=o[_+x+c]*u,D=o[p+x+a],O=o[p+x]*u;r[x]=b*A+M*C+g*D+m*O}return r}}const D3=new Vn;class L3 extends G1{interpolate_(e,t,n,i){const r=super.interpolate_(e,t,n,i);return D3.fromArray(r).normalize().toArray(r),r}}const Di={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},ia={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},$y={9728:vn,9729:rn,9984:sh,9985:ta,9986:Xs,9987:Ni},qy={33071:bi,33648:la,10497:ps},Xd={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Rf={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},Kr={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},O3={CUBICSPLINE:void 0,LINEAR:ma,STEP:pa},jd={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function N3(s){return s.DefaultMaterial===void 0&&(s.DefaultMaterial=new Zc({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:dr})),s.DefaultMaterial}function Us(s,e,t){for(const n in t.extensions)s[n]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[n]=t.extensions[n])}function Sr(s,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(s.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function U3(s,e,t){let n=!1,i=!1,r=!1;for(let l=0,u=e.length;l<u;l++){const h=e[l];if(h.POSITION!==void 0&&(n=!0),h.NORMAL!==void 0&&(i=!0),h.COLOR_0!==void 0&&(r=!0),n&&i&&r)break}if(!n&&!i&&!r)return Promise.resolve(s);const o=[],a=[],c=[];for(let l=0,u=e.length;l<u;l++){const h=e[l];if(n){const d=h.POSITION!==void 0?t.getDependency("accessor",h.POSITION):s.attributes.position;o.push(d)}if(i){const d=h.NORMAL!==void 0?t.getDependency("accessor",h.NORMAL):s.attributes.normal;a.push(d)}if(r){const d=h.COLOR_0!==void 0?t.getDependency("accessor",h.COLOR_0):s.attributes.color;c.push(d)}}return Promise.all([Promise.all(o),Promise.all(a),Promise.all(c)]).then(function(l){const u=l[0],h=l[1],d=l[2];return n&&(s.morphAttributes.position=u),i&&(s.morphAttributes.normal=h),r&&(s.morphAttributes.color=d),s.morphTargetsRelative=!0,s})}function F3(s,e){if(s.updateMorphTargets(),e.weights!==void 0)for(let t=0,n=e.weights.length;t<n;t++)s.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(s.morphTargetInfluences.length===t.length){s.morphTargetDictionary={};for(let n=0,i=t.length;n<i;n++)s.morphTargetDictionary[t[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function B3(s){let e;const t=s.extensions&&s.extensions[vt.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+$d(t.attributes):e=s.indices+":"+$d(s.attributes)+":"+s.mode,s.targets!==void 0)for(let n=0,i=s.targets.length;n<i;n++)e+=":"+$d(s.targets[n]);return e}function $d(s){let e="";const t=Object.keys(s).sort();for(let n=0,i=t.length;n<i;n++)e+=t[n]+":"+s[t[n]]+";";return e}function Pf(s){switch(s){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function z3(s){return s.search(/\.jpe?g($|\?)/i)>0||s.search(/^data\:image\/jpeg/)===0?"image/jpeg":s.search(/\.webp($|\?)/i)>0||s.search(/^data\:image\/webp/)===0?"image/webp":s.search(/\.ktx2($|\?)/i)>0||s.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const k3=new je;class V3{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new l3,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,i=-1,r=!1,o=-1;if(typeof navigator<"u"){const a=navigator.userAgent;n=/^((?!chrome|android).)*safari/i.test(a)===!0;const c=a.match(/Version\/(\d+)/);i=n&&c?parseInt(c[1],10):-1,r=a.indexOf("Firefox")>-1,o=r?a.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||n&&i<17||r&&o<98?this.textureLoader=new d1(this.options.manager):this.textureLoader=new x1(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new Yi(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,i=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(o){return o._markDefs&&o._markDefs()}),Promise.all(this._invokeAll(function(o){return o.beforeRoot&&o.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(o){const a={scene:o[0][i.scene||0],scenes:o[0],animations:o[1],cameras:o[2],asset:i.asset,parser:n,userData:{}};return Us(r,a,i),Sr(a,i),Promise.all(n._invokeAll(function(c){return c.afterRoot&&c.afterRoot(a)})).then(function(){for(const c of a.scenes)c.updateMatrixWorld();e(a)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let i=0,r=t.length;i<r;i++){const o=t[i].joints;for(let a=0,c=o.length;a<c;a++)e[o[a]].isBone=!0}for(let i=0,r=e.length;i<r;i++){const o=e[i];o.mesh!==void 0&&(this._addNodeRef(this.meshCache,o.mesh),o.skin!==void 0&&(n[o.mesh].isSkinnedMesh=!0)),o.camera!==void 0&&this._addNodeRef(this.cameraCache,o.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const i=n.clone(),r=(o,a)=>{const c=this.associations.get(o);c!=null&&this.associations.set(a,c);for(const[l,u]of o.children.entries())r(u,a.children[l])};return r(n,i),i.name+="_instance_"+e.uses[t]++,i}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const i=e(t[n]);if(i)return i}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let i=0;i<t.length;i++){const r=e(t[i]);r&&n.push(r)}return n}getDependency(e,t){const n=e+":"+t;let i=this.cache.get(n);if(!i){switch(e){case"scene":i=this.loadScene(t);break;case"node":i=this._invokeOne(function(r){return r.loadNode&&r.loadNode(t)});break;case"mesh":i=this._invokeOne(function(r){return r.loadMesh&&r.loadMesh(t)});break;case"accessor":i=this.loadAccessor(t);break;case"bufferView":i=this._invokeOne(function(r){return r.loadBufferView&&r.loadBufferView(t)});break;case"buffer":i=this.loadBuffer(t);break;case"material":i=this._invokeOne(function(r){return r.loadMaterial&&r.loadMaterial(t)});break;case"texture":i=this._invokeOne(function(r){return r.loadTexture&&r.loadTexture(t)});break;case"skin":i=this.loadSkin(t);break;case"animation":i=this._invokeOne(function(r){return r.loadAnimation&&r.loadAnimation(t)});break;case"camera":i=this.loadCamera(t);break;default:if(i=this._invokeOne(function(r){return r!=this&&r.getDependency&&r.getDependency(e,t)}),!i)throw new Error("Unknown type: "+e);break}this.cache.add(n,i)}return i}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,i=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(i.map(function(r,o){return n.getDependency(e,o)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[vt.KHR_BINARY_GLTF].body);const i=this.options;return new Promise(function(r,o){n.load(us.resolveURL(t.uri,i.path),r,void 0,function(){o(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(n){const i=t.byteLength||0,r=t.byteOffset||0;return n.slice(r,r+i)})}loadAccessor(e){const t=this,n=this.json,i=this.json.accessors[e];if(i.bufferView===void 0&&i.sparse===void 0){const o=Xd[i.type],a=ia[i.componentType],c=i.normalized===!0,l=new a(i.count*o);return Promise.resolve(new Ot(l,o,c))}const r=[];return i.bufferView!==void 0?r.push(this.getDependency("bufferView",i.bufferView)):r.push(null),i.sparse!==void 0&&(r.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(r).then(function(o){const a=o[0],c=Xd[i.type],l=ia[i.componentType],u=l.BYTES_PER_ELEMENT,h=u*c,d=i.byteOffset||0,f=i.bufferView!==void 0?n.bufferViews[i.bufferView].byteStride:void 0,p=i.normalized===!0;let _,g;if(f&&f!==h){const m=Math.floor(d/f),b="InterleavedBuffer:"+i.bufferView+":"+i.componentType+":"+m+":"+i.count;let M=t.cache.get(b);M||(_=new l(a,m*f,i.count*f/u),M=new Wc(_,f/u),t.cache.add(b,M)),g=new ms(M,c,d%f/u,p)}else a===null?_=new l(i.count*c):_=new l(a,d,i.count*c),g=new Ot(_,c,p);if(i.sparse!==void 0){const m=Xd.SCALAR,b=ia[i.sparse.indices.componentType],M=i.sparse.indices.byteOffset||0,x=i.sparse.values.byteOffset||0,A=new b(o[1],M,i.sparse.count*m),C=new l(o[2],x,i.sparse.count*c);a!==null&&(g=new Ot(g.array.slice(),g.itemSize,g.normalized)),g.normalized=!1;for(let D=0,O=A.length;D<O;D++){const w=A[D];if(g.setX(w,C[D*c]),c>=2&&g.setY(w,C[D*c+1]),c>=3&&g.setZ(w,C[D*c+2]),c>=4&&g.setW(w,C[D*c+3]),c>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}g.normalized=p}return g})}loadTexture(e){const t=this.json,n=this.options,r=t.textures[e].source,o=t.images[r];let a=this.textureLoader;if(o.uri){const c=n.manager.getHandler(o.uri);c!==null&&(a=c)}return this.loadTextureImage(e,r,a)}loadTextureImage(e,t,n){const i=this,r=this.json,o=r.textures[e],a=r.images[t],c=(a.uri||a.bufferView)+":"+o.sampler;if(this.textureCache[c])return this.textureCache[c];const l=this.loadImageSource(t,n).then(function(u){u.flipY=!1,u.name=o.name||a.name||"",u.name===""&&typeof a.uri=="string"&&a.uri.startsWith("data:image/")===!1&&(u.name=a.uri);const d=(r.samplers||{})[o.sampler]||{};return u.magFilter=$y[d.magFilter]||rn,u.minFilter=$y[d.minFilter]||Ni,u.wrapS=qy[d.wrapS]||ps,u.wrapT=qy[d.wrapT]||ps,u.generateMipmaps=!u.isCompressedTexture&&u.minFilter!==vn&&u.minFilter!==rn,i.associations.set(u,{textures:e}),u}).catch(function(){return null});return this.textureCache[c]=l,l}loadImageSource(e,t){const n=this,i=this.json,r=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(h=>h.clone());const o=i.images[e],a=self.URL||self.webkitURL;let c=o.uri||"",l=!1;if(o.bufferView!==void 0)c=n.getDependency("bufferView",o.bufferView).then(function(h){l=!0;const d=new Blob([h],{type:o.mimeType});return c=a.createObjectURL(d),c});else if(o.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const u=Promise.resolve(c).then(function(h){return new Promise(function(d,f){let p=d;t.isImageBitmapLoader===!0&&(p=function(_){const g=new Xt(_);g.needsUpdate=!0,d(g)}),t.load(us.resolveURL(h,r.path),p,void 0,f)})}).then(function(h){return l===!0&&a.revokeObjectURL(c),Sr(h,o),h.userData.mimeType=o.mimeType||z3(o.uri),h}).catch(function(h){throw console.error("THREE.GLTFLoader: Couldn't load texture",c),h});return this.sourceCache[e]=u,u}assignTexture(e,t,n,i){const r=this;return this.getDependency("texture",n.index).then(function(o){if(!o)return null;if(n.texCoord!==void 0&&n.texCoord>0&&(o=o.clone(),o.channel=n.texCoord),r.extensions[vt.KHR_TEXTURE_TRANSFORM]){const a=n.extensions!==void 0?n.extensions[vt.KHR_TEXTURE_TRANSFORM]:void 0;if(a){const c=r.associations.get(o);o=r.extensions[vt.KHR_TEXTURE_TRANSFORM].extendTexture(o,a),r.associations.set(o,c)}}return i!==void 0&&(o.colorSpace=i),e[t]=o,o})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const i=t.attributes.tangent===void 0,r=t.attributes.color!==void 0,o=t.attributes.normal===void 0;if(e.isPoints){const a="PointsMaterial:"+n.uuid;let c=this.cache.get(a);c||(c=new Mh,yn.prototype.copy.call(c,n),c.color.copy(n.color),c.map=n.map,c.sizeAttenuation=!1,this.cache.add(a,c)),n=c}else if(e.isLine){const a="LineBasicMaterial:"+n.uuid;let c=this.cache.get(a);c||(c=new Wn,yn.prototype.copy.call(c,n),c.color.copy(n.color),c.map=n.map,this.cache.add(a,c)),n=c}if(i||r||o){let a="ClonedMaterial:"+n.uuid+":";i&&(a+="derivative-tangents:"),r&&(a+="vertex-colors:"),o&&(a+="flat-shading:");let c=this.cache.get(a);c||(c=n.clone(),r&&(c.vertexColors=!0),o&&(c.flatShading=!0),i&&(c.normalScale&&(c.normalScale.y*=-1),c.clearcoatNormalScale&&(c.clearcoatNormalScale.y*=-1)),this.cache.add(a,c),this.associations.set(c,this.associations.get(n))),n=c}e.material=n}getMaterialType(){return Zc}loadMaterial(e){const t=this,n=this.json,i=this.extensions,r=n.materials[e];let o;const a={},c=r.extensions||{},l=[];if(c[vt.KHR_MATERIALS_UNLIT]){const h=i[vt.KHR_MATERIALS_UNLIT];o=h.getMaterialType(),l.push(h.extendParams(a,r,t))}else{const h=r.pbrMetallicRoughness||{};if(a.color=new Ce(1,1,1),a.opacity=1,Array.isArray(h.baseColorFactor)){const d=h.baseColorFactor;a.color.setRGB(d[0],d[1],d[2],Gn),a.opacity=d[3]}h.baseColorTexture!==void 0&&l.push(t.assignTexture(a,"map",h.baseColorTexture,gn)),a.metalness=h.metallicFactor!==void 0?h.metallicFactor:1,a.roughness=h.roughnessFactor!==void 0?h.roughnessFactor:1,h.metallicRoughnessTexture!==void 0&&(l.push(t.assignTexture(a,"metalnessMap",h.metallicRoughnessTexture)),l.push(t.assignTexture(a,"roughnessMap",h.metallicRoughnessTexture))),o=this._invokeOne(function(d){return d.getMaterialType&&d.getMaterialType(e)}),l.push(Promise.all(this._invokeAll(function(d){return d.extendMaterialParams&&d.extendMaterialParams(e,a)})))}r.doubleSided===!0&&(a.side=xi);const u=r.alphaMode||jd.OPAQUE;if(u===jd.BLEND?(a.transparent=!0,a.depthWrite=!1):(a.transparent=!1,u===jd.MASK&&(a.alphaTest=r.alphaCutoff!==void 0?r.alphaCutoff:.5)),r.normalTexture!==void 0&&o!==Si&&(l.push(t.assignTexture(a,"normalMap",r.normalTexture)),a.normalScale=new le(1,1),r.normalTexture.scale!==void 0)){const h=r.normalTexture.scale;a.normalScale.set(h,h)}if(r.occlusionTexture!==void 0&&o!==Si&&(l.push(t.assignTexture(a,"aoMap",r.occlusionTexture)),r.occlusionTexture.strength!==void 0&&(a.aoMapIntensity=r.occlusionTexture.strength)),r.emissiveFactor!==void 0&&o!==Si){const h=r.emissiveFactor;a.emissive=new Ce().setRGB(h[0],h[1],h[2],Gn)}return r.emissiveTexture!==void 0&&o!==Si&&l.push(t.assignTexture(a,"emissiveMap",r.emissiveTexture,gn)),Promise.all(l).then(function(){const h=new o(a);return r.name&&(h.name=r.name),Sr(h,r),t.associations.set(h,{materials:e}),r.extensions&&Us(i,h,r),h})}createUniqueName(e){const t=wt.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,i=this.primitiveCache;function r(a){return n[vt.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(a,t).then(function(c){return Yy(c,a,t)})}const o=[];for(let a=0,c=e.length;a<c;a++){const l=e[a],u=B3(l),h=i[u];if(h)o.push(h.promise);else{let d;l.extensions&&l.extensions[vt.KHR_DRACO_MESH_COMPRESSION]?d=r(l):d=Yy(new st,l,t),i[u]={primitive:l,promise:d},o.push(d)}}return Promise.all(o)}loadMesh(e){const t=this,n=this.json,i=this.extensions,r=n.meshes[e],o=r.primitives,a=[];for(let c=0,l=o.length;c<l;c++){const u=o[c].material===void 0?N3(this.cache):this.getDependency("material",o[c].material);a.push(u)}return a.push(t.loadGeometries(o)),Promise.all(a).then(function(c){const l=c.slice(0,c.length-1),u=c[c.length-1],h=[];for(let f=0,p=u.length;f<p;f++){const _=u[f],g=o[f];let m;const b=l[f];if(g.mode===Di.TRIANGLES||g.mode===Di.TRIANGLE_STRIP||g.mode===Di.TRIANGLE_FAN||g.mode===void 0)m=r.isSkinnedMesh===!0?new vp(_,b):new en(_,b),m.isSkinnedMesh===!0&&m.normalizeSkinWeights(),g.mode===Di.TRIANGLE_STRIP?m.geometry=Xy(m.geometry,up):g.mode===Di.TRIANGLE_FAN&&(m.geometry=Xy(m.geometry,Hu));else if(g.mode===Di.LINES)m=new Zi(_,b);else if(g.mode===Di.LINE_STRIP)m=new kr(_,b);else if(g.mode===Di.LINE_LOOP)m=new xp(_,b);else if(g.mode===Di.POINTS)m=new Mp(_,b);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+g.mode);Object.keys(m.geometry.morphAttributes).length>0&&F3(m,r),m.name=t.createUniqueName(r.name||"mesh_"+e),Sr(m,r),g.extensions&&Us(i,m,g),t.assignFinalMaterial(m),h.push(m)}for(let f=0,p=h.length;f<p;f++)t.associations.set(h[f],{meshes:e,primitives:f});if(h.length===1)return r.extensions&&Us(i,h[0],r),h[0];const d=new cr;r.extensions&&Us(i,d,r),t.associations.set(d,{meshes:e});for(let f=0,p=h.length;f<p;f++)d.add(h[f]);return d})}loadCamera(e){let t;const n=this.json.cameras[e],i=n[n.type];if(!i){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return n.type==="perspective"?t=new _n(RM.radToDeg(i.yfov),i.aspectRatio||1,i.znear||1,i.zfar||2e6):n.type==="orthographic"&&(t=new Ia(-i.xmag,i.xmag,i.ymag,-i.ymag,i.znear,i.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),Sr(t,n),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],n=[];for(let i=0,r=t.joints.length;i<r;i++)n.push(this._loadNodeShallow(t.joints[i]));return t.inverseBindMatrices!==void 0?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(i){const r=i.pop(),o=i,a=[],c=[];for(let l=0,u=o.length;l<u;l++){const h=o[l];if(h){a.push(h);const d=new je;r!==null&&d.fromArray(r.array,l*16),c.push(d)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[l])}return new Xc(a,c)})}loadAnimation(e){const t=this.json,n=this,i=t.animations[e],r=i.name?i.name:"animation_"+e,o=[],a=[],c=[],l=[],u=[];for(let h=0,d=i.channels.length;h<d;h++){const f=i.channels[h],p=i.samplers[f.sampler],_=f.target,g=_.node,m=i.parameters!==void 0?i.parameters[p.input]:p.input,b=i.parameters!==void 0?i.parameters[p.output]:p.output;_.node!==void 0&&(o.push(this.getDependency("node",g)),a.push(this.getDependency("accessor",m)),c.push(this.getDependency("accessor",b)),l.push(p),u.push(_))}return Promise.all([Promise.all(o),Promise.all(a),Promise.all(c),Promise.all(l),Promise.all(u)]).then(function(h){const d=h[0],f=h[1],p=h[2],_=h[3],g=h[4],m=[];for(let b=0,M=d.length;b<M;b++){const x=d[b],A=f[b],C=p[b],D=_[b],O=g[b];if(x===void 0)continue;x.updateMatrix&&x.updateMatrix();const w=n._createAnimationTracks(x,A,C,D,O);if(w)for(let E=0;E<w.length;E++)m.push(w[E])}return new ya(r,void 0,m)})}createNodeMesh(e){const t=this.json,n=this,i=t.nodes[e];return i.mesh===void 0?null:n.getDependency("mesh",i.mesh).then(function(r){const o=n._getNodeRef(n.meshCache,i.mesh,r);return i.weights!==void 0&&o.traverse(function(a){if(a.isMesh)for(let c=0,l=i.weights.length;c<l;c++)a.morphTargetInfluences[c]=i.weights[c]}),o})}loadNode(e){const t=this.json,n=this,i=t.nodes[e],r=n._loadNodeShallow(e),o=[],a=i.children||[];for(let l=0,u=a.length;l<u;l++)o.push(n.getDependency("node",a[l]));const c=i.skin===void 0?Promise.resolve(null):n.getDependency("skin",i.skin);return Promise.all([r,Promise.all(o),c]).then(function(l){const u=l[0],h=l[1],d=l[2];d!==null&&u.traverse(function(f){f.isSkinnedMesh&&f.bind(d,k3)});for(let f=0,p=h.length;f<p;f++)u.add(h[f]);return u})}_loadNodeShallow(e){const t=this.json,n=this.extensions,i=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const r=t.nodes[e],o=r.name?i.createUniqueName(r.name):"",a=[],c=i._invokeOne(function(l){return l.createNodeMesh&&l.createNodeMesh(e)});return c&&a.push(c),r.camera!==void 0&&a.push(i.getDependency("camera",r.camera).then(function(l){return i._getNodeRef(i.cameraCache,r.camera,l)})),i._invokeAll(function(l){return l.createNodeAttachment&&l.createNodeAttachment(e)}).forEach(function(l){a.push(l)}),this.nodeCache[e]=Promise.all(a).then(function(l){let u;if(r.isBone===!0?u=new yh:l.length>1?u=new cr:l.length===1?u=l[0]:u=new Tt,u!==l[0])for(let h=0,d=l.length;h<d;h++)u.add(l[h]);if(r.name&&(u.userData.name=r.name,u.name=o),Sr(u,r),r.extensions&&Us(n,u,r),r.matrix!==void 0){const h=new je;h.fromArray(r.matrix),u.applyMatrix4(h)}else r.translation!==void 0&&u.position.fromArray(r.translation),r.rotation!==void 0&&u.quaternion.fromArray(r.rotation),r.scale!==void 0&&u.scale.fromArray(r.scale);return i.associations.has(u)||i.associations.set(u,{}),i.associations.get(u).nodes=e,u}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],i=this,r=new cr;n.name&&(r.name=i.createUniqueName(n.name)),Sr(r,n),n.extensions&&Us(t,r,n);const o=n.nodes||[],a=[];for(let c=0,l=o.length;c<l;c++)a.push(i.getDependency("node",o[c]));return Promise.all(a).then(function(c){for(let u=0,h=c.length;u<h;u++)r.add(c[u]);const l=u=>{const h=new Map;for(const[d,f]of i.associations)(d instanceof yn||d instanceof Xt)&&h.set(d,f);return u.traverse(d=>{const f=i.associations.get(d);f!=null&&h.set(d,f)}),h};return i.associations=l(r),r})}_createAnimationTracks(e,t,n,i,r){const o=[],a=e.name?e.name:e.uuid,c=[];Kr[r.path]===Kr.weights?e.traverse(function(d){d.morphTargetInfluences&&c.push(d.name?d.name:d.uuid)}):c.push(a);let l;switch(Kr[r.path]){case Kr.weights:l=fo;break;case Kr.rotation:l=po;break;case Kr.translation:case Kr.scale:l=mo;break;default:switch(n.itemSize){case 1:l=fo;break;case 2:case 3:default:l=mo;break}break}const u=i.interpolation!==void 0?O3[i.interpolation]:ma,h=this._getArrayFromAccessor(n);for(let d=0,f=c.length;d<f;d++){const p=new l(c[d]+"."+Kr[r.path],t.array,h,u);i.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(p),o.push(p)}return o}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const n=Pf(t.constructor),i=new Float32Array(t.length);for(let r=0,o=t.length;r<o;r++)i[r]=t[r]*n;t=i}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(n){const i=this instanceof po?L3:G1;return new i(this.times,this.values,this.getValueSize()/3,n)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function H3(s,e,t){const n=e.attributes,i=new fn;if(n.POSITION!==void 0){const a=t.json.accessors[n.POSITION],c=a.min,l=a.max;if(c!==void 0&&l!==void 0){if(i.set(new F(c[0],c[1],c[2]),new F(l[0],l[1],l[2])),a.normalized){const u=Pf(ia[a.componentType]);i.min.multiplyScalar(u),i.max.multiplyScalar(u)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const r=e.targets;if(r!==void 0){const a=new F,c=new F;for(let l=0,u=r.length;l<u;l++){const h=r[l];if(h.POSITION!==void 0){const d=t.json.accessors[h.POSITION],f=d.min,p=d.max;if(f!==void 0&&p!==void 0){if(c.setX(Math.max(Math.abs(f[0]),Math.abs(p[0]))),c.setY(Math.max(Math.abs(f[1]),Math.abs(p[1]))),c.setZ(Math.max(Math.abs(f[2]),Math.abs(p[2]))),d.normalized){const _=Pf(ia[d.componentType]);c.multiplyScalar(_)}a.max(c)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}i.expandByVector(a)}s.boundingBox=i;const o=new pn;i.getCenter(o.center),o.radius=i.min.distanceTo(i.max)/2,s.boundingSphere=o}function Yy(s,e,t){const n=e.attributes,i=[];function r(o,a){return t.getDependency("accessor",o).then(function(c){s.setAttribute(a,c)})}for(const o in n){const a=Rf[o]||o.toLowerCase();a in s.attributes||i.push(r(n[o],a))}if(e.indices!==void 0&&!s.index){const o=t.getDependency("accessor",e.indices).then(function(a){s.setIndex(a)});i.push(o)}return _t.workingColorSpace!==Gn&&"COLOR_0"in n&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${_t.workingColorSpace}" not supported.`),Sr(s,e),H3(s,e,t),Promise.all(i).then(function(){return e.targets!==void 0?U3(s,e.targets,t):s})}const G3=s=>{const e={nodes:{},materials:{}};return s&&s.traverse(t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)}),e};function W3(s,e){const t=a3(c3,{});return(r=>t.load(r,{transform(o){return{...o,...G3(o.scene)}}}))(s)}const Fs=s=>({subscribe:s.subscribe,get current(){return s.current}});let uc=0;const Xp=nn(!1),Hh=nn(!1),jp=nn(void 0),$p=nn(0),qp=nn(0),W1=nn([]),Yp=nn(0),{onStart:qd,onLoad:Yd,onError:Zd}=So;So.onStart=(s,e,t)=>{qd==null||qd(s,e,t),Hh.set(!0),jp.set(s),$p.set(e),qp.set(t);const n=(e-uc)/(t-uc);Yp.set(n),n===1&&Xp.set(!0)};So.onLoad=()=>{Yd==null||Yd(),Hh.set(!1)};So.onError=s=>{Zd==null||Zd(s),W1.update(e=>[...e,s])};So.onProgress=(s,e,t)=>{e===t&&(uc=t),Hh.set(!0),jp.set(s),$p.set(e),qp.set(t);const n=(e-uc)/(t-uc)||1;Yp.set(n),n===1&&Xp.set(!0)};Fs(Hh),Fs(jp),Fs($p),Fs(qp),Fs(W1),Fs(Yp),Fs(Xp);new F;new F;new F;new pn;new je;new yo;new F;const go=new F,Gh=new F,X3=new F,j3=new le,$3=(s,e,t)=>{const n=go.setFromMatrixPosition(s.matrixWorld);n.project(e);const i=t.width/2,r=t.height/2;return[n.x*i+i,-(n.y*r)+r]},q3=(s,e)=>{const t=go.setFromMatrixPosition(s.matrixWorld),n=Gh.setFromMatrixPosition(e.matrixWorld),i=t.sub(n),r=e.getWorldDirection(X3);return i.angleTo(r)>Math.PI/2},Y3=(s,e,t,n)=>{const i=go.setFromMatrixPosition(s.matrixWorld),r=Gh.copy(go);r.project(e),t.setFromCamera(j3.set(r.x,r.y),e);const o=t.intersectObjects(n,!0);if(o.length){const a=o[0].distance;return i.distanceTo(t.ray.origin)<a}return!0},Z3=(s,e)=>{if(Bn(e,"OrthographicCamera"))return e.zoom;if(Bn(e,"PerspectiveCamera")){const t=go.setFromMatrixPosition(s.matrixWorld),n=Gh.setFromMatrixPosition(e.matrixWorld),i=e.fov*Math.PI/180,r=t.distanceTo(n);return 1/(2*Math.tan(i/2)*r)}else return 1},K3=(s,e,t)=>{const n=go.setFromMatrixPosition(s.matrixWorld),i=Gh.setFromMatrixPosition(e.matrixWorld),r=n.distanceTo(i),o=(t[1]-t[0])/(e.far-e.near),a=t[1]-o*e.far;return Math.round(o*r+a)},Tn=s=>Math.abs(s)<1e-10?0:s,X1=(s,e,t="")=>{const{elements:n}=s;return`${t}matrix3d(
    ${Tn(e[0]*n[0])},${Tn(e[1]*n[1])},${Tn(e[2]*n[2])},${Tn(e[3]*n[3])},
    ${Tn(e[4]*n[4])},${Tn(e[5]*n[5])},${Tn(e[6]*n[6])},${Tn(e[7]*n[7])},
    ${Tn(e[8]*n[8])},${Tn(e[9]*n[9])},${Tn(e[10]*n[10])},${Tn(e[11]*n[11])},
    ${Tn(e[12]*n[12])},${Tn(e[13]*n[13])},${Tn(e[14]*n[14])},${Tn(e[15]*n[15])}
  )`},J3=(s=>e=>X1(e,s))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),Q3=(s=>(e,t)=>X1(e,s(t),"translate(-50%,-50%)"))(s=>[1/s,1/s,1/s,1,-1/s,-1/s,-1/s,-1,1/s,1/s,1/s,1,1,1,1,1]),eD=(s,e,t)=>{if(Bn(s,"OrthographicCamera"))return 1;if(Bn(s,"PerspectiveCamera")){const{width:n,height:i}=t,r=s.getWorldPosition(go).distanceTo(e),o=s.fov*Math.PI/180,c=2*Math.tan(o/2)*r*(n/i);return n/c}throw new Error("getViewportFactor needs a Perspective or Orthographic Camera")},tD=`
#include <common>
#include <logdepthbuf_pars_vertex>
void main() {
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    #include <logdepthbuf_vertex>
}`,Zy=`
#include <logdepthbuf_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4(0.0,0.0,0.0,0.0);
}`,nD=`
#include <common>
#include <logdepthbuf_pars_vertex>

void main() {
  vec2 center = vec2(0., 1.);
  float rotation = 0.0;
  
  // This is somewhat arbitrary, but it seems to work well
  // Need to figure out how to derive this dynamically if it even matters
  float size = 0.03;

  vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
  vec2 scale = vec2(
    length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) ),
    length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) )
  );

  bool isPerspective = isPerspectiveMatrix( projectionMatrix );
  if ( isPerspective ) scale *= - mvPosition.z;

  vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
  vec2 rotatedPosition;
  rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
  rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
  mvPosition.xy += rotatedPosition;

  gl_Position = projectionMatrix * mvPosition;
  #include <logdepthbuf_vertex>
}`;let Wl=!1,qu=0,Ky="",Jy="",Qy="";const ex=(s,e)=>{qu===1&&!Wl?(Ky=s.style.zIndex,Jy=s.style.position,Qy=s.style.pointerEvents,s.style.zIndex=`${Math.floor(e/2)}`,s.style.position="absolute",s.style.pointerEvents="none",Wl=!0):qu===0&&Wl&&(s.style.zIndex=Ky,s.style.position=Jy,s.style.pointerEvents=Qy,Wl=!1)};var iD=ot("<!> <!>",1),rD=ot("<div><div><div><!></div></div></div>"),sD=ot("<div><!></div>"),oD=ot("<!> <!>",1);function aD(s,e){Fc(e,!0);const[t,n]=Lx(),i=()=>tr(C,"$size",t),r=()=>tr(x,"$camera",t);let o=wn(e,"autoRender",3,!0),a=wn(e,"eps",3,.001),c=wn(e,"center",3,!1),l=wn(e,"fullscreen",3,!1),u=wn(e,"sprite",3,!1),h=wn(e,"transform",3,!1),d=wn(e,"occlude",3,!1),f=wn(e,"zIndexRange",19,()=>[16777271,0]),p=wn(e,"calculatePosition",3,$3),_=wn(e,"as",3,"div"),g=wn(e,"pointerEvents",3,"auto"),m=wn(e,"ref",15),b=wn(e,"visible",15),M=zc(e,["$$slots","$$events","$$legacy","autoRender","eps","center","fullscreen","portal","distanceFactor","sprite","transform","occlude","castShadow","receiveShadow","material","geometry","zIndexRange","calculatePosition","as","wrapperClass","pointerEvents","ref","visible","style","children"]);b(!0);const{camera:x,scene:A,size:C,dom:D,canvas:O,renderStage:w}=To(),E=new cr;let z=document.createElement(_()),$=0,j=[0,0],Y=to(void 0),ee=to(void 0),q=!1;const se=new en,J=new Hp;let ge=Fn(()=>d()&&d()!=="blending"||Array.isArray(d())&&d().length>0),xe=new je,Ae=Fn(()=>i().width),He=Fn(()=>i().height),lt=Fn(()=>v(Ae)/2),Z=Fn(()=>v(He)/2),ce=Fn(()=>r().projectionMatrix.elements[5]*v(Z)),me=Fn(()=>eD(r(),new F,i()));vi(()=>{e.wrapperClass&&(z.className=e.wrapperClass)}),vi(()=>(d()==="blending"&&(qu+=1,ex(O,f()[0])),()=>{qu-=1,ex(O,f()[0])}));const Te=()=>{x.current.updateMatrixWorld(),E.updateWorldMatrix(!0,!1);const ie=h()?j:p()(E,x.current,i());if(h()||Math.abs($-x.current.zoom)>a()||Math.abs(j[0]-ie[0])>a()||Math.abs(j[1]-ie[1])>a()){const re=q3(E,x.current);let te=!1;v(ge)&&(Array.isArray(d())?te=d():d()!=="blending"&&(te=[A]));const Se=b();if(te){const P=Y3(E,x.current,J,te);b(P&&!re)}else b(!re);Se!==b()&&(e.onvisibilitychange?e.onvisibilitychange(b()):z.style.display=b()?"block":"none");const ue=Math.floor(f()[0]/2),U=d()?v(ge)?[f()[0],ue]:[ue-1,0]:f();if(z.style.zIndex=`${K3(E,x.current,U)}`,h()&&v(Y)&&v(ee)){const{isOrthographicCamera:P,top:W,left:K,bottom:oe,right:Q}=x.current,Be=J3(x.current.matrixWorldInverse),Me=P?`scale(${v(ce)})translate(${Tn(-(Q+K)/2)}px,${Tn((W+oe)/2)}px)`:`translateZ(${v(ce)}px)`;u()?(xe.copy(x.current.matrixWorldInverse).transpose().copyPosition(xe).scale(E.scale),xe.elements[3]=xe.elements[7]=xe.elements[11]=0,xe.elements[15]=1):xe.copy(E.matrixWorld),z.style.width=`${v(Ae)}px`,z.style.height=`${v(He)}px`,z.style.perspective=P?"":`${v(ce)}px`,v(Y).style.transform=`${Me}${Be}translate(${v(lt)}px,${v(Z)}px)`,v(ee).style.transform=Q3(xe,1/((e.distanceFactor||10)/400))}else{const P=e.distanceFactor===void 0?1:Z3(E,x.current)*e.distanceFactor;z.style.transform=`translate3d(${ie[0]}px,${ie[1]}px,0) scale(${P})`}j=ie,$=x.current.zoom}if(!v(ge)&&!q)if(h()&&v(Y)){const re=v(Y).children[0];if(re!=null&&re.clientWidth&&(re!=null&&re.clientHeight)){const{isOrthographicCamera:te}=x.current;if(te||e.geometry){const{scale:Se}=M;Se&&(Array.isArray(Se)?se.scale.set(1/Se[0],1/Se[1],1/Se[2]):se.scale.setScalar(1/Se))}else{const Se=(e.distanceFactor??10)/400,ue=re.clientWidth*Se,U=re.clientHeight*Se;se.scale.set(ue,U,1)}q=!0}}else{const re=z.children[0];if(re!=null&&re.clientWidth&&(re!=null&&re.clientHeight)){const te=1/v(me),Se=re.clientWidth*te,ue=re.clientHeight*te;se.scale.set(Se,ue,1),q=!0}se.lookAt(x.current.position)}},{start:Ne,stop:Ke}=Vh(Te,{autoStart:!1,autoInvalidate:!1,stage:w});sr(()=>{if(o())return Ne(),()=>{Ke()}});let Ge=Fn(()=>(A.updateMatrixWorld(),p()(E,r(),i())));const gt=ie=>{const re=e.portal??D;if(!re){console.warn("<HTML>: target is undefined.");return}return re.append(ie),{destroy:()=>ie.remove()}};var y=oD(),We=ze(y);R(We,Qf({is:E},()=>M,{get ref(){return m()},set ref(ie){m(ie)},children:(ie,re)=>{var te=Nt(),Se=ze(te);{var ue=U=>{R(U,{is:se,get castShadow(){return e.castShadow},get receiveShadow(){return e.receiveShadow},children:(P,W)=>{var K=iD(),oe=ze(K);{var Q=he=>{R(he,{get is(){return e.geometry}})},Be=he=>{var Pe=Nt(),$e=ze(Pe);I($e,()=>R.PlaneGeometry,(Je,Re)=>{Re(Je,{})}),Le(he,Pe)};Cr(oe,he=>{e.geometry?he(Q):he(Be,!1)})}var Me=N(oe,2);{var Ve=he=>{R(he,{get is(){return e.material}})},Xe=(he,Pe)=>{{var $e=Re=>{var at=Nt(),nt=ze(at);I(nt,()=>R.ShaderMaterial,(Et,G)=>{G(Et,{side:xi,vertexShader:nD,fragmentShader:Zy})}),Le(Re,at)},Je=Re=>{var at=Nt(),nt=ze(at);I(nt,()=>R.ShaderMaterial,(Et,G)=>{G(Et,{side:xi,vertexShader:tD,fragmentShader:Zy})}),Le(Re,at)};Cr(he,Re=>{h()?Re(Je,!1):Re($e)},Pe)}};Cr(Me,he=>{e.material?he(Ve):he(Xe,!1)})}Le(P,K)},$$slots:{default:!0}})};Cr(Se,U=>{d()&&!v(ge)&&U(ue)})}Le(ie,te)},$$slots:{default:!0}}));var B=N(We,2);zS(B,_,!1,(ie,re)=>{kS(ie,W=>gt==null?void 0:gt(W)),Qo(ie,W=>z=W,()=>z);let te;Zl(()=>te=XS(ie,te,{style:"",[jo]:{position:"absolute",top:"0",left:"0","pointer-events":h()?"none":void 0,overflow:h()?"hidden":void 0,transform:h()?void 0:`translate3d(${v(Ge)[0]}px,${v(Ge)[1]}px,0)`,"transform-origin":h()?void 0:"0 0"}}));var Se=Nt(),ue=ze(Se);{var U=W=>{var K=rD();let oe;var Q=Ir(K);let Be;var Me=Ir(Q),Ve=Ir(Me);ls(Ve,()=>e.children??cs,()=>({render:Te,startRendering:Ne,stopRendering:Ke})),Dr(Me),Dr(Q),Qo(Q,Xe=>In(ee,Xe),()=>v(ee)),Dr(K),Qo(K,Xe=>In(Y,Xe),()=>v(Y)),Zl(()=>{oe=Ya(K,"",oe,{position:"absolute",top:"0",left:"0","transform-style":"preserve-3d","pointer-events":"none",width:`${v(Ae)}px`,height:`${v(He)}px`}),Be=Ya(Q,"",Be,{position:"absolute","pointer-events":g()}),hf(Me,1,uf(e.class)),Ya(Me,e.style)}),Le(W,K)},P=W=>{var K=sD();let oe;var Q=Ir(K);ls(Q,()=>e.children??cs,()=>({render:Te,startRendering:Ne,stopRendering:Ke})),Dr(K),Zl(()=>{oe=Ya(K,e.style,oe,{position:"absolute",transform:c()?"translate3d(-50%,-50%,0)":"none",top:l()?`${-v(He)/2}px`:void 0,left:l()?`${-v(Ae)/2}px`:void 0,width:l()?`${v(Ae)}px`:void 0,height:l()?`${v(He)}px`:void 0}),hf(K,1,uf(e.class))}),Le(W,K)};Cr(ue,W=>{h()?W(U):W(P,!1)})}Le(re,Se)}),Le(s,y);var be=Bc({render:Te,startRendering:Ne,stopRendering:Ke});return n(),be}const cD="Right",lD="Top",uD="Front",hD="Left",dD="Bottom",fD="Back";[cD,lD,uD,hD,dD,fD].map(s=>s.toLocaleLowerCase());new fn;new F;Ee.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new le(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};Oi.line={uniforms:mp.merge([Ee.common,Ee.fog,Ee.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};new mt;new F;new F;new mt;new mt;new mt;new F;new je;new E1;new F;new fn;new pn;new mt;new je;new je;new en;`${tt.logdepthbuf_pars_vertex}${tt.fog_pars_vertex}${tt.logdepthbuf_vertex}${tt.fog_vertex}`;`${tt.tonemapping_fragment}${tt.colorspace_fragment}`;`${tt.tonemapping_fragment}${tt.colorspace_fragment}`;const pD=`

// A stack of uint32 indices can can store the indices for
// a perfectly balanced tree with a depth up to 31. Lower stack
// depth gets higher performance.
//
// However not all trees are balanced. Best value to set this to
// is the trees max depth.
#ifndef BVH_STACK_DEPTH
#define BVH_STACK_DEPTH 60
#endif

#ifndef INFINITY
#define INFINITY 1e20
#endif

// Utilities
uvec4 uTexelFetch1D( usampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

ivec4 iTexelFetch1D( isampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 texelFetch1D( sampler2D tex, uint index ) {

	uint width = uint( textureSize( tex, 0 ).x );
	uvec2 uv;
	uv.x = index % width;
	uv.y = index / width;

	return texelFetch( tex, ivec2( uv ), 0 );

}

vec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {

	return
		barycoord.x * texelFetch1D( tex, faceIndices.x ) +
		barycoord.y * texelFetch1D( tex, faceIndices.y ) +
		barycoord.z * texelFetch1D( tex, faceIndices.z );

}

void ndcToCameraRay(
	vec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,
	out vec3 rayOrigin, out vec3 rayDirection
) {

	// get camera look direction and near plane for camera clipping
	vec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );
	vec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );
	float near = abs( nearVector.z / nearVector.w );

	// get the camera direction and position from camera matrices
	vec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );
	direction /= direction.w;
	direction = cameraWorld * direction - origin;

	// slide the origin along the ray until it sits at the near clip plane position
	origin.xyz += direction.xyz * near / dot( direction, lookDirection );

	rayOrigin = origin.xyz;
	rayDirection = direction.xyz;

}
`,mD=`

#ifndef TRI_INTERSECT_EPSILON
#define TRI_INTERSECT_EPSILON 1e-5
#endif

// Raycasting
bool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {

	// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/
	// https://tavianator.com/2011/ray_box.html
	vec3 invDir = 1.0 / rayDirection;

	// find intersection distances for each plane
	vec3 tMinPlane = invDir * ( boundsMin - rayOrigin );
	vec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );

	// get the min and max distances from each intersection
	vec3 tMinHit = min( tMaxPlane, tMinPlane );
	vec3 tMaxHit = max( tMaxPlane, tMinPlane );

	// get the furthest hit distance
	vec2 t = max( tMinHit.xx, tMinHit.yz );
	float t0 = max( t.x, t.y );

	// get the minimum hit distance
	t = min( tMaxHit.xx, tMaxHit.yz );
	float t1 = min( t.x, t.y );

	// set distance to 0.0 if the ray starts inside the box
	dist = max( t0, 0.0 );

	return t1 >= dist;

}

bool intersectsTriangle(
	vec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,
	out vec3 barycoord, out vec3 norm, out float dist, out float side
) {

	// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d
	vec3 edge1 = b - a;
	vec3 edge2 = c - a;
	norm = cross( edge1, edge2 );

	float det = - dot( rayDirection, norm );
	float invdet = 1.0 / det;

	vec3 AO = rayOrigin - a;
	vec3 DAO = cross( AO, rayDirection );

	vec4 uvt;
	uvt.x = dot( edge2, DAO ) * invdet;
	uvt.y = - dot( edge1, DAO ) * invdet;
	uvt.z = dot( AO, norm ) * invdet;
	uvt.w = 1.0 - uvt.x - uvt.y;

	// set the hit information
	barycoord = uvt.wxy; // arranged in A, B, C order
	dist = uvt.z;
	side = sign( det );
	norm = side * normalize( norm );

	// add an epsilon to avoid misses between triangles
	uvt += vec4( TRI_INTERSECT_EPSILON );

	return all( greaterThanEqual( uvt, vec4( 0.0 ) ) );

}

bool intersectTriangles(
	// geometry info and triangle range
	sampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// outputs
	inout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	bool found = false;
	vec3 localBarycoord, localNormal;
	float localDist, localSide;
	for ( uint i = offset, l = offset + count; i < l; i ++ ) {

		uvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;
		vec3 a = texelFetch1D( positionAttr, indices.x ).rgb;
		vec3 b = texelFetch1D( positionAttr, indices.y ).rgb;
		vec3 c = texelFetch1D( positionAttr, indices.z ).rgb;

		if (
			intersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )
			&& localDist < minDistance
		) {

			found = true;
			minDistance = localDist;

			faceIndices = uvec4( indices.xyz, i );
			faceNormal = localNormal;

			side = localSide;
			barycoord = localBarycoord;
			dist = localDist;

		}

	}

	return found;

}

bool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {

	uint cni2 = currNodeIndex * 2u;
	vec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;
	vec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;
	return intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );

}

// use a macro to hide the fact that we need to expand the struct into separate fields
#define	bvhIntersectFirstHit(		bvh,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)	_bvhIntersectFirstHit(		bvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,		rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist	)

bool _bvhIntersectFirstHit(
	// bvh info
	sampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,

	// ray
	vec3 rayOrigin, vec3 rayDirection,

	// output variables split into separate variables due to output precision
	inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,
	inout float side, inout float dist
) {

	// stack needs to be twice as long as the deepest tree we expect because
	// we push both the left and right child onto the stack every traversal
	int ptr = 0;
	uint stack[ BVH_STACK_DEPTH ];
	stack[ 0 ] = 0u;

	float triangleDistance = INFINITY;
	bool found = false;
	while ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {

		uint currNodeIndex = stack[ ptr ];
		ptr --;

		// check if we intersect the current bounds
		float boundsHitDistance;
		if (
			! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )
			|| boundsHitDistance > triangleDistance
		) {

			continue;

		}

		uvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;
		bool isLeaf = bool( boundsInfo.x & 0xffff0000u );

		if ( isLeaf ) {

			uint count = boundsInfo.x & 0x0000ffffu;
			uint offset = boundsInfo.y;

			found = intersectTriangles(
				bvh_position, bvh_index, offset, count,
				rayOrigin, rayDirection, triangleDistance,
				faceIndices, faceNormal, barycoord, side, dist
			) || found;

		} else {

			uint leftIndex = currNodeIndex + 1u;
			uint splitAxis = boundsInfo.x & 0x0000ffffu;
			uint rightIndex = boundsInfo.y;

			bool leftToRight = rayDirection[ splitAxis ] >= 0.0;
			uint c1 = leftToRight ? leftIndex : rightIndex;
			uint c2 = leftToRight ? rightIndex : leftIndex;

			// set c2 in the stack so we traverse it later. We need to keep track of a pointer in
			// the stack while we traverse. The second pointer added is the one that will be
			// traversed first
			ptr ++;
			stack[ ptr ] = c2;

			ptr ++;
			stack[ ptr ] = c1;

		}

	}

	return found;

}
`,gD=`
struct BVH {

	usampler2D index;
	sampler2D position;

	sampler2D bvhBounds;
	usampler2D bvhContents;

};
`,_D=gD,vD=`
	${pD}
	${mD}
`;`${_D}${vD}${tt.tonemapping_fragment}${tt.colorspace_fragment}`;new fn;new Ce;typeof window<"u"&&document.createElement("div");const yD=s=>{const{camera:e}=To();let t=s.current.clientWidth,n=s.current.clientHeight;const i=new ResizeObserver(([r])=>{t=r.contentRect.width,n=r.contentRect.height});return ri(s,r=>(r&&i.observe(r),()=>{r&&i.unobserve(r)})),(r,o)=>{o.pointer.update(a=>(a.set(r.offsetX/t*2-1,-(r.offsetY/n)*2+1),a)),o.raycaster.setFromCamera(o.pointer.current,e.current)}},j1=Symbol("interactivity-context"),xD=()=>fi(j1),MD=s=>{const e=nn(zh().dom),t={enabled:nn(!0),pointer:nn(new le),pointerOverTarget:nn(!1),lastEvent:void 0,raycaster:new Hp,initialClick:[0,0],initialHits:[],hovered:new Map,interactiveObjects:[],target:e,handlers:new WeakMap,compute:yD(e),filter:s==null?void 0:s.filter,addInteractiveObject:(n,i)=>{t.interactiveObjects.indexOf(n)>-1||(t.handlers.set(n,i),t.interactiveObjects.push(n))},removeInteractiveObject:n=>{const i=t.interactiveObjects.indexOf(n);t.interactiveObjects.splice(i,1),t.handlers.delete(n)}};return di(j1,t),t},$1=()=>{const s=xD();if(!s)throw new Error("No interactivity context found. Did you forget to implement interactivity()?");return s},tx=["onclick","oncontextmenu","ondblclick","onwheel","onpointerup","onpointerdown","onpointerover","onpointerout","onpointerenter","onpointerleave","onpointermove","onpointermissed"],bD=()=>{o3("interactivity",s=>{if(!Bn(s.ref,"Object3D")||!Object.entries(s.props).some(([i,r])=>r!==void 0&&tx.includes(i)))return;const{addInteractiveObject:t,removeInteractiveObject:n}=$1();return gI.pre(()=>[s.ref],([i])=>(t(i,s.props),()=>{n(i)})),{pluginProps:tx}})};function nx(s){return`${(s.eventObject||s.object).uuid}/${s.index}${s.instanceId}`}const ix=[["click",!1],["contextmenu",!1],["dblclick",!1],["wheel",!1],["pointerdown",!0],["pointerup",!0],["pointerleave",!0],["pointerenter",!0],["pointermove",!0],["pointercancel",!0]],SD=s=>{const{handlers:e}=$1(),t=l=>{const u=l.offsetX-s.initialClick[0],h=l.offsetY-s.initialClick[1];return Math.round(Math.hypot(u,h))},n=l=>{var u,h;for(const d of s.hovered.values())if(l.length===0||!l.some(f=>f.object===d.object&&f.index===d.index&&f.instanceId===d.instanceId)){const{eventObject:f}=d;s.hovered.delete(nx(d));const p=e.get(f);if(p){const _={...d,intersections:l};(u=p.onpointerout)==null||u.call(p,_),(h=p.onpointerleave)==null||h.call(p,_)}}},i=()=>{if(!s.enabled.current)return[];const l=[],u=s.raycaster.intersectObjects(s.interactiveObjects,!0),h=s.filter===void 0?u:s.filter(u,s);for(const d of h){let f=d.object;for(;f;)e.has(f)&&l.push({...d,eventObject:f}),f=f.parent}return l},r=(l,u)=>{var h,d;for(const f of u)(d=(h=e.get(f))==null?void 0:h.onpointermissed)==null||d.call(h,l)},o=l=>l==="pointerleave"||l==="pointercancel"?()=>{s.pointerOverTarget.set(!1),n([])}:l==="pointerenter"?()=>{s.pointerOverTarget.set(!0)}:u=>{var g,m,b,M;const h=l==="pointermove",d=l==="click"||l==="contextmenu"||l==="dblclick";s.compute(u,s);const f=i(),p=d?t(u):0;l==="pointerdown"&&(s.initialClick=[u.offsetX,u.offsetY],s.initialHits=f.map(x=>x.eventObject)),d&&f.length===0&&p<=2&&r(u,s.interactiveObjects),h&&n(f);let _=!1;e:for(const x of f){const A={stopped:_,...x,intersections:f,stopPropagation(){if(_=!0,A.stopped=!0,s.hovered.size>0&&Array.from(s.hovered.values()).some(D=>D.eventObject===x.eventObject)){const D=f.slice(0,f.indexOf(x));n([...D,x])}},camera:s.raycaster.camera,delta:p,nativeEvent:u,pointer:s.pointer.current,ray:s.raycaster.ray},C=e.get(x.eventObject);if(!C)return;if(h){if(C.onpointerover||C.onpointerenter||C.onpointerout||C.onpointerleave){const D=nx(A),O=s.hovered.get(D);O?O.stopped&&A.stopPropagation():(s.hovered.set(D,A),(g=C.onpointerover)==null||g.call(C,A),(m=C.onpointerenter)==null||m.call(C,A))}(b=C.onpointermove)==null||b.call(C,A)}else C[`on${l}`]?(!d||s.initialHits.includes(x.eventObject))&&(r(u,s.interactiveObjects.filter(D=>!s.initialHits.includes(D))),(M=C[`on${l}`])==null||M.call(C,A)):d&&s.initialHits.includes(x.eventObject)&&r(u,s.interactiveObjects.filter(D=>!s.initialHits.includes(D)));if(_)break e}},a=l=>{ix.forEach(([u])=>{l.removeEventListener(u,o(u))})},c=l=>{ix.forEach(([u,h])=>{l.addEventListener(u,o(u),{passive:h})})};ri(s.target,l=>(l&&c(l),()=>{l&&a(l)}))},TD=s=>{const e=MD(s);return bD(),SD(e),e};for(let s=0;s<256;s++)(s<16?"0":"")+s.toString(16);new Ia(-1,1,1,-1,0,1);class wD extends st{constructor(){super(),this.setAttribute("position",new ke([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new ke([0,2,0,0,2,0],2))}}new wD;var q1={exports:{}};q1.exports=Wh;q1.exports.default=Wh;function Wh(s,e,t){t=t||2;var n=e&&e.length,i=n?e[0]*t:s.length,r=Y1(s,0,i,t,!0),o=[];if(!r||r.next===r.prev)return o;var a,c,l,u,h,d,f;if(n&&(r=PD(s,e,r,t)),s.length>80*t){a=l=s[0],c=u=s[1];for(var p=t;p<i;p+=t)h=s[p],d=s[p+1],h<a&&(a=h),d<c&&(c=d),h>l&&(l=h),d>u&&(u=d);f=Math.max(l-a,u-c),f=f!==0?32767/f:0}return Ec(r,o,t,a,c,f,0),o}function Y1(s,e,t,n,i){var r,o;if(i===Lf(s,e,t,n)>0)for(r=e;r<t;r+=n)o=rx(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=rx(r,s[r],s[r+1],o);return o&&Xh(o,o.next)&&(Cc(o),o=o.next),o}function _o(s,e){if(!s)return s;e||(e=s);var t=s,n;do if(n=!1,!t.steiner&&(Xh(t,t.next)||Jt(t.prev,t,t.next)===0)){if(Cc(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ec(s,e,t,n,i,r,o){if(s){!o&&r&&ND(s,n,i,r);for(var a=s,c,l;s.prev!==s.next;){if(c=s.prev,l=s.next,r?AD(s,n,i,r):ED(s)){e.push(c.i/t|0),e.push(s.i/t|0),e.push(l.i/t|0),Cc(s),s=l.next,a=l.next;continue}if(s=l,s===a){o?o===1?(s=CD(_o(s),e,t),Ec(s,e,t,n,i,r,2)):o===2&&RD(s,e,t,n,i,r):Ec(_o(s),e,t,n,i,r,1);break}}}}function ED(s){var e=s.prev,t=s,n=s.next;if(Jt(e,t,n)>=0)return!1;for(var i=e.x,r=t.x,o=n.x,a=e.y,c=t.y,l=n.y,u=i<r?i<o?i:o:r<o?r:o,h=a<c?a<l?a:l:c<l?c:l,d=i>r?i>o?i:o:r>o?r:o,f=a>c?a>l?a:l:c>l?c:l,p=n.next;p!==e;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&Yo(i,a,r,c,o,l,p.x,p.y)&&Jt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function AD(s,e,t,n){var i=s.prev,r=s,o=s.next;if(Jt(i,r,o)>=0)return!1;for(var a=i.x,c=r.x,l=o.x,u=i.y,h=r.y,d=o.y,f=a<c?a<l?a:l:c<l?c:l,p=u<h?u<d?u:d:h<d?h:d,_=a>c?a>l?a:l:c>l?c:l,g=u>h?u>d?u:d:h>d?h:d,m=If(f,p,e,t,n),b=If(_,g,e,t,n),M=s.prevZ,x=s.nextZ;M&&M.z>=m&&x&&x.z<=b;){if(M.x>=f&&M.x<=_&&M.y>=p&&M.y<=g&&M!==i&&M!==o&&Yo(a,u,c,h,l,d,M.x,M.y)&&Jt(M.prev,M,M.next)>=0||(M=M.prevZ,x.x>=f&&x.x<=_&&x.y>=p&&x.y<=g&&x!==i&&x!==o&&Yo(a,u,c,h,l,d,x.x,x.y)&&Jt(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;M&&M.z>=m;){if(M.x>=f&&M.x<=_&&M.y>=p&&M.y<=g&&M!==i&&M!==o&&Yo(a,u,c,h,l,d,M.x,M.y)&&Jt(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;x&&x.z<=b;){if(x.x>=f&&x.x<=_&&x.y>=p&&x.y<=g&&x!==i&&x!==o&&Yo(a,u,c,h,l,d,x.x,x.y)&&Jt(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function CD(s,e,t){var n=s;do{var i=n.prev,r=n.next.next;!Xh(i,r)&&Z1(i,n,n.next,r)&&Ac(i,r)&&Ac(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),Cc(n),Cc(n.next),n=s=r),n=n.next}while(n!==s);return _o(n)}function RD(s,e,t,n,i,r){var o=s;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&BD(o,a)){var c=K1(o,a);o=_o(o,o.next),c=_o(c,c.next),Ec(o,e,t,n,i,r,0),Ec(c,e,t,n,i,r,0);return}a=a.next}o=o.next}while(o!==s)}function PD(s,e,t,n){var i=[],r,o,a,c,l;for(r=0,o=e.length;r<o;r++)a=e[r]*n,c=r<o-1?e[r+1]*n:s.length,l=Y1(s,a,c,n,!1),l===l.next&&(l.steiner=!0),i.push(FD(l));for(i.sort(ID),r=0;r<i.length;r++)t=DD(i[r],t);return t}function ID(s,e){return s.x-e.x}function DD(s,e){var t=LD(s,e);if(!t)return e;var n=K1(t,s);return _o(n,n.next),_o(t,t.next)}function LD(s,e){var t=e,n=s.x,i=s.y,r=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){var a=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=n&&a>r&&(r=a,o=t.x<t.next.x?t:t.next,a===n))return o}t=t.next}while(t!==e);if(!o)return null;var c=o,l=o.x,u=o.y,h=1/0,d;t=o;do n>=t.x&&t.x>=l&&n!==t.x&&Yo(i<u?n:r,i,l,u,i<u?r:n,i,t.x,t.y)&&(d=Math.abs(i-t.y)/(n-t.x),Ac(t,s)&&(d<h||d===h&&(t.x>o.x||t.x===o.x&&OD(o,t)))&&(o=t,h=d)),t=t.next;while(t!==c);return o}function OD(s,e){return Jt(s.prev,s,e.prev)<0&&Jt(e.next,s,s.next)<0}function ND(s,e,t,n){var i=s;do i.z===0&&(i.z=If(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,UD(i)}function UD(s){var e,t,n,i,r,o,a,c,l=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,a=0,e=0;e<l&&(a++,n=n.nextZ,!!n);e++);for(c=l;a>0||c>0&&n;)a!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,c--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,l*=2}while(o>1);return s}function If(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function FD(s){var e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Yo(s,e,t,n,i,r,o,a){return(i-o)*(e-a)>=(s-o)*(r-a)&&(s-o)*(n-a)>=(t-o)*(e-a)&&(t-o)*(r-a)>=(i-o)*(n-a)}function BD(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!zD(s,e)&&(Ac(s,e)&&Ac(e,s)&&kD(s,e)&&(Jt(s.prev,s,e.prev)||Jt(s,e.prev,e))||Xh(s,e)&&Jt(s.prev,s,s.next)>0&&Jt(e.prev,e,e.next)>0)}function Jt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Xh(s,e){return s.x===e.x&&s.y===e.y}function Z1(s,e,t,n){var i=jl(Jt(s,e,t)),r=jl(Jt(s,e,n)),o=jl(Jt(t,n,s)),a=jl(Jt(t,n,e));return!!(i!==r&&o!==a||i===0&&Xl(s,t,e)||r===0&&Xl(s,n,e)||o===0&&Xl(t,s,n)||a===0&&Xl(t,e,n))}function Xl(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function jl(s){return s>0?1:s<0?-1:0}function zD(s,e){var t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&Z1(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Ac(s,e){return Jt(s.prev,s,s.next)<0?Jt(s,e,s.next)>=0&&Jt(s,s.prev,e)>=0:Jt(s,e,s.prev)<0||Jt(s,s.next,e)<0}function kD(s,e){var t=s,n=!1,i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function K1(s,e){var t=new Df(s.i,s.x,s.y),n=new Df(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function rx(s,e,t,n){var i=new Df(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Cc(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Df(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}Wh.deviation=function(s,e,t,n){var i=e&&e.length,r=i?e[0]*t:s.length,o=Math.abs(Lf(s,0,r,t));if(i)for(var a=0,c=e.length;a<c;a++){var l=e[a]*t,u=a<c-1?e[a+1]*t:s.length;o-=Math.abs(Lf(s,l,u,t))}var h=0;for(a=0;a<n.length;a+=3){var d=n[a]*t,f=n[a+1]*t,p=n[a+2]*t;h+=Math.abs((s[d]-s[p])*(s[f+1]-s[d+1])-(s[d]-s[f])*(s[p+1]-s[d+1]))}return o===0&&h===0?0:Math.abs((h-o)/o)};function Lf(s,e,t,n){for(var i=0,r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}Wh.flatten=function(s){for(var e=s[0][0].length,t={vertices:[],holes:[],dimensions:e},n=0,i=0;i<s.length;i++){for(var r=0;r<s[i].length;r++)for(var o=0;o<e;o++)t.vertices.push(s[i][r][o]);i>0&&(n+=s[i-1].length,t.holes.push(n))}return t};new le;new le;var sx;(s=>{function e(i){let r=i.slice();return r.sort(s.POINT_COMPARATOR),s.makeHullPresorted(r)}s.makeHull=e;function t(i){if(i.length<=1)return i.slice();let r=[];for(let a=0;a<i.length;a++){const c=i[a];for(;r.length>=2;){const l=r[r.length-1],u=r[r.length-2];if((l.x-u.x)*(c.y-u.y)>=(l.y-u.y)*(c.x-u.x))r.pop();else break}r.push(c)}r.pop();let o=[];for(let a=i.length-1;a>=0;a--){const c=i[a];for(;o.length>=2;){const l=o[o.length-1],u=o[o.length-2];if((l.x-u.x)*(c.y-u.y)>=(l.y-u.y)*(c.x-u.x))o.pop();else break}o.push(c)}return o.pop(),r.length==1&&o.length==1&&r[0].x==o[0].x&&r[0].y==o[0].y?r:r.concat(o)}s.makeHullPresorted=t;function n(i,r){return i.x<r.x?-1:i.x>r.x?1:i.y<r.y?-1:i.y>r.y?1:0}s.POINT_COMPARATOR=n})(sx||(sx={}));function Tr(s){if(s===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return s}function J1(s,e){s.prototype=Object.create(e.prototype),s.prototype.constructor=s,s.__proto__=e}/*!
 * GSAP 3.13.0
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var Ei={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},xa={duration:.5,overwrite:!1,delay:0},Zp,Dn,Wt,hr=1e8,kn=1/hr,Of=Math.PI*2,VD=Of/4,HD=0,Q1=Math.sqrt,GD=Math.cos,WD=Math.sin,En=function(e){return typeof e=="string"},sn=function(e){return typeof e=="function"},Vr=function(e){return typeof e=="number"},Kp=function(e){return typeof e>"u"},pr=function(e){return typeof e=="object"},ai=function(e){return e!==!1},Jp=function(){return typeof window<"u"},$l=function(e){return sn(e)||En(e)},eb=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},Hn=Array.isArray,Nf=/(?:-?\.?\d|\.)+/gi,tb=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,Zo=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Kd=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,nb=/[+-]=-?[.\d]+/,ib=/[^,'"\[\]\s]+/gi,XD=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,Zt,ir,Uf,Qp,Ci={},Yu={},rb,sb=function(e){return(Yu=Ma(e,Ci))&&hi},em=function(e,t){return console.warn("Invalid property",e,"set to",t,"Missing plugin? gsap.registerPlugin()")},Rc=function(e,t){return!t&&console.warn(e)},ob=function(e,t){return e&&(Ci[e]=t)&&Yu&&(Yu[e]=t)||Ci},Pc=function(){return 0},jD={suppressEvents:!0,isStart:!0,kill:!1},tu={suppressEvents:!0,kill:!1},$D={suppressEvents:!0},tm={},hs=[],Ff={},ab,yi={},Jd={},ox=30,nu=[],nm="",im=function(e){var t=e[0],n,i;if(pr(t)||sn(t)||(e=[e]),!(n=(t._gsap||{}).harness)){for(i=nu.length;i--&&!nu[i].targetTest(t););n=nu[i]}for(i=e.length;i--;)e[i]&&(e[i]._gsap||(e[i]._gsap=new Ib(e[i],n)))||e.splice(i,1);return e},so=function(e){return e._gsap||im(Fi(e))[0]._gsap},cb=function(e,t,n){return(n=e[t])&&sn(n)?e[t]():Kp(n)&&e.getAttribute&&e.getAttribute(t)||n},ci=function(e,t){return(e=e.split(",")).forEach(t)||e},cn=function(e){return Math.round(e*1e5)/1e5||0},dn=function(e){return Math.round(e*1e7)/1e7||0},ra=function(e,t){var n=t.charAt(0),i=parseFloat(t.substr(2));return e=parseFloat(e),n==="+"?e+i:n==="-"?e-i:n==="*"?e*i:e/i},qD=function(e,t){for(var n=t.length,i=0;e.indexOf(t[i])<0&&++i<n;);return i<n},Zu=function(){var e=hs.length,t=hs.slice(0),n,i;for(Ff={},hs.length=0,n=0;n<e;n++)i=t[n],i&&i._lazy&&(i.render(i._lazy[0],i._lazy[1],!0)._lazy=0)},rm=function(e){return!!(e._initted||e._startAt||e.add)},lb=function(e,t,n,i){hs.length&&!Dn&&Zu(),e.render(t,n,!!(Dn&&t<0&&rm(e))),hs.length&&!Dn&&Zu()},ub=function(e){var t=parseFloat(e);return(t||t===0)&&(e+"").match(ib).length<2?t:En(e)?e.trim():e},hb=function(e){return e},Ri=function(e,t){for(var n in t)n in e||(e[n]=t[n]);return e},YD=function(e){return function(t,n){for(var i in n)i in t||i==="duration"&&e||i==="ease"||(t[i]=n[i])}},Ma=function(e,t){for(var n in t)e[n]=t[n];return e},ax=function s(e,t){for(var n in t)n!=="__proto__"&&n!=="constructor"&&n!=="prototype"&&(e[n]=pr(t[n])?s(e[n]||(e[n]={}),t[n]):t[n]);return e},Ku=function(e,t){var n={},i;for(i in e)i in t||(n[i]=e[i]);return n},hc=function(e){var t=e.parent||Zt,n=e.keyframes?YD(Hn(e.keyframes)):Ri;if(ai(e.inherit))for(;t;)n(e,t.vars.defaults),t=t.parent||t._dp;return e},ZD=function(e,t){for(var n=e.length,i=n===t.length;i&&n--&&e[n]===t[n];);return n<0},db=function(e,t,n,i,r){var o=e[i],a;if(r)for(a=t[r];o&&o[r]>a;)o=o._prev;return o?(t._next=o._next,o._next=t):(t._next=e[n],e[n]=t),t._next?t._next._prev=t:e[i]=t,t._prev=o,t.parent=t._dp=e,t},jh=function(e,t,n,i){n===void 0&&(n="_first"),i===void 0&&(i="_last");var r=t._prev,o=t._next;r?r._next=o:e[n]===t&&(e[n]=o),o?o._prev=r:e[i]===t&&(e[i]=r),t._next=t._prev=t.parent=null},gs=function(e,t){e.parent&&(!t||e.parent.autoRemoveChildren)&&e.parent.remove&&e.parent.remove(e),e._act=0},oo=function(e,t){if(e&&(!t||t._end>e._dur||t._start<0))for(var n=e;n;)n._dirty=1,n=n.parent;return e},KD=function(e){for(var t=e.parent;t&&t.parent;)t._dirty=1,t.totalDuration(),t=t.parent;return e},Bf=function(e,t,n,i){return e._startAt&&(Dn?e._startAt.revert(tu):e.vars.immediateRender&&!e.vars.autoRevert||e._startAt.render(t,!0,i))},JD=function s(e){return!e||e._ts&&s(e.parent)},cx=function(e){return e._repeat?ba(e._tTime,e=e.duration()+e._rDelay)*e:0},ba=function(e,t){var n=Math.floor(e=dn(e/t));return e&&n===e?n-1:n},Ju=function(e,t){return(e-t._start)*t._ts+(t._ts>=0?0:t._dirty?t.totalDuration():t._tDur)},$h=function(e){return e._end=dn(e._start+(e._tDur/Math.abs(e._ts||e._rts||kn)||0))},qh=function(e,t){var n=e._dp;return n&&n.smoothChildTiming&&e._ts&&(e._start=dn(n._time-(e._ts>0?t/e._ts:((e._dirty?e.totalDuration():e._tDur)-t)/-e._ts)),$h(e),n._dirty||oo(n,e)),e},fb=function(e,t){var n;if((t._time||!t._dur&&t._initted||t._start<e._time&&(t._dur||!t.add))&&(n=Ju(e.rawTime(),t),(!t._dur||Kc(0,t.totalDuration(),n)-t._tTime>kn)&&t.render(n,!0)),oo(e,t)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(n=e;n._dp;)n.rawTime()>=0&&n.totalTime(n._tTime),n=n._dp;e._zTime=-1e-8}},ar=function(e,t,n,i){return t.parent&&gs(t),t._start=dn((Vr(n)?n:n||e!==Zt?Ii(e,n,t):e._time)+t._delay),t._end=dn(t._start+(t.totalDuration()/Math.abs(t.timeScale())||0)),db(e,t,"_first","_last",e._sort?"_start":0),zf(t)||(e._recent=t),i||fb(e,t),e._ts<0&&qh(e,e._tTime),e},pb=function(e,t){return(Ci.ScrollTrigger||em("scrollTrigger",t))&&Ci.ScrollTrigger.create(t,e)},mb=function(e,t,n,i,r){if(om(e,t,r),!e._initted)return 1;if(!n&&e._pt&&!Dn&&(e._dur&&e.vars.lazy!==!1||!e._dur&&e.vars.lazy)&&ab!==Mi.frame)return hs.push(e),e._lazy=[r,i],1},QD=function s(e){var t=e.parent;return t&&t._ts&&t._initted&&!t._lock&&(t.rawTime()<0||s(t))},zf=function(e){var t=e.data;return t==="isFromStart"||t==="isStart"},eL=function(e,t,n,i){var r=e.ratio,o=t<0||!t&&(!e._start&&QD(e)&&!(!e._initted&&zf(e))||(e._ts<0||e._dp._ts<0)&&!zf(e))?0:1,a=e._rDelay,c=0,l,u,h;if(a&&e._repeat&&(c=Kc(0,e._tDur,t),u=ba(c,a),e._yoyo&&u&1&&(o=1-o),u!==ba(e._tTime,a)&&(r=1-o,e.vars.repeatRefresh&&e._initted&&e.invalidate())),o!==r||Dn||i||e._zTime===kn||!t&&e._zTime){if(!e._initted&&mb(e,t,i,n,c))return;for(h=e._zTime,e._zTime=t||(n?kn:0),n||(n=t&&!h),e.ratio=o,e._from&&(o=1-o),e._time=0,e._tTime=c,l=e._pt;l;)l.r(o,l.d),l=l._next;t<0&&Bf(e,t,n,!0),e._onUpdate&&!n&&Ti(e,"onUpdate"),c&&e._repeat&&!n&&e.parent&&Ti(e,"onRepeat"),(t>=e._tDur||t<0)&&e.ratio===o&&(o&&gs(e,1),!n&&!Dn&&(Ti(e,o?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=t)},tL=function(e,t,n){var i;if(n>t)for(i=e._first;i&&i._start<=n;){if(i.data==="isPause"&&i._start>t)return i;i=i._next}else for(i=e._last;i&&i._start>=n;){if(i.data==="isPause"&&i._start<t)return i;i=i._prev}},Sa=function(e,t,n,i){var r=e._repeat,o=dn(t)||0,a=e._tTime/e._tDur;return a&&!i&&(e._time*=o/e._dur),e._dur=o,e._tDur=r?r<0?1e10:dn(o*(r+1)+e._rDelay*r):o,a>0&&!i&&qh(e,e._tTime=e._tDur*a),e.parent&&$h(e),n||oo(e.parent,e),e},lx=function(e){return e instanceof Kn?oo(e):Sa(e,e._dur)},nL={_start:0,endTime:Pc,totalDuration:Pc},Ii=function s(e,t,n){var i=e.labels,r=e._recent||nL,o=e.duration()>=hr?r.endTime(!1):e._dur,a,c,l;return En(t)&&(isNaN(t)||t in i)?(c=t.charAt(0),l=t.substr(-1)==="%",a=t.indexOf("="),c==="<"||c===">"?(a>=0&&(t=t.replace(/=/,"")),(c==="<"?r._start:r.endTime(r._repeat>=0))+(parseFloat(t.substr(1))||0)*(l?(a<0?r:n).totalDuration()/100:1)):a<0?(t in i||(i[t]=o),i[t]):(c=parseFloat(t.charAt(a-1)+t.substr(a+1)),l&&n&&(c=c/100*(Hn(n)?n[0]:n).totalDuration()),a>1?s(e,t.substr(0,a-1),n)+c:o+c)):t==null?o:+t},dc=function(e,t,n){var i=Vr(t[1]),r=(i?2:1)+(e<2?0:1),o=t[r],a,c;if(i&&(o.duration=t[1]),o.parent=n,e){for(a=o,c=n;c&&!("immediateRender"in a);)a=c.vars.defaults||{},c=ai(c.vars.inherit)&&c.parent;o.immediateRender=ai(a.immediateRender),e<2?o.runBackwards=1:o.startAt=t[r-1]}return new hn(t[0],o,t[r+1])},bs=function(e,t){return e||e===0?t(e):t},Kc=function(e,t,n){return n<e?e:n>t?t:n},zn=function(e,t){return!En(e)||!(t=XD.exec(e))?"":t[1]},iL=function(e,t,n){return bs(n,function(i){return Kc(e,t,i)})},kf=[].slice,gb=function(e,t){return e&&pr(e)&&"length"in e&&(!t&&!e.length||e.length-1 in e&&pr(e[0]))&&!e.nodeType&&e!==ir},rL=function(e,t,n){return n===void 0&&(n=[]),e.forEach(function(i){var r;return En(i)&&!t||gb(i,1)?(r=n).push.apply(r,Fi(i)):n.push(i)})||n},Fi=function(e,t,n){return Wt&&!t&&Wt.selector?Wt.selector(e):En(e)&&!n&&(Uf||!Ta())?kf.call((t||Qp).querySelectorAll(e),0):Hn(e)?rL(e,n):gb(e)?kf.call(e,0):e?[e]:[]},Vf=function(e){return e=Fi(e)[0]||Rc("Invalid scope")||{},function(t){var n=e.current||e.nativeElement||e;return Fi(t,n.querySelectorAll?n:n===e?Rc("Invalid scope")||Qp.createElement("div"):e)}},_b=function(e){return e.sort(function(){return .5-Math.random()})},vb=function(e){if(sn(e))return e;var t=pr(e)?e:{each:e},n=ao(t.ease),i=t.from||0,r=parseFloat(t.base)||0,o={},a=i>0&&i<1,c=isNaN(i)||a,l=t.axis,u=i,h=i;return En(i)?u=h={center:.5,edges:.5,end:1}[i]||0:!a&&c&&(u=i[0],h=i[1]),function(d,f,p){var _=(p||t).length,g=o[_],m,b,M,x,A,C,D,O,w;if(!g){if(w=t.grid==="auto"?0:(t.grid||[1,hr])[1],!w){for(D=-1e8;D<(D=p[w++].getBoundingClientRect().left)&&w<_;);w<_&&w--}for(g=o[_]=[],m=c?Math.min(w,_)*u-.5:i%w,b=w===hr?0:c?_*h/w-.5:i/w|0,D=0,O=hr,C=0;C<_;C++)M=C%w-m,x=b-(C/w|0),g[C]=A=l?Math.abs(l==="y"?x:M):Q1(M*M+x*x),A>D&&(D=A),A<O&&(O=A);i==="random"&&_b(g),g.max=D-O,g.min=O,g.v=_=(parseFloat(t.amount)||parseFloat(t.each)*(w>_?_-1:l?l==="y"?_/w:w:Math.max(w,_/w))||0)*(i==="edges"?-1:1),g.b=_<0?r-_:r,g.u=zn(t.amount||t.each)||0,n=n&&_<0?Cb(n):n}return _=(g[d]-g.min)/g.max||0,dn(g.b+(n?n(_):_)*g.v)+g.u}},Hf=function(e){var t=Math.pow(10,((e+"").split(".")[1]||"").length);return function(n){var i=dn(Math.round(parseFloat(n)/e)*e*t);return(i-i%1)/t+(Vr(n)?0:zn(n))}},yb=function(e,t){var n=Hn(e),i,r;return!n&&pr(e)&&(i=n=e.radius||hr,e.values?(e=Fi(e.values),(r=!Vr(e[0]))&&(i*=i)):e=Hf(e.increment)),bs(t,n?sn(e)?function(o){return r=e(o),Math.abs(r-o)<=i?r:o}:function(o){for(var a=parseFloat(r?o.x:o),c=parseFloat(r?o.y:0),l=hr,u=0,h=e.length,d,f;h--;)r?(d=e[h].x-a,f=e[h].y-c,d=d*d+f*f):d=Math.abs(e[h]-a),d<l&&(l=d,u=h);return u=!i||l<=i?e[u]:o,r||u===o||Vr(o)?u:u+zn(o)}:Hf(e))},xb=function(e,t,n,i){return bs(Hn(e)?!t:n===!0?!!(n=0):!i,function(){return Hn(e)?e[~~(Math.random()*e.length)]:(n=n||1e-5)&&(i=n<1?Math.pow(10,(n+"").length-2):1)&&Math.floor(Math.round((e-n/2+Math.random()*(t-e+n*.99))/n)*n*i)/i})},sL=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(i){return t.reduce(function(r,o){return o(r)},i)}},oL=function(e,t){return function(n){return e(parseFloat(n))+(t||zn(n))}},aL=function(e,t,n){return bb(e,t,0,1,n)},Mb=function(e,t,n){return bs(n,function(i){return e[~~t(i)]})},cL=function s(e,t,n){var i=t-e;return Hn(e)?Mb(e,s(0,e.length),t):bs(n,function(r){return(i+(r-e)%i)%i+e})},lL=function s(e,t,n){var i=t-e,r=i*2;return Hn(e)?Mb(e,s(0,e.length-1),t):bs(n,function(o){return o=(r+(o-e)%r)%r||0,e+(o>i?r-o:o)})},Ic=function(e){for(var t=0,n="",i,r,o,a;~(i=e.indexOf("random(",t));)o=e.indexOf(")",i),a=e.charAt(i+7)==="[",r=e.substr(i+7,o-i-7).match(a?ib:Nf),n+=e.substr(t,i-t)+xb(a?r:+r[0],a?0:+r[1],+r[2]||1e-5),t=o+1;return n+e.substr(t,e.length-t)},bb=function(e,t,n,i,r){var o=t-e,a=i-n;return bs(r,function(c){return n+((c-e)/o*a||0)})},uL=function s(e,t,n,i){var r=isNaN(e+t)?0:function(f){return(1-f)*e+f*t};if(!r){var o=En(e),a={},c,l,u,h,d;if(n===!0&&(i=1)&&(n=null),o)e={p:e},t={p:t};else if(Hn(e)&&!Hn(t)){for(u=[],h=e.length,d=h-2,l=1;l<h;l++)u.push(s(e[l-1],e[l]));h--,r=function(p){p*=h;var _=Math.min(d,~~p);return u[_](p-_)},n=t}else i||(e=Ma(Hn(e)?[]:{},e));if(!u){for(c in t)sm.call(a,e,c,"get",t[c]);r=function(p){return lm(p,a)||(o?e.p:e)}}}return bs(n,r)},ux=function(e,t,n){var i=e.labels,r=hr,o,a,c;for(o in i)a=i[o]-t,a<0==!!n&&a&&r>(a=Math.abs(a))&&(c=o,r=a);return c},Ti=function(e,t,n){var i=e.vars,r=i[t],o=Wt,a=e._ctx,c,l,u;if(r)return c=i[t+"Params"],l=i.callbackScope||e,n&&hs.length&&Zu(),a&&(Wt=a),u=c?r.apply(l,c):r.call(l),Wt=o,u},Qa=function(e){return gs(e),e.scrollTrigger&&e.scrollTrigger.kill(!!Dn),e.progress()<1&&Ti(e,"onInterrupt"),e},Ko,Sb=[],Tb=function(e){if(e)if(e=!e.name&&e.default||e,Jp()||e.headless){var t=e.name,n=sn(e),i=t&&!n&&e.init?function(){this._props=[]}:e,r={init:Pc,render:lm,add:sm,kill:EL,modifier:wL,rawVars:0},o={targetTest:0,get:0,getSetter:cm,aliases:{},register:0};if(Ta(),e!==i){if(yi[t])return;Ri(i,Ri(Ku(e,r),o)),Ma(i.prototype,Ma(r,Ku(e,o))),yi[i.prop=t]=i,e.targetTest&&(nu.push(i),tm[t]=1),t=(t==="css"?"CSS":t.charAt(0).toUpperCase()+t.substr(1))+"Plugin"}ob(t,i),e.register&&e.register(hi,i,li)}else Sb.push(e)},zt=255,ec={aqua:[0,zt,zt],lime:[0,zt,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,zt],navy:[0,0,128],white:[zt,zt,zt],olive:[128,128,0],yellow:[zt,zt,0],orange:[zt,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[zt,0,0],pink:[zt,192,203],cyan:[0,zt,zt],transparent:[zt,zt,zt,0]},Qd=function(e,t,n){return e+=e<0?1:e>1?-1:0,(e*6<1?t+(n-t)*e*6:e<.5?n:e*3<2?t+(n-t)*(2/3-e)*6:t)*zt+.5|0},wb=function(e,t,n){var i=e?Vr(e)?[e>>16,e>>8&zt,e&zt]:0:ec.black,r,o,a,c,l,u,h,d,f,p;if(!i){if(e.substr(-1)===","&&(e=e.substr(0,e.length-1)),ec[e])i=ec[e];else if(e.charAt(0)==="#"){if(e.length<6&&(r=e.charAt(1),o=e.charAt(2),a=e.charAt(3),e="#"+r+r+o+o+a+a+(e.length===5?e.charAt(4)+e.charAt(4):"")),e.length===9)return i=parseInt(e.substr(1,6),16),[i>>16,i>>8&zt,i&zt,parseInt(e.substr(7),16)/255];e=parseInt(e.substr(1),16),i=[e>>16,e>>8&zt,e&zt]}else if(e.substr(0,3)==="hsl"){if(i=p=e.match(Nf),!t)c=+i[0]%360/360,l=+i[1]/100,u=+i[2]/100,o=u<=.5?u*(l+1):u+l-u*l,r=u*2-o,i.length>3&&(i[3]*=1),i[0]=Qd(c+1/3,r,o),i[1]=Qd(c,r,o),i[2]=Qd(c-1/3,r,o);else if(~e.indexOf("="))return i=e.match(tb),n&&i.length<4&&(i[3]=1),i}else i=e.match(Nf)||ec.transparent;i=i.map(Number)}return t&&!p&&(r=i[0]/zt,o=i[1]/zt,a=i[2]/zt,h=Math.max(r,o,a),d=Math.min(r,o,a),u=(h+d)/2,h===d?c=l=0:(f=h-d,l=u>.5?f/(2-h-d):f/(h+d),c=h===r?(o-a)/f+(o<a?6:0):h===o?(a-r)/f+2:(r-o)/f+4,c*=60),i[0]=~~(c+.5),i[1]=~~(l*100+.5),i[2]=~~(u*100+.5)),n&&i.length<4&&(i[3]=1),i},Eb=function(e){var t=[],n=[],i=-1;return e.split(ds).forEach(function(r){var o=r.match(Zo)||[];t.push.apply(t,o),n.push(i+=o.length+1)}),t.c=n,t},hx=function(e,t,n){var i="",r=(e+i).match(ds),o=t?"hsla(":"rgba(",a=0,c,l,u,h;if(!r)return e;if(r=r.map(function(d){return(d=wb(d,t,1))&&o+(t?d[0]+","+d[1]+"%,"+d[2]+"%,"+d[3]:d.join(","))+")"}),n&&(u=Eb(e),c=n.c,c.join(i)!==u.c.join(i)))for(l=e.replace(ds,"1").split(Zo),h=l.length-1;a<h;a++)i+=l[a]+(~c.indexOf(a)?r.shift()||o+"0,0,0,0)":(u.length?u:r.length?r:n).shift());if(!l)for(l=e.split(ds),h=l.length-1;a<h;a++)i+=l[a]+r[a];return i+l[h]},ds=function(){var s="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",e;for(e in ec)s+="|"+e+"\\b";return new RegExp(s+")","gi")}(),hL=/hsl[a]?\(/,Ab=function(e){var t=e.join(" "),n;if(ds.lastIndex=0,ds.test(t))return n=hL.test(t),e[1]=hx(e[1],n),e[0]=hx(e[0],n,Eb(e[1])),!0},Dc,Mi=function(){var s=Date.now,e=500,t=33,n=s(),i=n,r=1e3/240,o=r,a=[],c,l,u,h,d,f,p=function _(g){var m=s()-i,b=g===!0,M,x,A,C;if((m>e||m<0)&&(n+=m-t),i+=m,A=i-n,M=A-o,(M>0||b)&&(C=++h.frame,d=A-h.time*1e3,h.time=A=A/1e3,o+=M+(M>=r?4:r-M),x=1),b||(c=l(_)),x)for(f=0;f<a.length;f++)a[f](A,d,C,g)};return h={time:0,frame:0,tick:function(){p(!0)},deltaRatio:function(g){return d/(1e3/(g||60))},wake:function(){rb&&(!Uf&&Jp()&&(ir=Uf=window,Qp=ir.document||{},Ci.gsap=hi,(ir.gsapVersions||(ir.gsapVersions=[])).push(hi.version),sb(Yu||ir.GreenSockGlobals||!ir.gsap&&ir||{}),Sb.forEach(Tb)),u=typeof requestAnimationFrame<"u"&&requestAnimationFrame,c&&h.sleep(),l=u||function(g){return setTimeout(g,o-h.time*1e3+1|0)},Dc=1,p(2))},sleep:function(){(u?cancelAnimationFrame:clearTimeout)(c),Dc=0,l=Pc},lagSmoothing:function(g,m){e=g||1/0,t=Math.min(m||33,e)},fps:function(g){r=1e3/(g||240),o=h.time*1e3+r},add:function(g,m,b){var M=m?function(x,A,C,D){g(x,A,C,D),h.remove(M)}:g;return h.remove(g),a[b?"unshift":"push"](M),Ta(),M},remove:function(g,m){~(m=a.indexOf(g))&&a.splice(m,1)&&f>=m&&f--},_listeners:a},h}(),Ta=function(){return!Dc&&Mi.wake()},St={},dL=/^[\d.\-M][\d.\-,\s]/,fL=/["']/g,pL=function(e){for(var t={},n=e.substr(1,e.length-3).split(":"),i=n[0],r=1,o=n.length,a,c,l;r<o;r++)c=n[r],a=r!==o-1?c.lastIndexOf(","):c.length,l=c.substr(0,a),t[i]=isNaN(l)?l.replace(fL,"").trim():+l,i=c.substr(a+1).trim();return t},mL=function(e){var t=e.indexOf("(")+1,n=e.indexOf(")"),i=e.indexOf("(",t);return e.substring(t,~i&&i<n?e.indexOf(")",n+1):n)},gL=function(e){var t=(e+"").split("("),n=St[t[0]];return n&&t.length>1&&n.config?n.config.apply(null,~e.indexOf("{")?[pL(t[1])]:mL(e).split(",").map(ub)):St._CE&&dL.test(e)?St._CE("",e):n},Cb=function(e){return function(t){return 1-e(1-t)}},Rb=function s(e,t){for(var n=e._first,i;n;)n instanceof Kn?s(n,t):n.vars.yoyoEase&&(!n._yoyo||!n._repeat)&&n._yoyo!==t&&(n.timeline?s(n.timeline,t):(i=n._ease,n._ease=n._yEase,n._yEase=i,n._yoyo=t)),n=n._next},ao=function(e,t){return e&&(sn(e)?e:St[e]||gL(e))||t},wo=function(e,t,n,i){n===void 0&&(n=function(c){return 1-t(1-c)}),i===void 0&&(i=function(c){return c<.5?t(c*2)/2:1-t((1-c)*2)/2});var r={easeIn:t,easeOut:n,easeInOut:i},o;return ci(e,function(a){St[a]=Ci[a]=r,St[o=a.toLowerCase()]=n;for(var c in r)St[o+(c==="easeIn"?".in":c==="easeOut"?".out":".inOut")]=St[a+"."+c]=r[c]}),r},Pb=function(e){return function(t){return t<.5?(1-e(1-t*2))/2:.5+e((t-.5)*2)/2}},ef=function s(e,t,n){var i=t>=1?t:1,r=(n||(e?.3:.45))/(t<1?t:1),o=r/Of*(Math.asin(1/i)||0),a=function(u){return u===1?1:i*Math.pow(2,-10*u)*WD((u-o)*r)+1},c=e==="out"?a:e==="in"?function(l){return 1-a(1-l)}:Pb(a);return r=Of/r,c.config=function(l,u){return s(e,l,u)},c},tf=function s(e,t){t===void 0&&(t=1.70158);var n=function(o){return o?--o*o*((t+1)*o+t)+1:0},i=e==="out"?n:e==="in"?function(r){return 1-n(1-r)}:Pb(n);return i.config=function(r){return s(e,r)},i};ci("Linear,Quad,Cubic,Quart,Quint,Strong",function(s,e){var t=e<5?e+1:e;wo(s+",Power"+(t-1),e?function(n){return Math.pow(n,t)}:function(n){return n},function(n){return 1-Math.pow(1-n,t)},function(n){return n<.5?Math.pow(n*2,t)/2:1-Math.pow((1-n)*2,t)/2})});St.Linear.easeNone=St.none=St.Linear.easeIn;wo("Elastic",ef("in"),ef("out"),ef());(function(s,e){var t=1/e,n=2*t,i=2.5*t,r=function(a){return a<t?s*a*a:a<n?s*Math.pow(a-1.5/e,2)+.75:a<i?s*(a-=2.25/e)*a+.9375:s*Math.pow(a-2.625/e,2)+.984375};wo("Bounce",function(o){return 1-r(1-o)},r)})(7.5625,2.75);wo("Expo",function(s){return Math.pow(2,10*(s-1))*s+s*s*s*s*s*s*(1-s)});wo("Circ",function(s){return-(Q1(1-s*s)-1)});wo("Sine",function(s){return s===1?1:-GD(s*VD)+1});wo("Back",tf("in"),tf("out"),tf());St.SteppedEase=St.steps=Ci.SteppedEase={config:function(e,t){e===void 0&&(e=1);var n=1/e,i=e+(t?0:1),r=t?1:0,o=1-kn;return function(a){return((i*Kc(0,o,a)|0)+r)*n}}};xa.ease=St["quad.out"];ci("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(s){return nm+=s+","+s+"Params,"});var Ib=function(e,t){this.id=HD++,e._gsap=this,this.target=e,this.harness=t,this.get=t?t.get:cb,this.set=t?t.getSetter:cm},Lc=function(){function s(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,Sa(this,+t.duration,1,1),this.data=t.data,Wt&&(this._ctx=Wt,Wt.data.push(this)),Dc||Mi.wake()}var e=s.prototype;return e.delay=function(n){return n||n===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+n-this._delay),this._delay=n,this):this._delay},e.duration=function(n){return arguments.length?this.totalDuration(this._repeat>0?n+(n+this._rDelay)*this._repeat:n):this.totalDuration()&&this._dur},e.totalDuration=function(n){return arguments.length?(this._dirty=0,Sa(this,this._repeat<0?n:(n-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function(n,i){if(Ta(),!arguments.length)return this._tTime;var r=this._dp;if(r&&r.smoothChildTiming&&this._ts){for(qh(this,n),!r._dp||r.parent||fb(r,this);r&&r.parent;)r.parent._time!==r._start+(r._ts>=0?r._tTime/r._ts:(r.totalDuration()-r._tTime)/-r._ts)&&r.totalTime(r._tTime,!0),r=r.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&n<this._tDur||this._ts<0&&n>0||!this._tDur&&!n)&&ar(this._dp,this,this._start-this._delay)}return(this._tTime!==n||!this._dur&&!i||this._initted&&Math.abs(this._zTime)===kn||!n&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=n),lb(this,n,i)),this},e.time=function(n,i){return arguments.length?this.totalTime(Math.min(this.totalDuration(),n+cx(this))%(this._dur+this._rDelay)||(n?this._dur:0),i):this._time},e.totalProgress=function(n,i){return arguments.length?this.totalTime(this.totalDuration()*n,i):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.rawTime()>=0&&this._initted?1:0},e.progress=function(n,i){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-n:n)+cx(this),i):this.duration()?Math.min(1,this._time/this._dur):this.rawTime()>0?1:0},e.iteration=function(n,i){var r=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(n-1)*r,i):this._repeat?ba(this._tTime,r)+1:1},e.timeScale=function(n,i){if(!arguments.length)return this._rts===-1e-8?0:this._rts;if(this._rts===n)return this;var r=this.parent&&this._ts?Ju(this.parent._time,this):this._tTime;return this._rts=+n||0,this._ts=this._ps||n===-1e-8?0:this._rts,this.totalTime(Kc(-Math.abs(this._delay),this.totalDuration(),r),i!==!1),$h(this),KD(this)},e.paused=function(n){return arguments.length?(this._ps!==n&&(this._ps=n,n?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(Ta(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==kn&&(this._tTime-=kn)))),this):this._ps},e.startTime=function(n){if(arguments.length){this._start=n;var i=this.parent||this._dp;return i&&(i._sort||!this.parent)&&ar(i,this,n-this._delay),this}return this._start},e.endTime=function(n){return this._start+(ai(n)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},e.rawTime=function(n){var i=this.parent||this._dp;return i?n&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?Ju(i.rawTime(n),this):this._tTime:this._tTime},e.revert=function(n){n===void 0&&(n=$D);var i=Dn;return Dn=n,rm(this)&&(this.timeline&&this.timeline.revert(n),this.totalTime(-.01,n.suppressEvents)),this.data!=="nested"&&n.kill!==!1&&this.kill(),Dn=i,this},e.globalTime=function(n){for(var i=this,r=arguments.length?n:i.rawTime();i;)r=i._start+r/(Math.abs(i._ts)||1),i=i._dp;return!this.parent&&this._sat?this._sat.globalTime(n):r},e.repeat=function(n){return arguments.length?(this._repeat=n===1/0?-2:n,lx(this)):this._repeat===-2?1/0:this._repeat},e.repeatDelay=function(n){if(arguments.length){var i=this._time;return this._rDelay=n,lx(this),i?this.time(i):this}return this._rDelay},e.yoyo=function(n){return arguments.length?(this._yoyo=n,this):this._yoyo},e.seek=function(n,i){return this.totalTime(Ii(this,n),ai(i))},e.restart=function(n,i){return this.play().totalTime(n?-this._delay:0,ai(i)),this._dur||(this._zTime=-1e-8),this},e.play=function(n,i){return n!=null&&this.seek(n,i),this.reversed(!1).paused(!1)},e.reverse=function(n,i){return n!=null&&this.seek(n||this.totalDuration(),i),this.reversed(!0).paused(!1)},e.pause=function(n,i){return n!=null&&this.seek(n,i),this.paused(!0)},e.resume=function(){return this.paused(!1)},e.reversed=function(n){return arguments.length?(!!n!==this.reversed()&&this.timeScale(-this._rts||(n?-1e-8:0)),this):this._rts<0},e.invalidate=function(){return this._initted=this._act=0,this._zTime=-1e-8,this},e.isActive=function(){var n=this.parent||this._dp,i=this._start,r;return!!(!n||this._ts&&this._initted&&n.isActive()&&(r=n.rawTime(!0))>=i&&r<this.endTime(!0)-kn)},e.eventCallback=function(n,i,r){var o=this.vars;return arguments.length>1?(i?(o[n]=i,r&&(o[n+"Params"]=r),n==="onUpdate"&&(this._onUpdate=i)):delete o[n],this):o[n]},e.then=function(n){var i=this;return new Promise(function(r){var o=sn(n)?n:hb,a=function(){var l=i.then;i.then=null,sn(o)&&(o=o(i))&&(o.then||o===i)&&(i.then=l),r(o),i.then=l};i._initted&&i.totalProgress()===1&&i._ts>=0||!i._tTime&&i._ts<0?a():i._prom=a})},e.kill=function(){Qa(this)},s}();Ri(Lc.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-1e-8,_prom:0,_ps:!1,_rts:1});var Kn=function(s){J1(e,s);function e(n,i){var r;return n===void 0&&(n={}),r=s.call(this,n)||this,r.labels={},r.smoothChildTiming=!!n.smoothChildTiming,r.autoRemoveChildren=!!n.autoRemoveChildren,r._sort=ai(n.sortChildren),Zt&&ar(n.parent||Zt,Tr(r),i),n.reversed&&r.reverse(),n.paused&&r.paused(!0),n.scrollTrigger&&pb(Tr(r),n.scrollTrigger),r}var t=e.prototype;return t.to=function(i,r,o){return dc(0,arguments,this),this},t.from=function(i,r,o){return dc(1,arguments,this),this},t.fromTo=function(i,r,o,a){return dc(2,arguments,this),this},t.set=function(i,r,o){return r.duration=0,r.parent=this,hc(r).repeatDelay||(r.repeat=0),r.immediateRender=!!r.immediateRender,new hn(i,r,Ii(this,o),1),this},t.call=function(i,r,o){return ar(this,hn.delayedCall(0,i,r),o)},t.staggerTo=function(i,r,o,a,c,l,u){return o.duration=r,o.stagger=o.stagger||a,o.onComplete=l,o.onCompleteParams=u,o.parent=this,new hn(i,o,Ii(this,c)),this},t.staggerFrom=function(i,r,o,a,c,l,u){return o.runBackwards=1,hc(o).immediateRender=ai(o.immediateRender),this.staggerTo(i,r,o,a,c,l,u)},t.staggerFromTo=function(i,r,o,a,c,l,u,h){return a.startAt=o,hc(a).immediateRender=ai(a.immediateRender),this.staggerTo(i,r,a,c,l,u,h)},t.render=function(i,r,o){var a=this._time,c=this._dirty?this.totalDuration():this._tDur,l=this._dur,u=i<=0?0:dn(i),h=this._zTime<0!=i<0&&(this._initted||!l),d,f,p,_,g,m,b,M,x,A,C,D;if(this!==Zt&&u>c&&i>=0&&(u=c),u!==this._tTime||o||h){if(a!==this._time&&l&&(u+=this._time-a,i+=this._time-a),d=u,x=this._start,M=this._ts,m=!M,h&&(l||(a=this._zTime),(i||!r)&&(this._zTime=i)),this._repeat){if(C=this._yoyo,g=l+this._rDelay,this._repeat<-1&&i<0)return this.totalTime(g*100+i,r,o);if(d=dn(u%g),u===c?(_=this._repeat,d=l):(A=dn(u/g),_=~~A,_&&_===A&&(d=l,_--),d>l&&(d=l)),A=ba(this._tTime,g),!a&&this._tTime&&A!==_&&this._tTime-A*g-this._dur<=0&&(A=_),C&&_&1&&(d=l-d,D=1),_!==A&&!this._lock){var O=C&&A&1,w=O===(C&&_&1);if(_<A&&(O=!O),a=O?0:u%l?l:u,this._lock=1,this.render(a||(D?0:dn(_*g)),r,!l)._lock=0,this._tTime=u,!r&&this.parent&&Ti(this,"onRepeat"),this.vars.repeatRefresh&&!D&&(this.invalidate()._lock=1),a&&a!==this._time||m!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(l=this._dur,c=this._tDur,w&&(this._lock=2,a=O?l:-1e-4,this.render(a,!0),this.vars.repeatRefresh&&!D&&this.invalidate()),this._lock=0,!this._ts&&!m)return this;Rb(this,D)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(b=tL(this,dn(a),dn(d)),b&&(u-=d-(d=b._start))),this._tTime=u,this._time=d,this._act=!M,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=i,a=0),!a&&u&&!r&&!A&&(Ti(this,"onStart"),this._tTime!==u))return this;if(d>=a&&i>=0)for(f=this._first;f;){if(p=f._next,(f._act||d>=f._start)&&f._ts&&b!==f){if(f.parent!==this)return this.render(i,r,o);if(f.render(f._ts>0?(d-f._start)*f._ts:(f._dirty?f.totalDuration():f._tDur)+(d-f._start)*f._ts,r,o),d!==this._time||!this._ts&&!m){b=0,p&&(u+=this._zTime=-1e-8);break}}f=p}else{f=this._last;for(var E=i<0?i:d;f;){if(p=f._prev,(f._act||E<=f._end)&&f._ts&&b!==f){if(f.parent!==this)return this.render(i,r,o);if(f.render(f._ts>0?(E-f._start)*f._ts:(f._dirty?f.totalDuration():f._tDur)+(E-f._start)*f._ts,r,o||Dn&&rm(f)),d!==this._time||!this._ts&&!m){b=0,p&&(u+=this._zTime=E?-1e-8:kn);break}}f=p}}if(b&&!r&&(this.pause(),b.render(d>=a?0:-1e-8)._zTime=d>=a?1:-1,this._ts))return this._start=x,$h(this),this.render(i,r,o);this._onUpdate&&!r&&Ti(this,"onUpdate",!0),(u===c&&this._tTime>=this.totalDuration()||!u&&a)&&(x===this._start||Math.abs(M)!==Math.abs(this._ts))&&(this._lock||((i||!l)&&(u===c&&this._ts>0||!u&&this._ts<0)&&gs(this,1),!r&&!(i<0&&!a)&&(u||a||!c)&&(Ti(this,u===c&&i>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(u<c&&this.timeScale()>0)&&this._prom())))}return this},t.add=function(i,r){var o=this;if(Vr(r)||(r=Ii(this,r,i)),!(i instanceof Lc)){if(Hn(i))return i.forEach(function(a){return o.add(a,r)}),this;if(En(i))return this.addLabel(i,r);if(sn(i))i=hn.delayedCall(0,i);else return this}return this!==i?ar(this,i,r):this},t.getChildren=function(i,r,o,a){i===void 0&&(i=!0),r===void 0&&(r=!0),o===void 0&&(o=!0),a===void 0&&(a=-1e8);for(var c=[],l=this._first;l;)l._start>=a&&(l instanceof hn?r&&c.push(l):(o&&c.push(l),i&&c.push.apply(c,l.getChildren(!0,r,o)))),l=l._next;return c},t.getById=function(i){for(var r=this.getChildren(1,1,1),o=r.length;o--;)if(r[o].vars.id===i)return r[o]},t.remove=function(i){return En(i)?this.removeLabel(i):sn(i)?this.killTweensOf(i):(i.parent===this&&jh(this,i),i===this._recent&&(this._recent=this._last),oo(this))},t.totalTime=function(i,r){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=dn(Mi.time-(this._ts>0?i/this._ts:(this.totalDuration()-i)/-this._ts))),s.prototype.totalTime.call(this,i,r),this._forcing=0,this):this._tTime},t.addLabel=function(i,r){return this.labels[i]=Ii(this,r),this},t.removeLabel=function(i){return delete this.labels[i],this},t.addPause=function(i,r,o){var a=hn.delayedCall(0,r||Pc,o);return a.data="isPause",this._hasPause=1,ar(this,a,Ii(this,i))},t.removePause=function(i){var r=this._first;for(i=Ii(this,i);r;)r._start===i&&r.data==="isPause"&&gs(r),r=r._next},t.killTweensOf=function(i,r,o){for(var a=this.getTweensOf(i,o),c=a.length;c--;)ss!==a[c]&&a[c].kill(i,r);return this},t.getTweensOf=function(i,r){for(var o=[],a=Fi(i),c=this._first,l=Vr(r),u;c;)c instanceof hn?qD(c._targets,a)&&(l?(!ss||c._initted&&c._ts)&&c.globalTime(0)<=r&&c.globalTime(c.totalDuration())>r:!r||c.isActive())&&o.push(c):(u=c.getTweensOf(a,r)).length&&o.push.apply(o,u),c=c._next;return o},t.tweenTo=function(i,r){r=r||{};var o=this,a=Ii(o,i),c=r,l=c.startAt,u=c.onStart,h=c.onStartParams,d=c.immediateRender,f,p=hn.to(o,Ri({ease:r.ease||"none",lazy:!1,immediateRender:!1,time:a,overwrite:"auto",duration:r.duration||Math.abs((a-(l&&"time"in l?l.time:o._time))/o.timeScale())||kn,onStart:function(){if(o.pause(),!f){var g=r.duration||Math.abs((a-(l&&"time"in l?l.time:o._time))/o.timeScale());p._dur!==g&&Sa(p,g,0,1).render(p._time,!0,!0),f=1}u&&u.apply(p,h||[])}},r));return d?p.render(0):p},t.tweenFromTo=function(i,r,o){return this.tweenTo(r,Ri({startAt:{time:Ii(this,i)}},o))},t.recent=function(){return this._recent},t.nextLabel=function(i){return i===void 0&&(i=this._time),ux(this,Ii(this,i))},t.previousLabel=function(i){return i===void 0&&(i=this._time),ux(this,Ii(this,i),1)},t.currentLabel=function(i){return arguments.length?this.seek(i,!0):this.previousLabel(this._time+kn)},t.shiftChildren=function(i,r,o){o===void 0&&(o=0);for(var a=this._first,c=this.labels,l;a;)a._start>=o&&(a._start+=i,a._end+=i),a=a._next;if(r)for(l in c)c[l]>=o&&(c[l]+=i);return oo(this)},t.invalidate=function(i){var r=this._first;for(this._lock=0;r;)r.invalidate(i),r=r._next;return s.prototype.invalidate.call(this,i)},t.clear=function(i){i===void 0&&(i=!0);for(var r=this._first,o;r;)o=r._next,this.remove(r),r=o;return this._dp&&(this._time=this._tTime=this._pTime=0),i&&(this.labels={}),oo(this)},t.totalDuration=function(i){var r=0,o=this,a=o._last,c=hr,l,u,h;if(arguments.length)return o.timeScale((o._repeat<0?o.duration():o.totalDuration())/(o.reversed()?-i:i));if(o._dirty){for(h=o.parent;a;)l=a._prev,a._dirty&&a.totalDuration(),u=a._start,u>c&&o._sort&&a._ts&&!o._lock?(o._lock=1,ar(o,a,u-a._delay,1)._lock=0):c=u,u<0&&a._ts&&(r-=u,(!h&&!o._dp||h&&h.smoothChildTiming)&&(o._start+=u/o._ts,o._time-=u,o._tTime-=u),o.shiftChildren(-u,!1,-1/0),c=0),a._end>r&&a._ts&&(r=a._end),a=l;Sa(o,o===Zt&&o._time>r?o._time:r,1,1),o._dirty=0}return o._tDur},e.updateRoot=function(i){if(Zt._ts&&(lb(Zt,Ju(i,Zt)),ab=Mi.frame),Mi.frame>=ox){ox+=Ei.autoSleep||120;var r=Zt._first;if((!r||!r._ts)&&Ei.autoSleep&&Mi._listeners.length<2){for(;r&&!r._ts;)r=r._next;r||Mi.sleep()}}},e}(Lc);Ri(Kn.prototype,{_lock:0,_hasPause:0,_forcing:0});var _L=function(e,t,n,i,r,o,a){var c=new li(this._pt,e,t,0,1,Fb,null,r),l=0,u=0,h,d,f,p,_,g,m,b;for(c.b=n,c.e=i,n+="",i+="",(m=~i.indexOf("random("))&&(i=Ic(i)),o&&(b=[n,i],o(b,e,t),n=b[0],i=b[1]),d=n.match(Kd)||[];h=Kd.exec(i);)p=h[0],_=i.substring(l,h.index),f?f=(f+1)%5:_.substr(-5)==="rgba("&&(f=1),p!==d[u++]&&(g=parseFloat(d[u-1])||0,c._pt={_next:c._pt,p:_||u===1?_:",",s:g,c:p.charAt(1)==="="?ra(g,p)-g:parseFloat(p)-g,m:f&&f<4?Math.round:0},l=Kd.lastIndex);return c.c=l<i.length?i.substring(l,i.length):"",c.fp=a,(nb.test(i)||m)&&(c.e=0),this._pt=c,c},sm=function(e,t,n,i,r,o,a,c,l,u){sn(i)&&(i=i(r||0,e,o));var h=e[t],d=n!=="get"?n:sn(h)?l?e[t.indexOf("set")||!sn(e["get"+t.substr(3)])?t:"get"+t.substr(3)](l):e[t]():h,f=sn(h)?l?bL:Nb:am,p;if(En(i)&&(~i.indexOf("random(")&&(i=Ic(i)),i.charAt(1)==="="&&(p=ra(d,i)+(zn(d)||0),(p||p===0)&&(i=p))),!u||d!==i||Gf)return!isNaN(d*i)&&i!==""?(p=new li(this._pt,e,t,+d||0,i-(d||0),typeof h=="boolean"?TL:Ub,0,f),l&&(p.fp=l),a&&p.modifier(a,this,e),this._pt=p):(!h&&!(t in e)&&em(t,i),_L.call(this,e,t,d,i,f,c||Ei.stringFilter,l))},vL=function(e,t,n,i,r){if(sn(e)&&(e=fc(e,r,t,n,i)),!pr(e)||e.style&&e.nodeType||Hn(e)||eb(e))return En(e)?fc(e,r,t,n,i):e;var o={},a;for(a in e)o[a]=fc(e[a],r,t,n,i);return o},Db=function(e,t,n,i,r,o){var a,c,l,u;if(yi[e]&&(a=new yi[e]).init(r,a.rawVars?t[e]:vL(t[e],i,r,o,n),n,i,o)!==!1&&(n._pt=c=new li(n._pt,r,e,0,1,a.render,a,0,a.priority),n!==Ko))for(l=n._ptLookup[n._targets.indexOf(r)],u=a._props.length;u--;)l[a._props[u]]=c;return a},ss,Gf,om=function s(e,t,n){var i=e.vars,r=i.ease,o=i.startAt,a=i.immediateRender,c=i.lazy,l=i.onUpdate,u=i.runBackwards,h=i.yoyoEase,d=i.keyframes,f=i.autoRevert,p=e._dur,_=e._startAt,g=e._targets,m=e.parent,b=m&&m.data==="nested"?m.vars.targets:g,M=e._overwrite==="auto"&&!Zp,x=e.timeline,A,C,D,O,w,E,z,$,j,Y,ee,q,se;if(x&&(!d||!r)&&(r="none"),e._ease=ao(r,xa.ease),e._yEase=h?Cb(ao(h===!0?r:h,xa.ease)):0,h&&e._yoyo&&!e._repeat&&(h=e._yEase,e._yEase=e._ease,e._ease=h),e._from=!x&&!!i.runBackwards,!x||d&&!i.stagger){if($=g[0]?so(g[0]).harness:0,q=$&&i[$.prop],A=Ku(i,tm),_&&(_._zTime<0&&_.progress(1),t<0&&u&&a&&!f?_.render(-1,!0):_.revert(u&&p?tu:jD),_._lazy=0),o){if(gs(e._startAt=hn.set(g,Ri({data:"isStart",overwrite:!1,parent:m,immediateRender:!0,lazy:!_&&ai(c),startAt:null,delay:0,onUpdate:l&&function(){return Ti(e,"onUpdate")},stagger:0},o))),e._startAt._dp=0,e._startAt._sat=e,t<0&&(Dn||!a&&!f)&&e._startAt.revert(tu),a&&p&&t<=0&&n<=0){t&&(e._zTime=t);return}}else if(u&&p&&!_){if(t&&(a=!1),D=Ri({overwrite:!1,data:"isFromStart",lazy:a&&!_&&ai(c),immediateRender:a,stagger:0,parent:m},A),q&&(D[$.prop]=q),gs(e._startAt=hn.set(g,D)),e._startAt._dp=0,e._startAt._sat=e,t<0&&(Dn?e._startAt.revert(tu):e._startAt.render(-1,!0)),e._zTime=t,!a)s(e._startAt,kn,kn);else if(!t)return}for(e._pt=e._ptCache=0,c=p&&ai(c)||c&&!p,C=0;C<g.length;C++){if(w=g[C],z=w._gsap||im(g)[C]._gsap,e._ptLookup[C]=Y={},Ff[z.id]&&hs.length&&Zu(),ee=b===g?C:b.indexOf(w),$&&(j=new $).init(w,q||A,e,ee,b)!==!1&&(e._pt=O=new li(e._pt,w,j.name,0,1,j.render,j,0,j.priority),j._props.forEach(function(J){Y[J]=O}),j.priority&&(E=1)),!$||q)for(D in A)yi[D]&&(j=Db(D,A,e,ee,w,b))?j.priority&&(E=1):Y[D]=O=sm.call(e,w,D,"get",A[D],ee,b,0,i.stringFilter);e._op&&e._op[C]&&e.kill(w,e._op[C]),M&&e._pt&&(ss=e,Zt.killTweensOf(w,Y,e.globalTime(t)),se=!e.parent,ss=0),e._pt&&c&&(Ff[z.id]=1)}E&&Bb(e),e._onInit&&e._onInit(e)}e._onUpdate=l,e._initted=(!e._op||e._pt)&&!se,d&&t<=0&&x.render(hr,!0,!0)},yL=function(e,t,n,i,r,o,a,c){var l=(e._pt&&e._ptCache||(e._ptCache={}))[t],u,h,d,f;if(!l)for(l=e._ptCache[t]=[],d=e._ptLookup,f=e._targets.length;f--;){if(u=d[f][t],u&&u.d&&u.d._pt)for(u=u.d._pt;u&&u.p!==t&&u.fp!==t;)u=u._next;if(!u)return Gf=1,e.vars[t]="+=0",om(e,a),Gf=0,c?Rc(t+" not eligible for reset"):1;l.push(u)}for(f=l.length;f--;)h=l[f],u=h._pt||h,u.s=(i||i===0)&&!r?i:u.s+(i||0)+o*u.c,u.c=n-u.s,h.e&&(h.e=cn(n)+zn(h.e)),h.b&&(h.b=u.s+zn(h.b))},xL=function(e,t){var n=e[0]?so(e[0]).harness:0,i=n&&n.aliases,r,o,a,c;if(!i)return t;r=Ma({},t);for(o in i)if(o in r)for(c=i[o].split(","),a=c.length;a--;)r[c[a]]=r[o];return r},ML=function(e,t,n,i){var r=t.ease||i||"power1.inOut",o,a;if(Hn(t))a=n[e]||(n[e]=[]),t.forEach(function(c,l){return a.push({t:l/(t.length-1)*100,v:c,e:r})});else for(o in t)a=n[o]||(n[o]=[]),o==="ease"||a.push({t:parseFloat(e),v:t[o],e:r})},fc=function(e,t,n,i,r){return sn(e)?e.call(t,n,i,r):En(e)&&~e.indexOf("random(")?Ic(e):e},Lb=nm+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",Ob={};ci(Lb+",id,stagger,delay,duration,paused,scrollTrigger",function(s){return Ob[s]=1});var hn=function(s){J1(e,s);function e(n,i,r,o){var a;typeof i=="number"&&(r.duration=i,i=r,r=null),a=s.call(this,o?i:hc(i))||this;var c=a.vars,l=c.duration,u=c.delay,h=c.immediateRender,d=c.stagger,f=c.overwrite,p=c.keyframes,_=c.defaults,g=c.scrollTrigger,m=c.yoyoEase,b=i.parent||Zt,M=(Hn(n)||eb(n)?Vr(n[0]):"length"in i)?[n]:Fi(n),x,A,C,D,O,w,E,z;if(a._targets=M.length?im(M):Rc("GSAP target "+n+" not found. https://gsap.com",!Ei.nullTargetWarn)||[],a._ptLookup=[],a._overwrite=f,p||d||$l(l)||$l(u)){if(i=a.vars,x=a.timeline=new Kn({data:"nested",defaults:_||{},targets:b&&b.data==="nested"?b.vars.targets:M}),x.kill(),x.parent=x._dp=Tr(a),x._start=0,d||$l(l)||$l(u)){if(D=M.length,E=d&&vb(d),pr(d))for(O in d)~Lb.indexOf(O)&&(z||(z={}),z[O]=d[O]);for(A=0;A<D;A++)C=Ku(i,Ob),C.stagger=0,m&&(C.yoyoEase=m),z&&Ma(C,z),w=M[A],C.duration=+fc(l,Tr(a),A,w,M),C.delay=(+fc(u,Tr(a),A,w,M)||0)-a._delay,!d&&D===1&&C.delay&&(a._delay=u=C.delay,a._start+=u,C.delay=0),x.to(w,C,E?E(A,w,M):0),x._ease=St.none;x.duration()?l=u=0:a.timeline=0}else if(p){hc(Ri(x.vars.defaults,{ease:"none"})),x._ease=ao(p.ease||i.ease||"none");var $=0,j,Y,ee;if(Hn(p))p.forEach(function(q){return x.to(M,q,">")}),x.duration();else{C={};for(O in p)O==="ease"||O==="easeEach"||ML(O,p[O],C,p.easeEach);for(O in C)for(j=C[O].sort(function(q,se){return q.t-se.t}),$=0,A=0;A<j.length;A++)Y=j[A],ee={ease:Y.e,duration:(Y.t-(A?j[A-1].t:0))/100*l},ee[O]=Y.v,x.to(M,ee,$),$+=ee.duration;x.duration()<l&&x.to({},{duration:l-x.duration()})}}l||a.duration(l=x.duration())}else a.timeline=0;return f===!0&&!Zp&&(ss=Tr(a),Zt.killTweensOf(M),ss=0),ar(b,Tr(a),r),i.reversed&&a.reverse(),i.paused&&a.paused(!0),(h||!l&&!p&&a._start===dn(b._time)&&ai(h)&&JD(Tr(a))&&b.data!=="nested")&&(a._tTime=-1e-8,a.render(Math.max(0,-u)||0)),g&&pb(Tr(a),g),a}var t=e.prototype;return t.render=function(i,r,o){var a=this._time,c=this._tDur,l=this._dur,u=i<0,h=i>c-kn&&!u?c:i<kn?0:i,d,f,p,_,g,m,b,M,x;if(!l)eL(this,i,r,o);else if(h!==this._tTime||!i||o||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==u||this._lazy){if(d=h,M=this.timeline,this._repeat){if(_=l+this._rDelay,this._repeat<-1&&u)return this.totalTime(_*100+i,r,o);if(d=dn(h%_),h===c?(p=this._repeat,d=l):(g=dn(h/_),p=~~g,p&&p===g?(d=l,p--):d>l&&(d=l)),m=this._yoyo&&p&1,m&&(x=this._yEase,d=l-d),g=ba(this._tTime,_),d===a&&!o&&this._initted&&p===g)return this._tTime=h,this;p!==g&&(M&&this._yEase&&Rb(M,m),this.vars.repeatRefresh&&!m&&!this._lock&&d!==_&&this._initted&&(this._lock=o=1,this.render(dn(_*p),!0).invalidate()._lock=0))}if(!this._initted){if(mb(this,u?i:d,o,r,h))return this._tTime=0,this;if(a!==this._time&&!(o&&this.vars.repeatRefresh&&p!==g))return this;if(l!==this._dur)return this.render(i,r,o)}if(this._tTime=h,this._time=d,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=b=(x||this._ease)(d/l),this._from&&(this.ratio=b=1-b),!a&&h&&!r&&!g&&(Ti(this,"onStart"),this._tTime!==h))return this;for(f=this._pt;f;)f.r(b,f.d),f=f._next;M&&M.render(i<0?i:M._dur*M._ease(d/this._dur),r,o)||this._startAt&&(this._zTime=i),this._onUpdate&&!r&&(u&&Bf(this,i,r,o),Ti(this,"onUpdate")),this._repeat&&p!==g&&this.vars.onRepeat&&!r&&this.parent&&Ti(this,"onRepeat"),(h===this._tDur||!h)&&this._tTime===h&&(u&&!this._onUpdate&&Bf(this,i,!0,!0),(i||!l)&&(h===this._tDur&&this._ts>0||!h&&this._ts<0)&&gs(this,1),!r&&!(u&&!a)&&(h||a||m)&&(Ti(this,h===c?"onComplete":"onReverseComplete",!0),this._prom&&!(h<c&&this.timeScale()>0)&&this._prom()))}return this},t.targets=function(){return this._targets},t.invalidate=function(i){return(!i||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(i),s.prototype.invalidate.call(this,i)},t.resetTo=function(i,r,o,a,c){Dc||Mi.wake(),this._ts||this.play();var l=Math.min(this._dur,(this._dp._time-this._start)*this._ts),u;return this._initted||om(this,l),u=this._ease(l/this._dur),yL(this,i,r,o,a,u,l,c)?this.resetTo(i,r,o,a,1):(qh(this,0),this.parent||db(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},t.kill=function(i,r){if(r===void 0&&(r="all"),!i&&(!r||r==="all"))return this._lazy=this._pt=0,this.parent?Qa(this):this.scrollTrigger&&this.scrollTrigger.kill(!!Dn),this;if(this.timeline){var o=this.timeline.totalDuration();return this.timeline.killTweensOf(i,r,ss&&ss.vars.overwrite!==!0)._first||Qa(this),this.parent&&o!==this.timeline.totalDuration()&&Sa(this,this._dur*this.timeline._tDur/o,0,1),this}var a=this._targets,c=i?Fi(i):a,l=this._ptLookup,u=this._pt,h,d,f,p,_,g,m;if((!r||r==="all")&&ZD(a,c))return r==="all"&&(this._pt=0),Qa(this);for(h=this._op=this._op||[],r!=="all"&&(En(r)&&(_={},ci(r,function(b){return _[b]=1}),r=_),r=xL(a,r)),m=a.length;m--;)if(~c.indexOf(a[m])){d=l[m],r==="all"?(h[m]=r,p=d,f={}):(f=h[m]=h[m]||{},p=r);for(_ in p)g=d&&d[_],g&&((!("kill"in g.d)||g.d.kill(_)===!0)&&jh(this,g,"_pt"),delete d[_]),f!=="all"&&(f[_]=1)}return this._initted&&!this._pt&&u&&Qa(this),this},e.to=function(i,r){return new e(i,r,arguments[2])},e.from=function(i,r){return dc(1,arguments)},e.delayedCall=function(i,r,o,a){return new e(r,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:i,onComplete:r,onReverseComplete:r,onCompleteParams:o,onReverseCompleteParams:o,callbackScope:a})},e.fromTo=function(i,r,o){return dc(2,arguments)},e.set=function(i,r){return r.duration=0,r.repeatDelay||(r.repeat=0),new e(i,r)},e.killTweensOf=function(i,r,o){return Zt.killTweensOf(i,r,o)},e}(Lc);Ri(hn.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});ci("staggerTo,staggerFrom,staggerFromTo",function(s){hn[s]=function(){var e=new Kn,t=kf.call(arguments,0);return t.splice(s==="staggerFromTo"?5:4,0,0),e[s].apply(e,t)}});var am=function(e,t,n){return e[t]=n},Nb=function(e,t,n){return e[t](n)},bL=function(e,t,n,i){return e[t](i.fp,n)},SL=function(e,t,n){return e.setAttribute(t,n)},cm=function(e,t){return sn(e[t])?Nb:Kp(e[t])&&e.setAttribute?SL:am},Ub=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e6)/1e6,t)},TL=function(e,t){return t.set(t.t,t.p,!!(t.s+t.c*e),t)},Fb=function(e,t){var n=t._pt,i="";if(!e&&t.b)i=t.b;else if(e===1&&t.e)i=t.e;else{for(;n;)i=n.p+(n.m?n.m(n.s+n.c*e):Math.round((n.s+n.c*e)*1e4)/1e4)+i,n=n._next;i+=t.c}t.set(t.t,t.p,i,t)},lm=function(e,t){for(var n=t._pt;n;)n.r(e,n.d),n=n._next},wL=function(e,t,n,i){for(var r=this._pt,o;r;)o=r._next,r.p===i&&r.modifier(e,t,n),r=o},EL=function(e){for(var t=this._pt,n,i;t;)i=t._next,t.p===e&&!t.op||t.op===e?jh(this,t,"_pt"):t.dep||(n=1),t=i;return!n},AL=function(e,t,n,i){i.mSet(e,t,i.m.call(i.tween,n,i.mt),i)},Bb=function(e){for(var t=e._pt,n,i,r,o;t;){for(n=t._next,i=r;i&&i.pr>t.pr;)i=i._next;(t._prev=i?i._prev:o)?t._prev._next=t:r=t,(t._next=i)?i._prev=t:o=t,t=n}e._pt=r},li=function(){function s(t,n,i,r,o,a,c,l,u){this.t=n,this.s=r,this.c=o,this.p=i,this.r=a||Ub,this.d=c||this,this.set=l||am,this.pr=u||0,this._next=t,t&&(t._prev=this)}var e=s.prototype;return e.modifier=function(n,i,r){this.mSet=this.mSet||this.set,this.set=AL,this.m=n,this.mt=r,this.tween=i},s}();ci(nm+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(s){return tm[s]=1});Ci.TweenMax=Ci.TweenLite=hn;Ci.TimelineLite=Ci.TimelineMax=Kn;Zt=new Kn({sortChildren:!1,defaults:xa,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});Ei.stringFilter=Ab;var co=[],iu={},CL=[],dx=0,RL=0,nf=function(e){return(iu[e]||CL).map(function(t){return t()})},Wf=function(){var e=Date.now(),t=[];e-dx>2&&(nf("matchMediaInit"),co.forEach(function(n){var i=n.queries,r=n.conditions,o,a,c,l;for(a in i)o=ir.matchMedia(i[a]).matches,o&&(c=1),o!==r[a]&&(r[a]=o,l=1);l&&(n.revert(),c&&t.push(n))}),nf("matchMediaRevert"),t.forEach(function(n){return n.onMatch(n,function(i){return n.add(null,i)})}),dx=e,nf("matchMedia"))},zb=function(){function s(t,n){this.selector=n&&Vf(n),this.data=[],this._r=[],this.isReverted=!1,this.id=RL++,t&&this.add(t)}var e=s.prototype;return e.add=function(n,i,r){sn(n)&&(r=i,i=n,n=sn);var o=this,a=function(){var l=Wt,u=o.selector,h;return l&&l!==o&&l.data.push(o),r&&(o.selector=Vf(r)),Wt=o,h=i.apply(o,arguments),sn(h)&&o._r.push(h),Wt=l,o.selector=u,o.isReverted=!1,h};return o.last=a,n===sn?a(o,function(c){return o.add(null,c)}):n?o[n]=a:a},e.ignore=function(n){var i=Wt;Wt=null,n(this),Wt=i},e.getTweens=function(){var n=[];return this.data.forEach(function(i){return i instanceof s?n.push.apply(n,i.getTweens()):i instanceof hn&&!(i.parent&&i.parent.data==="nested")&&n.push(i)}),n},e.clear=function(){this._r.length=this.data.length=0},e.kill=function(n,i){var r=this;if(n?function(){for(var a=r.getTweens(),c=r.data.length,l;c--;)l=r.data[c],l.data==="isFlip"&&(l.revert(),l.getChildren(!0,!0,!1).forEach(function(u){return a.splice(a.indexOf(u),1)}));for(a.map(function(u){return{g:u._dur||u._delay||u._sat&&!u._sat.vars.immediateRender?u.globalTime(0):-1/0,t:u}}).sort(function(u,h){return h.g-u.g||-1/0}).forEach(function(u){return u.t.revert(n)}),c=r.data.length;c--;)l=r.data[c],l instanceof Kn?l.data!=="nested"&&(l.scrollTrigger&&l.scrollTrigger.revert(),l.kill()):!(l instanceof hn)&&l.revert&&l.revert(n);r._r.forEach(function(u){return u(n,r)}),r.isReverted=!0}():this.data.forEach(function(a){return a.kill&&a.kill()}),this.clear(),i)for(var o=co.length;o--;)co[o].id===this.id&&co.splice(o,1)},e.revert=function(n){this.kill(n||{})},s}(),PL=function(){function s(t){this.contexts=[],this.scope=t,Wt&&Wt.data.push(this)}var e=s.prototype;return e.add=function(n,i,r){pr(n)||(n={matches:n});var o=new zb(0,r||this.scope),a=o.conditions={},c,l,u;Wt&&!o.selector&&(o.selector=Wt.selector),this.contexts.push(o),i=o.add("onMatch",i),o.queries=n;for(l in n)l==="all"?u=1:(c=ir.matchMedia(n[l]),c&&(co.indexOf(o)<0&&co.push(o),(a[l]=c.matches)&&(u=1),c.addListener?c.addListener(Wf):c.addEventListener("change",Wf)));return u&&i(o,function(h){return o.add(null,h)}),this},e.revert=function(n){this.kill(n||{})},e.kill=function(n){this.contexts.forEach(function(i){return i.kill(n,!0)})},s}(),Qu={registerPlugin:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];t.forEach(function(i){return Tb(i)})},timeline:function(e){return new Kn(e)},getTweensOf:function(e,t){return Zt.getTweensOf(e,t)},getProperty:function(e,t,n,i){En(e)&&(e=Fi(e)[0]);var r=so(e||{}).get,o=n?hb:ub;return n==="native"&&(n=""),e&&(t?o((yi[t]&&yi[t].get||r)(e,t,n,i)):function(a,c,l){return o((yi[a]&&yi[a].get||r)(e,a,c,l))})},quickSetter:function(e,t,n){if(e=Fi(e),e.length>1){var i=e.map(function(u){return hi.quickSetter(u,t,n)}),r=i.length;return function(u){for(var h=r;h--;)i[h](u)}}e=e[0]||{};var o=yi[t],a=so(e),c=a.harness&&(a.harness.aliases||{})[t]||t,l=o?function(u){var h=new o;Ko._pt=0,h.init(e,n?u+n:u,Ko,0,[e]),h.render(1,h),Ko._pt&&lm(1,Ko)}:a.set(e,c);return o?l:function(u){return l(e,c,n?u+n:u,a,1)}},quickTo:function(e,t,n){var i,r=hi.to(e,Ri((i={},i[t]="+=0.1",i.paused=!0,i.stagger=0,i),n||{})),o=function(c,l,u){return r.resetTo(t,c,l,u)};return o.tween=r,o},isTweening:function(e){return Zt.getTweensOf(e,!0).length>0},defaults:function(e){return e&&e.ease&&(e.ease=ao(e.ease,xa.ease)),ax(xa,e||{})},config:function(e){return ax(Ei,e||{})},registerEffect:function(e){var t=e.name,n=e.effect,i=e.plugins,r=e.defaults,o=e.extendTimeline;(i||"").split(",").forEach(function(a){return a&&!yi[a]&&!Ci[a]&&Rc(t+" effect requires "+a+" plugin.")}),Jd[t]=function(a,c,l){return n(Fi(a),Ri(c||{},r),l)},o&&(Kn.prototype[t]=function(a,c,l){return this.add(Jd[t](a,pr(c)?c:(l=c)&&{},this),l)})},registerEase:function(e,t){St[e]=ao(t)},parseEase:function(e,t){return arguments.length?ao(e,t):St},getById:function(e){return Zt.getById(e)},exportRoot:function(e,t){e===void 0&&(e={});var n=new Kn(e),i,r;for(n.smoothChildTiming=ai(e.smoothChildTiming),Zt.remove(n),n._dp=0,n._time=n._tTime=Zt._time,i=Zt._first;i;)r=i._next,(t||!(!i._dur&&i instanceof hn&&i.vars.onComplete===i._targets[0]))&&ar(n,i,i._start-i._delay),i=r;return ar(Zt,n,0),n},context:function(e,t){return e?new zb(e,t):Wt},matchMedia:function(e){return new PL(e)},matchMediaRefresh:function(){return co.forEach(function(e){var t=e.conditions,n,i;for(i in t)t[i]&&(t[i]=!1,n=1);n&&e.revert()})||Wf()},addEventListener:function(e,t){var n=iu[e]||(iu[e]=[]);~n.indexOf(t)||n.push(t)},removeEventListener:function(e,t){var n=iu[e],i=n&&n.indexOf(t);i>=0&&n.splice(i,1)},utils:{wrap:cL,wrapYoyo:lL,distribute:vb,random:xb,snap:yb,normalize:aL,getUnit:zn,clamp:iL,splitColor:wb,toArray:Fi,selector:Vf,mapRange:bb,pipe:sL,unitize:oL,interpolate:uL,shuffle:_b},install:sb,effects:Jd,ticker:Mi,updateRoot:Kn.updateRoot,plugins:yi,globalTimeline:Zt,core:{PropTween:li,globals:ob,Tween:hn,Timeline:Kn,Animation:Lc,getCache:so,_removeLinkedListItem:jh,reverting:function(){return Dn},context:function(e){return e&&Wt&&(Wt.data.push(e),e._ctx=Wt),Wt},suppressOverwrites:function(e){return Zp=e}}};ci("to,from,fromTo,delayedCall,set,killTweensOf",function(s){return Qu[s]=hn[s]});Mi.add(Kn.updateRoot);Ko=Qu.to({},{duration:0});var IL=function(e,t){for(var n=e._pt;n&&n.p!==t&&n.op!==t&&n.fp!==t;)n=n._next;return n},DL=function(e,t){var n=e._targets,i,r,o;for(i in t)for(r=n.length;r--;)o=e._ptLookup[r][i],o&&(o=o.d)&&(o._pt&&(o=IL(o,i)),o&&o.modifier&&o.modifier(t[i],e,n[r],i))},rf=function(e,t){return{name:e,headless:1,rawVars:1,init:function(i,r,o){o._onInit=function(a){var c,l;if(En(r)&&(c={},ci(r,function(u){return c[u]=1}),r=c),t){c={};for(l in r)c[l]=t(r[l]);r=c}DL(a,r)}}}},hi=Qu.registerPlugin({name:"attr",init:function(e,t,n,i,r){var o,a,c;this.tween=n;for(o in t)c=e.getAttribute(o)||"",a=this.add(e,"setAttribute",(c||0)+"",t[o],i,r,0,0,o),a.op=o,a.b=c,this._props.push(o)},render:function(e,t){for(var n=t._pt;n;)Dn?n.set(n.t,n.p,n.b,n):n.r(e,n.d),n=n._next}},{name:"endArray",headless:1,init:function(e,t){for(var n=t.length;n--;)this.add(e,n,e[n]||0,t[n],0,0,0,0,0,1)}},rf("roundProps",Hf),rf("modifiers"),rf("snap",yb))||Qu;hn.version=Kn.version=hi.version="3.13.0";rb=1;Jp()&&Ta();St.Power0;St.Power1;St.Power2;St.Power3;St.Power4;St.Linear;St.Quad;St.Cubic;St.Quart;St.Quint;St.Strong;St.Elastic;St.Back;St.SteppedEase;St.Bounce;St.Sine;St.Expo;St.Circ;/*!
 * CSSPlugin 3.13.0
 * https://gsap.com
 *
 * Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
*/var fx,os,sa,um,Ys,px,hm,LL=function(){return typeof window<"u"},Hr={},Hs=180/Math.PI,oa=Math.PI/180,Xo=Math.atan2,mx=1e8,dm=/([A-Z])/g,OL=/(left|right|width|margin|padding|x)/i,NL=/[\s,\(]\S/,lr={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},Xf=function(e,t){return t.set(t.t,t.p,Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},UL=function(e,t){return t.set(t.t,t.p,e===1?t.e:Math.round((t.s+t.c*e)*1e4)/1e4+t.u,t)},FL=function(e,t){return t.set(t.t,t.p,e?Math.round((t.s+t.c*e)*1e4)/1e4+t.u:t.b,t)},BL=function(e,t){var n=t.s+t.c*e;t.set(t.t,t.p,~~(n+(n<0?-.5:.5))+t.u,t)},kb=function(e,t){return t.set(t.t,t.p,e?t.e:t.b,t)},Vb=function(e,t){return t.set(t.t,t.p,e!==1?t.b:t.e,t)},zL=function(e,t,n){return e.style[t]=n},kL=function(e,t,n){return e.style.setProperty(t,n)},VL=function(e,t,n){return e._gsap[t]=n},HL=function(e,t,n){return e._gsap.scaleX=e._gsap.scaleY=n},GL=function(e,t,n,i,r){var o=e._gsap;o.scaleX=o.scaleY=n,o.renderTransform(r,o)},WL=function(e,t,n,i,r){var o=e._gsap;o[t]=n,o.renderTransform(r,o)},Qt="transform",ui=Qt+"Origin",XL=function s(e,t){var n=this,i=this.target,r=i.style,o=i._gsap;if(e in Hr&&r){if(this.tfm=this.tfm||{},e!=="transform")e=lr[e]||e,~e.indexOf(",")?e.split(",").forEach(function(a){return n.tfm[a]=wr(i,a)}):this.tfm[e]=o.x?o[e]:wr(i,e),e===ui&&(this.tfm.zOrigin=o.zOrigin);else return lr.transform.split(",").forEach(function(a){return s.call(n,a,t)});if(this.props.indexOf(Qt)>=0)return;o.svg&&(this.svgo=i.getAttribute("data-svg-origin"),this.props.push(ui,t,"")),e=Qt}(r||t)&&this.props.push(e,t,r[e])},Hb=function(e){e.translate&&(e.removeProperty("translate"),e.removeProperty("scale"),e.removeProperty("rotate"))},jL=function(){var e=this.props,t=this.target,n=t.style,i=t._gsap,r,o;for(r=0;r<e.length;r+=3)e[r+1]?e[r+1]===2?t[e[r]](e[r+2]):t[e[r]]=e[r+2]:e[r+2]?n[e[r]]=e[r+2]:n.removeProperty(e[r].substr(0,2)==="--"?e[r]:e[r].replace(dm,"-$1").toLowerCase());if(this.tfm){for(o in this.tfm)i[o]=this.tfm[o];i.svg&&(i.renderTransform(),t.setAttribute("data-svg-origin",this.svgo||"")),r=hm(),(!r||!r.isStart)&&!n[Qt]&&(Hb(n),i.zOrigin&&n[ui]&&(n[ui]+=" "+i.zOrigin+"px",i.zOrigin=0,i.renderTransform()),i.uncache=1)}},Gb=function(e,t){var n={target:e,props:[],revert:jL,save:XL};return e._gsap||hi.core.getCache(e),t&&e.style&&e.nodeType&&t.split(",").forEach(function(i){return n.save(i)}),n},Wb,jf=function(e,t){var n=os.createElementNS?os.createElementNS((t||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):os.createElement(e);return n&&n.style?n:os.createElement(e)},Bi=function s(e,t,n){var i=getComputedStyle(e);return i[t]||i.getPropertyValue(t.replace(dm,"-$1").toLowerCase())||i.getPropertyValue(t)||!n&&s(e,wa(t)||t,1)||""},gx="O,Moz,ms,Ms,Webkit".split(","),wa=function(e,t,n){var i=t||Ys,r=i.style,o=5;if(e in r&&!n)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);o--&&!(gx[o]+e in r););return o<0?null:(o===3?"ms":o>=0?gx[o]:"")+e},$f=function(){LL()&&window.document&&(fx=window,os=fx.document,sa=os.documentElement,Ys=jf("div")||{style:{}},jf("div"),Qt=wa(Qt),ui=Qt+"Origin",Ys.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",Wb=!!wa("perspective"),hm=hi.core.reverting,um=1)},_x=function(e){var t=e.ownerSVGElement,n=jf("svg",t&&t.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),i=e.cloneNode(!0),r;i.style.display="block",n.appendChild(i),sa.appendChild(n);try{r=i.getBBox()}catch{}return n.removeChild(i),sa.removeChild(n),r},vx=function(e,t){for(var n=t.length;n--;)if(e.hasAttribute(t[n]))return e.getAttribute(t[n])},Xb=function(e){var t,n;try{t=e.getBBox()}catch{t=_x(e),n=1}return t&&(t.width||t.height)||n||(t=_x(e)),t&&!t.width&&!t.x&&!t.y?{x:+vx(e,["x","cx","x1"])||0,y:+vx(e,["y","cy","y1"])||0,width:0,height:0}:t},jb=function(e){return!!(e.getCTM&&(!e.parentNode||e.ownerSVGElement)&&Xb(e))},vo=function(e,t){if(t){var n=e.style,i;t in Hr&&t!==ui&&(t=Qt),n.removeProperty?(i=t.substr(0,2),(i==="ms"||t.substr(0,6)==="webkit")&&(t="-"+t),n.removeProperty(i==="--"?t:t.replace(dm,"-$1").toLowerCase())):n.removeAttribute(t)}},as=function(e,t,n,i,r,o){var a=new li(e._pt,t,n,0,1,o?Vb:kb);return e._pt=a,a.b=i,a.e=r,e._props.push(n),a},yx={deg:1,rad:1,turn:1},$L={grid:1,flex:1},_s=function s(e,t,n,i){var r=parseFloat(n)||0,o=(n+"").trim().substr((r+"").length)||"px",a=Ys.style,c=OL.test(t),l=e.tagName.toLowerCase()==="svg",u=(l?"client":"offset")+(c?"Width":"Height"),h=100,d=i==="px",f=i==="%",p,_,g,m;if(i===o||!r||yx[i]||yx[o])return r;if(o!=="px"&&!d&&(r=s(e,t,n,"px")),m=e.getCTM&&jb(e),(f||o==="%")&&(Hr[t]||~t.indexOf("adius")))return p=m?e.getBBox()[c?"width":"height"]:e[u],cn(f?r/p*h:r/100*p);if(a[c?"width":"height"]=h+(d?o:i),_=i!=="rem"&&~t.indexOf("adius")||i==="em"&&e.appendChild&&!l?e:e.parentNode,m&&(_=(e.ownerSVGElement||{}).parentNode),(!_||_===os||!_.appendChild)&&(_=os.body),g=_._gsap,g&&f&&g.width&&c&&g.time===Mi.time&&!g.uncache)return cn(r/g.width*h);if(f&&(t==="height"||t==="width")){var b=e.style[t];e.style[t]=h+i,p=e[u],b?e.style[t]=b:vo(e,t)}else(f||o==="%")&&!$L[Bi(_,"display")]&&(a.position=Bi(e,"position")),_===e&&(a.position="static"),_.appendChild(Ys),p=Ys[u],_.removeChild(Ys),a.position="absolute";return c&&f&&(g=so(_),g.time=Mi.time,g.width=_[u]),cn(d?p*r/h:p&&r?h/p*r:0)},wr=function(e,t,n,i){var r;return um||$f(),t in lr&&t!=="transform"&&(t=lr[t],~t.indexOf(",")&&(t=t.split(",")[0])),Hr[t]&&t!=="transform"?(r=Nc(e,i),r=t!=="transformOrigin"?r[t]:r.svg?r.origin:th(Bi(e,ui))+" "+r.zOrigin+"px"):(r=e.style[t],(!r||r==="auto"||i||~(r+"").indexOf("calc("))&&(r=eh[t]&&eh[t](e,t,n)||Bi(e,t)||cb(e,t)||(t==="opacity"?1:0))),n&&!~(r+"").trim().indexOf(" ")?_s(e,t,r,n)+n:r},qL=function(e,t,n,i){if(!n||n==="none"){var r=wa(t,e,1),o=r&&Bi(e,r,1);o&&o!==n?(t=r,n=o):t==="borderColor"&&(n=Bi(e,"borderTopColor"))}var a=new li(this._pt,e.style,t,0,1,Fb),c=0,l=0,u,h,d,f,p,_,g,m,b,M,x,A;if(a.b=n,a.e=i,n+="",i+="",i.substring(0,6)==="var(--"&&(i=Bi(e,i.substring(4,i.indexOf(")")))),i==="auto"&&(_=e.style[t],e.style[t]=i,i=Bi(e,t)||i,_?e.style[t]=_:vo(e,t)),u=[n,i],Ab(u),n=u[0],i=u[1],d=n.match(Zo)||[],A=i.match(Zo)||[],A.length){for(;h=Zo.exec(i);)g=h[0],b=i.substring(c,h.index),p?p=(p+1)%5:(b.substr(-5)==="rgba("||b.substr(-5)==="hsla(")&&(p=1),g!==(_=d[l++]||"")&&(f=parseFloat(_)||0,x=_.substr((f+"").length),g.charAt(1)==="="&&(g=ra(f,g)+x),m=parseFloat(g),M=g.substr((m+"").length),c=Zo.lastIndex-M.length,M||(M=M||Ei.units[t]||x,c===i.length&&(i+=M,a.e+=M)),x!==M&&(f=_s(e,t,_,M)||0),a._pt={_next:a._pt,p:b||l===1?b:",",s:f,c:m-f,m:p&&p<4||t==="zIndex"?Math.round:0});a.c=c<i.length?i.substring(c,i.length):""}else a.r=t==="display"&&i==="none"?Vb:kb;return nb.test(i)&&(a.e=0),this._pt=a,a},xx={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},YL=function(e){var t=e.split(" "),n=t[0],i=t[1]||"50%";return(n==="top"||n==="bottom"||i==="left"||i==="right")&&(e=n,n=i,i=e),t[0]=xx[n]||n,t[1]=xx[i]||i,t.join(" ")},ZL=function(e,t){if(t.tween&&t.tween._time===t.tween._dur){var n=t.t,i=n.style,r=t.u,o=n._gsap,a,c,l;if(r==="all"||r===!0)i.cssText="",c=1;else for(r=r.split(","),l=r.length;--l>-1;)a=r[l],Hr[a]&&(c=1,a=a==="transformOrigin"?ui:Qt),vo(n,a);c&&(vo(n,Qt),o&&(o.svg&&n.removeAttribute("transform"),i.scale=i.rotate=i.translate="none",Nc(n,1),o.uncache=1,Hb(i)))}},eh={clearProps:function(e,t,n,i,r){if(r.data!=="isFromStart"){var o=e._pt=new li(e._pt,t,n,0,0,ZL);return o.u=i,o.pr=-10,o.tween=r,e._props.push(n),1}}},Oc=[1,0,0,1,0,0],$b={},qb=function(e){return e==="matrix(1, 0, 0, 1, 0, 0)"||e==="none"||!e},Mx=function(e){var t=Bi(e,Qt);return qb(t)?Oc:t.substr(7).match(tb).map(cn)},fm=function(e,t){var n=e._gsap||so(e),i=e.style,r=Mx(e),o,a,c,l;return n.svg&&e.getAttribute("transform")?(c=e.transform.baseVal.consolidate().matrix,r=[c.a,c.b,c.c,c.d,c.e,c.f],r.join(",")==="1,0,0,1,0,0"?Oc:r):(r===Oc&&!e.offsetParent&&e!==sa&&!n.svg&&(c=i.display,i.display="block",o=e.parentNode,(!o||!e.offsetParent&&!e.getBoundingClientRect().width)&&(l=1,a=e.nextElementSibling,sa.appendChild(e)),r=Mx(e),c?i.display=c:vo(e,"display"),l&&(a?o.insertBefore(e,a):o?o.appendChild(e):sa.removeChild(e))),t&&r.length>6?[r[0],r[1],r[4],r[5],r[12],r[13]]:r)},qf=function(e,t,n,i,r,o){var a=e._gsap,c=r||fm(e,!0),l=a.xOrigin||0,u=a.yOrigin||0,h=a.xOffset||0,d=a.yOffset||0,f=c[0],p=c[1],_=c[2],g=c[3],m=c[4],b=c[5],M=t.split(" "),x=parseFloat(M[0])||0,A=parseFloat(M[1])||0,C,D,O,w;n?c!==Oc&&(D=f*g-p*_)&&(O=x*(g/D)+A*(-_/D)+(_*b-g*m)/D,w=x*(-p/D)+A*(f/D)-(f*b-p*m)/D,x=O,A=w):(C=Xb(e),x=C.x+(~M[0].indexOf("%")?x/100*C.width:x),A=C.y+(~(M[1]||M[0]).indexOf("%")?A/100*C.height:A)),i||i!==!1&&a.smooth?(m=x-l,b=A-u,a.xOffset=h+(m*f+b*_)-m,a.yOffset=d+(m*p+b*g)-b):a.xOffset=a.yOffset=0,a.xOrigin=x,a.yOrigin=A,a.smooth=!!i,a.origin=t,a.originIsAbsolute=!!n,e.style[ui]="0px 0px",o&&(as(o,a,"xOrigin",l,x),as(o,a,"yOrigin",u,A),as(o,a,"xOffset",h,a.xOffset),as(o,a,"yOffset",d,a.yOffset)),e.setAttribute("data-svg-origin",x+" "+A)},Nc=function(e,t){var n=e._gsap||new Ib(e);if("x"in n&&!t&&!n.uncache)return n;var i=e.style,r=n.scaleX<0,o="px",a="deg",c=getComputedStyle(e),l=Bi(e,ui)||"0",u,h,d,f,p,_,g,m,b,M,x,A,C,D,O,w,E,z,$,j,Y,ee,q,se,J,ge,xe,Ae,He,lt,Z,ce;return u=h=d=_=g=m=b=M=x=0,f=p=1,n.svg=!!(e.getCTM&&jb(e)),c.translate&&((c.translate!=="none"||c.scale!=="none"||c.rotate!=="none")&&(i[Qt]=(c.translate!=="none"?"translate3d("+(c.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+(c.rotate!=="none"?"rotate("+c.rotate+") ":"")+(c.scale!=="none"?"scale("+c.scale.split(" ").join(",")+") ":"")+(c[Qt]!=="none"?c[Qt]:"")),i.scale=i.rotate=i.translate="none"),D=fm(e,n.svg),n.svg&&(n.uncache?(J=e.getBBox(),l=n.xOrigin-J.x+"px "+(n.yOrigin-J.y)+"px",se=""):se=!t&&e.getAttribute("data-svg-origin"),qf(e,se||l,!!se||n.originIsAbsolute,n.smooth!==!1,D)),A=n.xOrigin||0,C=n.yOrigin||0,D!==Oc&&(z=D[0],$=D[1],j=D[2],Y=D[3],u=ee=D[4],h=q=D[5],D.length===6?(f=Math.sqrt(z*z+$*$),p=Math.sqrt(Y*Y+j*j),_=z||$?Xo($,z)*Hs:0,b=j||Y?Xo(j,Y)*Hs+_:0,b&&(p*=Math.abs(Math.cos(b*oa))),n.svg&&(u-=A-(A*z+C*j),h-=C-(A*$+C*Y))):(ce=D[6],lt=D[7],xe=D[8],Ae=D[9],He=D[10],Z=D[11],u=D[12],h=D[13],d=D[14],O=Xo(ce,He),g=O*Hs,O&&(w=Math.cos(-O),E=Math.sin(-O),se=ee*w+xe*E,J=q*w+Ae*E,ge=ce*w+He*E,xe=ee*-E+xe*w,Ae=q*-E+Ae*w,He=ce*-E+He*w,Z=lt*-E+Z*w,ee=se,q=J,ce=ge),O=Xo(-j,He),m=O*Hs,O&&(w=Math.cos(-O),E=Math.sin(-O),se=z*w-xe*E,J=$*w-Ae*E,ge=j*w-He*E,Z=Y*E+Z*w,z=se,$=J,j=ge),O=Xo($,z),_=O*Hs,O&&(w=Math.cos(O),E=Math.sin(O),se=z*w+$*E,J=ee*w+q*E,$=$*w-z*E,q=q*w-ee*E,z=se,ee=J),g&&Math.abs(g)+Math.abs(_)>359.9&&(g=_=0,m=180-m),f=cn(Math.sqrt(z*z+$*$+j*j)),p=cn(Math.sqrt(q*q+ce*ce)),O=Xo(ee,q),b=Math.abs(O)>2e-4?O*Hs:0,x=Z?1/(Z<0?-Z:Z):0),n.svg&&(se=e.getAttribute("transform"),n.forceCSS=e.setAttribute("transform","")||!qb(Bi(e,Qt)),se&&e.setAttribute("transform",se))),Math.abs(b)>90&&Math.abs(b)<270&&(r?(f*=-1,b+=_<=0?180:-180,_+=_<=0?180:-180):(p*=-1,b+=b<=0?180:-180)),t=t||n.uncache,n.x=u-((n.xPercent=u&&(!t&&n.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-u)?-50:0)))?e.offsetWidth*n.xPercent/100:0)+o,n.y=h-((n.yPercent=h&&(!t&&n.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-h)?-50:0)))?e.offsetHeight*n.yPercent/100:0)+o,n.z=d+o,n.scaleX=cn(f),n.scaleY=cn(p),n.rotation=cn(_)+a,n.rotationX=cn(g)+a,n.rotationY=cn(m)+a,n.skewX=b+a,n.skewY=M+a,n.transformPerspective=x+o,(n.zOrigin=parseFloat(l.split(" ")[2])||!t&&n.zOrigin||0)&&(i[ui]=th(l)),n.xOffset=n.yOffset=0,n.force3D=Ei.force3D,n.renderTransform=n.svg?JL:Wb?Yb:KL,n.uncache=0,n},th=function(e){return(e=e.split(" "))[0]+" "+e[1]},sf=function(e,t,n){var i=zn(t);return cn(parseFloat(t)+parseFloat(_s(e,"x",n+"px",i)))+i},KL=function(e,t){t.z="0px",t.rotationY=t.rotationX="0deg",t.force3D=0,Yb(e,t)},Bs="0deg",qa="0px",zs=") ",Yb=function(e,t){var n=t||this,i=n.xPercent,r=n.yPercent,o=n.x,a=n.y,c=n.z,l=n.rotation,u=n.rotationY,h=n.rotationX,d=n.skewX,f=n.skewY,p=n.scaleX,_=n.scaleY,g=n.transformPerspective,m=n.force3D,b=n.target,M=n.zOrigin,x="",A=m==="auto"&&e&&e!==1||m===!0;if(M&&(h!==Bs||u!==Bs)){var C=parseFloat(u)*oa,D=Math.sin(C),O=Math.cos(C),w;C=parseFloat(h)*oa,w=Math.cos(C),o=sf(b,o,D*w*-M),a=sf(b,a,-Math.sin(C)*-M),c=sf(b,c,O*w*-M+M)}g!==qa&&(x+="perspective("+g+zs),(i||r)&&(x+="translate("+i+"%, "+r+"%) "),(A||o!==qa||a!==qa||c!==qa)&&(x+=c!==qa||A?"translate3d("+o+", "+a+", "+c+") ":"translate("+o+", "+a+zs),l!==Bs&&(x+="rotate("+l+zs),u!==Bs&&(x+="rotateY("+u+zs),h!==Bs&&(x+="rotateX("+h+zs),(d!==Bs||f!==Bs)&&(x+="skew("+d+", "+f+zs),(p!==1||_!==1)&&(x+="scale("+p+", "+_+zs),b.style[Qt]=x||"translate(0, 0)"},JL=function(e,t){var n=t||this,i=n.xPercent,r=n.yPercent,o=n.x,a=n.y,c=n.rotation,l=n.skewX,u=n.skewY,h=n.scaleX,d=n.scaleY,f=n.target,p=n.xOrigin,_=n.yOrigin,g=n.xOffset,m=n.yOffset,b=n.forceCSS,M=parseFloat(o),x=parseFloat(a),A,C,D,O,w;c=parseFloat(c),l=parseFloat(l),u=parseFloat(u),u&&(u=parseFloat(u),l+=u,c+=u),c||l?(c*=oa,l*=oa,A=Math.cos(c)*h,C=Math.sin(c)*h,D=Math.sin(c-l)*-d,O=Math.cos(c-l)*d,l&&(u*=oa,w=Math.tan(l-u),w=Math.sqrt(1+w*w),D*=w,O*=w,u&&(w=Math.tan(u),w=Math.sqrt(1+w*w),A*=w,C*=w)),A=cn(A),C=cn(C),D=cn(D),O=cn(O)):(A=h,O=d,C=D=0),(M&&!~(o+"").indexOf("px")||x&&!~(a+"").indexOf("px"))&&(M=_s(f,"x",o,"px"),x=_s(f,"y",a,"px")),(p||_||g||m)&&(M=cn(M+p-(p*A+_*D)+g),x=cn(x+_-(p*C+_*O)+m)),(i||r)&&(w=f.getBBox(),M=cn(M+i/100*w.width),x=cn(x+r/100*w.height)),w="matrix("+A+","+C+","+D+","+O+","+M+","+x+")",f.setAttribute("transform",w),b&&(f.style[Qt]=w)},QL=function(e,t,n,i,r){var o=360,a=En(r),c=parseFloat(r)*(a&&~r.indexOf("rad")?Hs:1),l=c-i,u=i+l+"deg",h,d;return a&&(h=r.split("_")[1],h==="short"&&(l%=o,l!==l%(o/2)&&(l+=l<0?o:-360)),h==="cw"&&l<0?l=(l+o*mx)%o-~~(l/o)*o:h==="ccw"&&l>0&&(l=(l-o*mx)%o-~~(l/o)*o)),e._pt=d=new li(e._pt,t,n,i,l,UL),d.e=u,d.u="deg",e._props.push(n),d},bx=function(e,t){for(var n in t)e[n]=t[n];return e},eO=function(e,t,n){var i=bx({},n._gsap),r="perspective,force3D,transformOrigin,svgOrigin",o=n.style,a,c,l,u,h,d,f,p;i.svg?(l=n.getAttribute("transform"),n.setAttribute("transform",""),o[Qt]=t,a=Nc(n,1),vo(n,Qt),n.setAttribute("transform",l)):(l=getComputedStyle(n)[Qt],o[Qt]=t,a=Nc(n,1),o[Qt]=l);for(c in Hr)l=i[c],u=a[c],l!==u&&r.indexOf(c)<0&&(f=zn(l),p=zn(u),h=f!==p?_s(n,c,l,p):parseFloat(l),d=parseFloat(u),e._pt=new li(e._pt,a,c,h,d-h,Xf),e._pt.u=p||0,e._props.push(c));bx(a,i)};ci("padding,margin,Width,Radius",function(s,e){var t="Top",n="Right",i="Bottom",r="Left",o=(e<3?[t,n,i,r]:[t+r,t+n,i+n,i+r]).map(function(a){return e<2?s+a:"border"+a+s});eh[e>1?"border"+s:s]=function(a,c,l,u,h){var d,f;if(arguments.length<4)return d=o.map(function(p){return wr(a,p,l)}),f=d.join(" "),f.split(d[0]).length===5?d[0]:f;d=(u+"").split(" "),f={},o.forEach(function(p,_){return f[p]=d[_]=d[_]||d[(_-1)/2|0]}),a.init(c,f,h)}});var Zb={name:"css",register:$f,targetTest:function(e){return e.style&&e.nodeType},init:function(e,t,n,i,r){var o=this._props,a=e.style,c=n.vars.startAt,l,u,h,d,f,p,_,g,m,b,M,x,A,C,D,O;um||$f(),this.styles=this.styles||Gb(e),O=this.styles.props,this.tween=n;for(_ in t)if(_!=="autoRound"&&(u=t[_],!(yi[_]&&Db(_,t,n,i,e,r)))){if(f=typeof u,p=eh[_],f==="function"&&(u=u.call(n,i,e,r),f=typeof u),f==="string"&&~u.indexOf("random(")&&(u=Ic(u)),p)p(this,e,_,u,n)&&(D=1);else if(_.substr(0,2)==="--")l=(getComputedStyle(e).getPropertyValue(_)+"").trim(),u+="",ds.lastIndex=0,ds.test(l)||(g=zn(l),m=zn(u)),m?g!==m&&(l=_s(e,_,l,m)+m):g&&(u+=g),this.add(a,"setProperty",l,u,i,r,0,0,_),o.push(_),O.push(_,0,a[_]);else if(f!=="undefined"){if(c&&_ in c?(l=typeof c[_]=="function"?c[_].call(n,i,e,r):c[_],En(l)&&~l.indexOf("random(")&&(l=Ic(l)),zn(l+"")||l==="auto"||(l+=Ei.units[_]||zn(wr(e,_))||""),(l+"").charAt(1)==="="&&(l=wr(e,_))):l=wr(e,_),d=parseFloat(l),b=f==="string"&&u.charAt(1)==="="&&u.substr(0,2),b&&(u=u.substr(2)),h=parseFloat(u),_ in lr&&(_==="autoAlpha"&&(d===1&&wr(e,"visibility")==="hidden"&&h&&(d=0),O.push("visibility",0,a.visibility),as(this,a,"visibility",d?"inherit":"hidden",h?"inherit":"hidden",!h)),_!=="scale"&&_!=="transform"&&(_=lr[_],~_.indexOf(",")&&(_=_.split(",")[0]))),M=_ in Hr,M){if(this.styles.save(_),f==="string"&&u.substring(0,6)==="var(--"&&(u=Bi(e,u.substring(4,u.indexOf(")"))),h=parseFloat(u)),x||(A=e._gsap,A.renderTransform&&!t.parseTransform||Nc(e,t.parseTransform),C=t.smoothOrigin!==!1&&A.smooth,x=this._pt=new li(this._pt,a,Qt,0,1,A.renderTransform,A,0,-1),x.dep=1),_==="scale")this._pt=new li(this._pt,A,"scaleY",A.scaleY,(b?ra(A.scaleY,b+h):h)-A.scaleY||0,Xf),this._pt.u=0,o.push("scaleY",_),_+="X";else if(_==="transformOrigin"){O.push(ui,0,a[ui]),u=YL(u),A.svg?qf(e,u,0,C,0,this):(m=parseFloat(u.split(" ")[2])||0,m!==A.zOrigin&&as(this,A,"zOrigin",A.zOrigin,m),as(this,a,_,th(l),th(u)));continue}else if(_==="svgOrigin"){qf(e,u,1,C,0,this);continue}else if(_ in $b){QL(this,A,_,d,b?ra(d,b+u):u);continue}else if(_==="smoothOrigin"){as(this,A,"smooth",A.smooth,u);continue}else if(_==="force3D"){A[_]=u;continue}else if(_==="transform"){eO(this,u,e);continue}}else _ in a||(_=wa(_)||_);if(M||(h||h===0)&&(d||d===0)&&!NL.test(u)&&_ in a)g=(l+"").substr((d+"").length),h||(h=0),m=zn(u)||(_ in Ei.units?Ei.units[_]:g),g!==m&&(d=_s(e,_,l,m)),this._pt=new li(this._pt,M?A:a,_,d,(b?ra(d,b+h):h)-d,!M&&(m==="px"||_==="zIndex")&&t.autoRound!==!1?BL:Xf),this._pt.u=m||0,g!==m&&m!=="%"&&(this._pt.b=l,this._pt.r=FL);else if(_ in a)qL.call(this,e,_,l,b?b+u:u);else if(_ in e)this.add(e,_,l||e[_],b?b+u:u,i,r);else if(_!=="parseTransform"){em(_,u);continue}M||(_ in a?O.push(_,0,a[_]):typeof e[_]=="function"?O.push(_,2,e[_]()):O.push(_,1,l||e[_])),o.push(_)}}D&&Bb(this)},render:function(e,t){if(t.tween._time||!hm())for(var n=t._pt;n;)n.r(e,n.d),n=n._next;else t.styles.revert()},get:wr,aliases:lr,getSetter:function(e,t,n){var i=lr[t];return i&&i.indexOf(",")<0&&(t=i),t in Hr&&t!==ui&&(e._gsap.x||wr(e,"x"))?n&&px===n?t==="scale"?HL:VL:(px=n||{})&&(t==="scale"?GL:WL):e.style&&!Kp(e.style[t])?zL:~t.indexOf("-")?kL:cm(e,t)},core:{_removeProperty:vo,_getMatrix:fm}};hi.utils.checkPrefix=wa;hi.core.getStyleSaver=Gb;(function(s,e,t,n){var i=ci(s+","+e+","+t,function(r){Hr[r]=1});ci(e,function(r){Ei.units[r]="deg",$b[r]=1}),lr[i[13]]=s+","+e,ci(n,function(r){var o=r.split(":");lr[o[1]]=i[o[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");ci("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(s){Ei.units[s]="px"});hi.registerPlugin(Zb);var ru=hi.registerPlugin(Zb)||hi;ru.core.Tween;function Sx(s){return Object.prototype.toString.call(s)==="[object Date]"}function Yf(s,e,t,n){if(typeof t=="number"||Sx(t)){const i=n-t,r=(t-e)/(s.dt||1/60),o=s.opts.stiffness*i,a=s.opts.damping*r,c=(o-a)*s.inv_mass,l=(r+c)*s.dt;return Math.abs(l)<s.opts.precision&&Math.abs(i)<s.opts.precision?n:(s.settled=!1,Sx(t)?new Date(t.getTime()+l):t+l)}else{if(Array.isArray(t))return t.map((i,r)=>Yf(s,e[r],t[r],n[r]));if(typeof t=="object"){const i={};for(const r in t)i[r]=Yf(s,e[r],t[r],n[r]);return i}else throw new Error(`Cannot spring ${typeof t} values`)}}var Zs,Ks,Js,Li,is,Qs,aa,eo,Uc,Er,ca,nh,Kb;const pm=class pm{constructor(e,t={}){pi(this,nh);pi(this,Zs,rr(.15));pi(this,Ks,rr(.8));pi(this,Js,rr(.01));pi(this,Li,rr(void 0));pi(this,is,rr(void 0));pi(this,Qs);pi(this,aa,0);pi(this,eo,1);pi(this,Uc,0);pi(this,Er,null);pi(this,ca,null);dt(this,Li).v=dt(this,is).v=e,typeof t.stiffness=="number"&&(dt(this,Zs).v=ql(t.stiffness,0,1)),typeof t.damping=="number"&&(dt(this,Ks).v=ql(t.damping,0,1)),typeof t.precision=="number"&&(dt(this,Js).v=t.precision)}static of(e,t){const n=new pm(e(),t);return Rx(()=>{n.set(e())}),n}set(e,t){var i,r;if((i=dt(this,ca))==null||i.reject(new Error("Aborted")),t!=null&&t.instant||dt(this,Li).v===void 0)return(r=dt(this,Er))==null||r.abort(),mi(this,Er,null),In(dt(this,Li),In(dt(this,is),e)),mi(this,Qs,e),Promise.resolve();t!=null&&t.preserveMomentum&&(mi(this,eo,0),mi(this,Uc,t.preserveMomentum));var n=mi(this,ca,wS());return n.promise.catch(cs),Q_(this,nh,Kb).call(this,e).then(()=>{n===dt(this,ca)&&n.resolve(void 0)}),n.promise}get current(){return v(dt(this,Li))}get damping(){return v(dt(this,Ks))}set damping(e){In(dt(this,Ks),ql(e,0,1))}get precision(){return v(dt(this,Js))}set precision(e){In(dt(this,Js),e)}get stiffness(){return v(dt(this,Zs))}set stiffness(e){In(dt(this,Zs),ql(e,0,1))}get target(){return v(dt(this,is))}set target(e){this.set(e)}};Zs=new WeakMap,Ks=new WeakMap,Js=new WeakMap,Li=new WeakMap,is=new WeakMap,Qs=new WeakMap,aa=new WeakMap,eo=new WeakMap,Uc=new WeakMap,Er=new WeakMap,ca=new WeakMap,nh=new WeakSet,Kb=function(e){var n;if(In(dt(this,is),e),(n=dt(this,Li)).v??(n.v=e),dt(this,Qs)??mi(this,Qs,dt(this,Li).v),!dt(this,Er)){mi(this,aa,or.now());var t=1e3/(dt(this,Uc)*60);dt(this,Er)??mi(this,Er,$S(i=>{mi(this,eo,Math.min(dt(this,eo)+t,1));const r=Math.min(i-dt(this,aa),1e3/30),o={inv_mass:dt(this,eo),opts:{stiffness:dt(this,Zs).v,damping:dt(this,Ks).v,precision:dt(this,Js).v},settled:!0,dt:r*60/1e3};var a=Yf(o,dt(this,Qs),dt(this,Li).v,dt(this,is).v);return mi(this,Qs,dt(this,Li).v),mi(this,aa,i),In(dt(this,Li),a),o.settled&&mi(this,Er,null),!o.settled}))}return dt(this,Er).promise};let ts=pm;function ql(s,e,t){return Math.max(e,Math.min(t,s))}var tO=ot('<div class="phone-wrapper" style="border-radius:1rem"><iframe title="" width="100%" height="100%" frameborder="0"></iframe></div>'),nO=ot(`<!> <style>.phone-wrapper {
    height: 200px;
    width: 420px;
    border-radius: 63px;
    overflow: hidden;
    border: 1px solid rgba(0, 0, 0, 0.1);
  }</style>`,1),iO=ot("<!> <!> <!> <!>",1),rO=ot("<!> <!> <!> <!>",1),sO=ot("<!> <!> <!>",1),oO=ot("<!> <!>",1),aO=ot("<!> <!>",1),cO=ot("<!> <!>",1),lO=ot("<!> <!>",1),uO=ot("<!> <!>",1),hO=ot("<!> <!>",1),dO=ot("<!> <!> <!> <!> <!> <!>",1),fO=ot("<!> <!>",1),pO=ot("<!> <!>",1),mO=ot("<!> <!>",1),gO=ot("<!> <!>",1),_O=ot("<!> <!>",1),vO=ot("<!> <!>",1),yO=ot("<!> <!> <!> <!> <!> <!>",1),xO=ot("<!> <!>",1),MO=ot("<!> <!>",1),bO=ot("<!> <!>",1),SO=ot("<!> <!>",1),TO=ot("<!> <!>",1),wO=ot("<!> <!>",1),EO=otot("<!> <!>",1),CO=ot("<!> <!> <!>",1),RO=ot("<!> <!>",1),PO=ot("<!> <!>",1),IO=ot("<!> <!>",1),DO=ot("<!> <!>",1),LO=ot("<!> <!>",1),OO=ot("<!> <!> <!> <!> <!> <!> <!> <!>",1),NO=ot("<!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!>",1),UO=ot("<!> <!>",1),FO=ot("<!> <!>",1);function BO(s,e){Fc(e,!0);const[t,n]=Lx(),i=()=>tr(b,"$characterInstance",t),r=()=>tr(C,"$moveduration",t),o=()=>tr(x,"$jumpHeight",t),a=()=>tr(M,"$moveDistance",t),c=()=>tr(E,"$luffyInstance",t),l=()=>tr(Y,"$zoroInstance",t),u=()=>tr(J,"$camera",t),h=()=>tr(_,"$billboardsProps",t);let d=wn(e,"ref",15),f=zc(e,["$$slots","$$events","$$legacy","fallback","error","children","ref","object3D"]);const p=W3("3dmodels/world.glb"),_=mn([{id:1,url:"https://en.wikipedia.org/wiki/Ilia_Topuria",position:[-72.41,7.73,45.12],show:!1,scale:new ts(1)},{id:2,url:"https://en.wikipedia.org/wiki/Paddy_Pimblett",position:[-72.97,6.89,21.66],show:!1,scale:new ts(1)},{id:3,url:"https://en.wikipedia.org/wiki/Merab_Dvalishvili",position:[-73.21,6.89,-1.38],show:!1,scale:new ts(1)},{id:4,url:"https://en.wikipedia.org/wiki/Khamzat_Chimaev",position:[-51.22,6.99,71.4],show:!1,scale:new ts(1)},{id:5,url:"https://en.wikipedia.org/wiki/Islam_Makhachev",position:[-27.69,6.89,73.24],show:!1,scale:new ts(1)},{id:6,url:"https://en.wikipedia.org/wiki/Dricus_du_Plessis",position:[-5.5,6.69,71.68],show:!1,scale:new ts(1)}]);TD();let g=to(!1),m=to(null);sr(()=>{v(m)&&typeof v(m).startRendering=="function"&&v(m).startRendering()});const b=mn(void 0),M=mn(3),x=mn(1);let A=to(!1);const C=mn(.2);function D(Z,ce){if(!i())return;In(A,!0);const me=ru.timeline({onComplete(){In(A,!1)}});me.to(i().position,{x:Z.x,z:Z.z,duration:r()}),me.to(i().rotation,{y:ce,duration:r()},0),me.to(i().position,{y:i().position.y+o(),duration:r()/2,yoyo:!0,repeat:1},0)}function O(Z){if(v(A)||!i())return;const ce=new F().copy(i().position);let me=0;switch(Z.key.toLowerCase()){case"w":case"arrowup":ce.x-=a(),me=0;break;case"s":case"arrowdown":ce.x+=a(),me=Math.PI;break;case"a":case"arrowleft":ce.z+=a(),me=Math.PI/2;break;case"d":case"arrowright":ce.z-=a(),me=-Math.PI/2;break}D(ce,me)}window.addEventListener("keydown",O);function w(Z){_.update(ce=>{const me=ce.map(Ne=>Ne.id===Z?(Ne.show||In(g,!0),{...Ne,show:!Ne.show}):Ne),Te=me.some(Ne=>Ne.show);return In(g,Te,!0),me})}const E=mn(void 0);let z=!0;const $=10.22;function j(){const me=ru.timeline();c()&&z&&(me.to(c().scale,{x:$*1.2,y:$*.8,z:$*1.2,duration:.2*.2,ease:"power2.out"}),me.to(c().scale,{x:$*.8,y:$*1.3,z:$*.8,duration:.2*.3,ease:"power2.out"}),me.to(c().position,{y:c().position.y+5,duration:.2*.5,ease:"power2.out"},"<"),me.to(c().scale,{x:$*1.2,y:$*1.2,z:$*1.2,duration:.2*.3,ease:"power1.inOut"}),me.to(c().position,{y:c().position.y,duration:.2*.5,ease:"bounce.out",onComplete:()=>{z=!0}},">"))}const Y=mn(void 0);let ee=!0;const q=1.31;function se(){const me=ru.timeline();l()&&ee&&(me.to(l().scale,{x:q*1.2,y:q*.8,z:q*1.2,duration:.2*.2,ease:"power2.out"}),me.to(l().scale,{x:q*.8,y:q*1.3,z:q*.8,duration:.2*.3,ease:"power2.out"}),me.to(l().position,{y:l().position.y+5,duration:.2*.5,ease:"power2.out"},"<"),me.to(l().scale,{x:q*1.2,y:q*1.2,z:q*1.2,duration:.2*.3,ease:"power1.inOut"}),me.to(l().position,{y:l().position.y,duration:.2*.5,ease:"bounce.out",onComplete:()=>{ee=!0}},">"))}const{camera:J}=To(),ge=new F(75,40,-75);Vh(()=>{var Z;if((Z=i())!=null&&Z.position){const ce=new F(i().position.x+ge.x,ge.y,i().position.z+ge.z);u().position.copy(ce),u().lookAt(i().position.x,u().position.y-40,i().position.z)}});var xe=FO(),Ae=ze(xe);{var He=Z=>{var ce=nO(),me=ze(ce);{var Te=Ne=>{var Ke=Nt(),Ge=ze(Ke);US(Ge,1,h,gt=>gt.id,(gt,y)=>{var We=Nt(),B=ze(We);{var be=ie=>{Qo(aD(ie,{autoRender:!0,get position(){return v(y).position},children:(re,te)=>{var Se=tO(),ue=Ir(Se);Dr(Se),Zl(()=>df(ue,"src",v(y).url)),Le(re,Se)},$$slots:{default:!0}}),re=>In(m,re,!0),()=>v(m))};Cr(B,ie=>{v(y).show&&ie(be)})}Le(gt,We)}),Le(Ne,Ke)};Cr(me,Ne=>{h()&&Ne(Te)})}ES(2),Le(Z,ce)};Cr(Ae,Z=>{v(g)&&Z(He)})}var lt=N(Ae,2);I(lt,()=>R.Group,(Z,ce)=>{ce(Z,Qf({dispose:!1},()=>f,{get ref(){return d()},set ref(me){d(me)},children:(me,Te)=>{var Ne=UO(),Ke=ze(Ne);OS(Ke,()=>p,gt=>{var y=Nt(),We=ze(y);ls(We,()=>e.fallback??cs),Le(gt,y)},(gt,y)=>{var We=NO(),B=ze(We);I(B,()=>R.Group,(we,pe)=>{pe(we,{position:[-34.03,4.16,69.4],rotation:[-Math.PI/2,-.45,0],scale:1.72,children:(ht,on)=>{var ft=Nt(),At=ze(ft);I(At,()=>R.Group,(Dt,Ut)=>{Ut(Dt,{rotation:[Math.PI/2,0,0],children:(Qe,Ye)=>{var et=sO(),ve=ze(et);I(ve,()=>R.Group,(Mt,An)=>{An(Mt,{position:[0,-.02,0],rotation:[0,-.02,0],children:(Xn,Rt)=>{var yt=iO(),pt=ze(yt);I(pt,()=>R.Mesh,(X,H)=>{H(X,{get geometry(){return v(y).nodes.Object_10.geometry},get material(){return v(y).materials["Material.008"]}})});var kt=N(pt,2);I(kt,()=>R.Mesh,(X,H)=>{H(X,{get geometry(){return v(y).nodes.Object_11.geometry},get material(){return v(y).materials["Material.008"]}})});var L=N(kt,2);I(L,()=>R.Mesh,(X,H)=>{H(X,{get geometry(){return v(y).nodes.Object_12.geometry},get material(){return v(y).materials["Material.008"]}})});var V=N(L,2);I(V,()=>R.Mesh,(X,H)=>{H(X,{get geometry(){return v(y).nodes.Object_9.geometry},get material(){return v(y).materials["Material.008"]}})}),Le(Xn,yt)},$$slots:{default:!0}})});var Ct=N(ve,2);I(Ct,()=>R.Group,(Mt,An)=>{An(Mt,{rotation:[0,-.03,0],children:(Xn,Rt)=>{var yt=rO(),pt=ze(yt);I(pt,()=>R.Mesh,(X,H)=>{H(X,{get geometry(){return v(y).nodes.Object_4.geometry},get material(){return v(y).materials["Material.008"]}})});var kt=N(pt,2);I(kt,()=>R.Mesh,(X,H)=>{H(X,{get geometry(){return v(y).nodes.Object_5.geometry},get material(){return v(y).materials["Material.008"]}})});var L=N(kt,2);I(L,()=>R.Mesh,(X,H)=>{H(X,{get geometry(){return v(y).nodes.Object_6.geometry},get material(){return v(y).materials["Material.008"]}})});var V=N(L,2);I(V,()=>R.Mesh,(X,H)=>{H(X,{get geometry(){return v(y).nodes.Object_7.geometry},get material(){return v(y).materials["Material.008"]}})}),Le(Xn,yt)},$$slots:{default:!0}})});var Lt=N(Ct,2);I(Lt,()=>R.Mesh,(Mt,An)=>{An(Mt,{get geometry(){return v(y).nodes.Object_14.geometry},get material(){return v(y).materials["Material.009"]},position:[0,.06,0],scale:[.7,.76,.7]})}),Le(Qe,et)},$$slots:{default:!0}})}),Le(ht,ft)},$$slots:{default:!0}})});var be=N(B,2);I(be,()=>R.Group,(we,pe)=>{pe(we,{position:[24.89,0,52.77],rotation:[-Math.PI/2,0,-1.08],scale:10.22,onclick:()=>{j(),z=!1},get ref(){return Jh(),c()},set ref(ht){Kh(E,ht)},children:(ht,on)=>{var ft=Nt(),At=ze(ft);I(At,()=>R.Group,(Dt,Ut)=>{Ut(Dt,{rotation:[Math.PI/2,0,0],children:(Qe,Ye)=>{var et=dO(),ve=ze(et);I(ve,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[0,1.14,0],rotation:[0,.13,0],children:(pt,kt)=>{var L=oO(),V=ze(L);I(V,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_13.geometry},get material(){return v(y).materials["material_0.002"]},position:[0,-1.14,0]})});var X=N(V,2);I(X,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_11001.geometry},get material(){return v(y).materials["material_0.002"]},position:[0,-1.14,0]})}),Le(pt,L)},$$slots:{default:!0}})});var Ct=N(ve,2);I(Ct,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[0,1.14,0],rotation:[Math.PI/9,0,-.17],children:(pt,kt)=>{var L=aO(),V=ze(L);I(V,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_8.geometry},get material(){return v(y).materials["material_0.002"]},position:[0,-1.14,0]})});var X=N(V,2);I(X,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_6001.geometry},get material(){return v(y).materials["material_0.002"]},position:[0,-1.14,0]})}),Le(pt,L)},$$slots:{default:!0}})});var Lt=N(Ct,2);I(Lt,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[-.24,1.14,0],rotation:[-3.1,-.01,-.26],children:(pt,kt)=>{var L=cO(),V=ze(L);I(V,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_23.geometry},get material(){return v(y).materials["material_0.002"]},position:[.24,-1.14,0]})});var X=N(V,2);I(X,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_21.geometry},get material(){return v(y).materials["material_0.002"]},position:[.24,-1.14,0]})}),Le(pt,L)},$$slots:{default:!0}})});var Mt=N(Lt,2);I(Mt,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[-.09,.86,-.18],rotation:[.43,-.07,-.16],children:(pt,kt)=>{var L=lO(),V=ze(L);I(V,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_33.geometry},get material(){return v(y).materials["material_0.002"]},position:[.09,-.86,.18]})});var X=N(V,2);I(X,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_31.geometry},get material(){return v(y).materials["material_0.002"]},position:[.09,-.86,.18]})}),Le(pt,L)},$$slots:{default:!0}})});var An=N(Mt,2);I(An,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[.24,1.14,0],rotation:[-2.81,-.16,.65],children:(pt,kt)=>{var L=uO(),V=ze(L);I(V,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_18.geometry},get material(){return v(y).materials["material_0.002"]},position:[-.24,-1.14,0]})});var X=N(V,2);I(X,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_16.geometry},get material(){return v(y).materials["material_0.002"]},position:[-.24,-1.14,0]})}),Le(pt,L)},$$slots:{default:!0}})});var Xn=N(An,2);I(Xn,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[.09,.52,0],rotation:[-.08,-.02,.26],children:(pt,kt)=>{var L=hO(),V=ze(L);I(V,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_28.geometry},get material(){return v(y).materials["material_0.002"]},position:[-.09,-.57,0]})});var X=N(V,2);I(X,()=>R.Mesh,(H,k)=>{k(H,{get geometry(){return v(y).nodes.Object_26.geometry},get material(){return v(y).materials["material_0.002"]},position:[-.09,-.57,0]})}),Le(pt,L)},$$slots:{default:!0}})}),Le(Qe,et)},$$slots:{default:!0}})}),Le(ht,ft)},$$slots:{default:!0}})});var ie=N(be,2);I(ie,()=>R.Group,(we,pe)=>{pe(we,{position:[-62.19,0,56.6],rotation:[-Math.PI/2,0,-.95],scale:1.31,onclick:()=>{se(),ee=!1},get ref(){return Jh(),l()},set ref(ht){Kh(Y,ht)},children:(ht,on)=>{var ft=Nt(),At=ze(ft);I(At,()=>R.Group,(Dt,Ut)=>{Ut(Dt,{rotation:[Math.PI/2,0,0],children:(Qe,Ye)=>{var et=yO(),ve=ze(et);I(ve,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[0,1.5,0],children:(pt,kt)=>{var L=fO(),V=ze(L);I(V,()=>R.Group,(H,k)=>{k(H,{position:[0,-1.5,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_13001.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.01,-.08,.1],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})});var X=N(V,2);I(X,()=>R.Group,(H,k)=>{k(H,{position:[0,-1.5,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_11002.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.01,-.08,.1],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})}),Le(pt,L)},$$slots:{default:!0}})});var Ct=N(ve,2);I(Ct,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[0,1.5,0],rotation:[.11,-.09,.01],children:(pt,kt)=>{var L=pO(),V=ze(L);I(V,()=>R.Group,(H,k)=>{k(H,{position:[0,-1.5,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_8001.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.01,-.12,-.85],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})});var X=N(V,2);I(X,()=>R.Group,(H,k)=>{k(H,{position:[0,-1.5,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_6002.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.01,-.12,-.85],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})}),Le(pt,L)},$$slots:{default:!0}})});var Lt=N(Ct,2);I(Lt,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[-.31,1.38,0],rotation:[-.21,0,0],children:(pt,kt)=>{var L=mO(),V=ze(L);I(V,()=>R.Group,(H,k)=>{k(H,{position:[.31,-1.38,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_23001.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.01,-.28,1.82],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})});var X=N(V,2);I(X,()=>R.Group,(H,k)=>{k(H,{position:[.31,-1.38,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_21001.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.01,-.28,1.82],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})}),Le(pt,L)},$$slots:{default:!0}})});var Mt=N(Lt,2);I(Mt,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[-.12,.75,0],rotation:[.17,-.01,-.03],children:(pt,kt)=>{var L=gO(),V=ze(L);I(V,()=>R.Group,(H,k)=>{k(H,{position:[.12,-.75,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_33001.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.17,-.16,-.68],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})});var X=N(V,2);I(X,()=>R.Group,(H,k)=>{k(H,{position:[.12,-.75,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_31001.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.17,-.16,-.68],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})}),Le(pt,L)},$$slots:{default:!0}})});var An=N(Mt,2);I(An,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[.31,1.38,0],rotation:[.17,0,0],children:(pt,kt)=>{var L=_O(),V=ze(L);I(V,()=>R.Group,(H,k)=>{k(H,{position:[-.31,-1.37,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_18001.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.01,-.19,-1.34],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})});var X=N(V,2);I(X,()=>R.Group,(H,k)=>{k(H,{position:[-.31,-1.37,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_16001.geometry},get material(){return v(y).materials["material_0.003"]},position:[-.01,-.19,-1.34],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})}),Le(pt,L)},$$slots:{default:!0}})});var Xn=N(An,2);I(Xn,()=>R.Group,(Rt,yt)=>{yt(Rt,{position:[.12,.75,0],rotation:[-.19,-.01,.03],children:(pt,kt)=>{var L=vO(),V=ze(L);I(V,()=>R.Group,(H,k)=>{k(H,{position:[-.12,-.75,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_28001.geometry},get material(){return v(y).materials["material_0.003"]},position:[.14,-.21,.94],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})});var X=N(V,2);I(X,()=>R.Group,(H,k)=>{k(H,{position:[-.12,-.75,0],children:(ae,ye)=>{var fe=Nt(),_e=ze(fe);I(_e,()=>R.Mesh,(Fe,Oe)=>{Oe(Fe,{get geometry(){return v(y).nodes.Object_26001.geometry},get material(){return v(y).materials["material_0.003"]},position:[.14,-.21,.94],scale:7.07})}),Le(ae,fe)},$$slots:{default:!0}})}),Le(pt,L)},$$slots:{default:!0}})}),Le(Qe,et)},$$slots:{default:!0}})}),Le(ht,ft)},$$slots:{default:!0}})});var re=N(ie,2);I(re,()=>R.Group,(we,pe)=>{pe(we,{position:[-71.48,12.95,18.88],rotation:[-Math.PI/2,0,-Math.PI/2],scale:2.11,children:(ht,on)=>{var ft=Nt(),At=ze(ft);I(At,()=>R.Group,(Dt,Ut)=>{Ut(Dt,{rotation:[Math.PI/2,0,0],children:(Qe,Ye)=>{var et=EO(),ve=ze(et);I(ve,()=>R.Group,(S,T)=>{T(S,{rotation:[-.09,-.2,-.03],children:(Vi,La)=>{var Rn=xO(),Pn=ze(Rn);I(Pn,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_36.geometry},get material(){return v(y).materials["Piel.001"]}})});var Hi=N(Pn,2);I(Hi,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_38.geometry},get material(){return v(y).materials["Outline.001"]}})}),Le(Vi,Rn)},$$slots:{default:!0}})});var Ct=N(ve,2);I(Ct,()=>R.Group,(S,T)=>{T(S,{rotation:[-.15,.28,.19],children:(Vi,La)=>{var Rn=MO(),Pn=ze(Rn);I(Pn,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_40.geometry},get material(){return v(y).materials["Piel.001"]}})});var Hi=N(Pn,2);I(Hi,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_42.geometry},get material(){return v(y).materials["Outline.001"]}})}),Le(Vi,Rn)},$$slots:{default:!0}})});var Lt=N(Ct,2);I(Lt,()=>R.Group,(S,T)=>{T(S,{rotation:[.94,.19,-1.57],children:(Vi,La)=>{var Rn=bO(),Pn=ze(Rn);I(Pn,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_44.geometry},get material(){return v(y).materials["Piel.001"]}})});var Hi=N(Pn,2);I(Hi,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_46.geometry},get material(){return v(y).materials["Outline.001"]}})}),Le(Vi,Rn)},$$slots:{default:!0}})});var Mt=N(Lt,2);I(Mt,()=>R.Group,(S,T)=>{T(S,{rotation:[1.13,.25,-1.66],scale:[1.6,.84,1.06],children:(Vi,La)=>{var Rn=SO(),Pn=ze(Rn);I(Pn,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_32.geometry},get material(){return v(y).materials["Piel.001"]}})});var Hi=N(Pn,2);I(Hi,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_34.geometry},get material(){return v(y).materials["Outline.001"]},position:[-.57,.52,-.72]})}),Le(Vi,Rn)},$$slots:{default:!0}})});var An=N(Mt,2);I(An,()=>R.Group,(S,T)=>{T(S,{rotation:[.56,1.25,-1.45],children:(Vi,La)=>{var Rn=TO(),Pn=ze(Rn);I(Pn,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_4001.geometry},get material(){return v(y).materials["Piel.001"]}})});var Hi=N(Pn,2);I(Hi,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_6003.geometry},get material(){return v(y).materials["Outline.001"]}})}),Le(Vi,Rn)},$$slots:{default:!0}})});var Xn=N(An,2);I(Xn,()=>R.Group,(S,T)=>{T(S,{rotation:[-.37,0,0],children:(Vi,La)=>{var Rn=wO(),Pn=ze(Rn);I(Pn,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_56.geometry},get material(){return v(y).materials["Pelo.001"]}})});var Hi=N(Pn,2);I(Hi,()=>R.Mesh,($t,qt)=>{qt($t,{get geometry(){return v(y).nodes.Object_57.geometry},get material(){return v(y).materials["Outline_pelo.001"]}})}),Le(Vi,Rn)},$$slots:{default:!0}})});var Rt=N(Xn,2);I(Rt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_491.geometry},get material(){return v(y).materials["Outline.001"]},scale:[0,.01,0]})});var yt=N(Rt,2);I(yt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_485.geometry},get material(){return v(y).materials["Aretes.001"]},scale:[0,.01,0]})});var pt=N(yt,2);I(pt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_487.geometry},get material(){return v(y).materials["Aretes.001"]},scale:[0,.01,0]})});var kt=N(pt,2);I(kt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_489.geometry},get material(){return v(y).materials["Aretes.001"]},scale:[0,.01,0]})});var L=N(kt,2);I(L,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_26002.geometry},get material(){return v(y).materials["Outline.001"]},position:[0,1.64,.48],rotation:[-.37,0,0]})});var V=N(L,2);I(V,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_24.geometry},get material(){return v(y).materials["Piel_0.001"]},rotation:[-.37,0,0]})});var X=N(V,2);I(X,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_12001.geometry},get material(){return v(y).materials["Polera.001"]},rotation:[-Math.PI/2,Math.PI/2,0],scale:[.09,.12,.09]})});var H=N(X,2);I(H,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_22.geometry},get material(){return v(y).materials["Outline_faja.001"]},rotation:[-Math.PI/2,Math.PI/2,0],scale:[.09,.12,.09]})});var k=N(H,2);I(k,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_30.geometry},get material(){return v(y).materials["Piel.001"]},rotation:[0,0,-.32],scale:[1,1,1.27]})});var ae=N(k,2);I(ae,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_50.geometry},get material(){return v(y).materials["Outline.001"]},position:[.31,1.31,.64],rotation:[0,0,-.32],scale:[1,1,1.27]})});var ye=N(ae,2);I(ye,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_10001.geometry},get material(){return v(y).materials["Outline.001"]},position:[.13,1.1,.29],rotation:[.69,.25,2.69],scale:-1})});var fe=N(ye,2);I(fe,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_8002.geometry},get material(){return v(y).materials["Piel.001"]},rotation:[.69,.25,2.69],scale:-1})});var _e=N(fe,2);I(_e,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_54.geometry},get material(){return v(y).materials["Outline.001"]},position:[-.1,1.6,.55],rotation:[.43,-.34,-1.17],scale:.04})});var Fe=N(_e,2);I(Fe,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_52.geometry},get material(){return v(y).materials["Piel.001"]},rotation:[.43,-.34,-1.17],scale:.04})});var Oe=N(Fe,2);I(Oe,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_18002.geometry},get material(){return v(y).materials["Outline_pantalones.001"]},position:[0,.16,.51],rotation:[-Math.PI/2,Math.PI/2,0],scale:.12})});var qe=N(Oe,2);I(qe,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_14001.geometry},get material(){return v(y).materials["Polera.001"]},rotation:[-Math.PI/2,Math.PI/2,0],scale:.12})});var xt=N(qe,2);I(xt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_61.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0],scale:.71})});var Pt=N(xt,2);I(Pt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_451.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.4,-.18,-1.85],scale:.56})});var jt=N(Pt,2);I(jt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_453.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.4,-.18,-1.85],scale:.56})});var Vt=N(jt,2);I(Vt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_63.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0],scale:.78})});var bt=N(Vt,2);I(bt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_65.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0],scale:.78})});var Ze=N(bt,2);I(Ze,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_455.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.4,-.18,-1.85],scale:.56})});var ln=N(Ze,2);I(ln,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_457.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.06,-.21,-1.37],scale:.56})});var It=N(ln,2);I(It,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_459.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var ti=N(It,2);I(ti,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_67.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0]})});var gr=N(ti,2);I(gr,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_69.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0]})});var Ln=N(gr,2);I(Ln,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_71.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0]})});var Gr=N(Ln,2);I(Gr,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_73.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0]})});var Bt=N(Gr,2);I(Bt,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_461.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var jn=N(Bt,2);I(jn,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_75.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,.05],scale:.11})});var $n=N(jn,2);I($n,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_463.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var bn=N($n,2);I(bn,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_465.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var Cn=N(bn,2);I(Cn,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_467.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var Eo=N(Cn,2);I(Eo,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_469.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var Ji=N(Eo,2);I(Ji,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_471.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var mm=N(Ji,2);I(mm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_473.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var gm=N(mm,2);I(gm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_475.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var _m=N(gm,2);I(_m,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_77.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.06,-.64,-.32],scale:.77})});var vm=N(_m,2);I(vm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_79.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.03,-.95,-.63],scale:.89})});var ym=N(vm,2);I(ym,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_81.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.3,-.95,-.63],scale:.97})});var xm=N(ym,2);I(xm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_83.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.3,-.95,-.63]})});var Mm=N(xm,2);I(Mm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_85.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.26,-.95,-.63]})});var bm=N(Mm,2);I(bm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_87.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.7,-1.39,.87]})});var Sm=N(bm,2);I(Sm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_89.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.26,-.95,-.63]})});var Tm=N(Sm,2);I(Tm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_91.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.26,-.95,-.63]})});var wm=N(Tm,2);I(wm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_93.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var Em=N(wm,2);I(Em,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_95.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var Am=N(Em,2);I(Am,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_97.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.17,-.68,-.46]})});var Cm=N(Am,2);I(Cm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_99.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.13,-.78,-.51]})});var Rm=N(Cm,2);I(Rm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_101.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var Pm=N(Rm,2);I(Pm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_103.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var Im=N(Pm,2);I(Im,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_105.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.03,-.66,-.39]})});var Dm=N(Im,2);I(Dm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_107.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.03,-.66,-.39]})});var Lm=N(Dm,2);I(Lm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_109.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.04,0,.08],scale:.14})});var Om=N(Lm,2);I(Om,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_477.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var Nm=N(Om,2);I(Nm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_111.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.03,0,.16],scale:.52})});var Um=N(Nm,2);I(Um,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_479.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var Fm=N(Um,2);I(Fm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_481.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var Bm=N(Fm,2);I(Bm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_483.geometry},get material(){return v(y).materials["Outline_pelo.001"]},position:[-.12,1.61,.36],rotation:[-.05,0,.02],scale:.01})});var zm=N(Bm,2);I(zm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_113.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.16,.53,.26]})});var km=N(zm,2);I(km,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_115.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.16,.53,.27]})});var Vm=N(km,2);I(Vm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_117.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.16,.53,.27]})});var Hm=N(Vm,2);I(Hm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_119.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.16,.53,.25]})});var Gm=N(Hm,2);I(Gm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_121.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.15,.53,.25]})});var Wm=N(Gm,2);I(Wm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_123.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.15,.53,.24]})});var Xm=N(Wm,2);I(Xm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_125.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.15,.53,.24]})});var jm=N(Xm,2);I(jm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_127.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.16,.41,-.37]})});var $m=N(jm,2);I($m,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_129.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.15,.41,-.33]})});var qm=N($m,2);I(qm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_131.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.17,.4,-.4]})});var Ym=N(qm,2);I(Ym,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_133.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.16,.41,-.35]})});var Zm=N(Ym,2);I(Zm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_135.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.41,.32,-.78]})});var Km=N(Zm,2);I(Km,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_137.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.3,-.82],scale:.91})});var Jm=N(Km,2);I(Jm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_139.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.27,-.89]})});var Qm=N(Jm,2);I(Qm,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_141.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.25,-.93]})});var eg=N(Qm,2);I(eg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_143.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.28,-.88],scale:.72})});var tg=N(eg,2);I(tg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_145.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.49,.02,-1.52]})});var ng=N(tg,2);I(ng,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_147.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.49,.02,-1.53]})});var ig=N(ng,2);I(ig,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_149.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.49,.02,-1.53],scale:.94})});var rg=N(ig,2);I(rg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_151.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.17,-.19,-1.75],scale:.56})});var sg=N(rg,2);I(sg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_153.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.36,.08,-1.66],scale:.69})});var og=N(sg,2);I(og,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_155.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.36,.08,-1.66],scale:.71})});var ag=N(og,2);I(ag,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_157.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.16,-.04,-1.83]})});var cg=N(ag,2);I(cg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_159.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.17,.07,-1.46]})});var lg=N(cg,2);I(lg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_161.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.16,-.04,-1.83]})});var ug=N(lg,2);I(ug,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_163.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.16,-.04,-1.83]})});var hg=N(ug,2);I(hg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_165.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.16,-.04,-1.83]})});var dg=N(hg,2);I(dg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_167.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.36,.07,-1.14]})});var fg=N(dg,2);I(fg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_169.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.35,.06,-1.11]})});var pg=N(fg,2);I(pg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_171.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.03,0,.17],scale:.48})});var mg=N(pg,2);I(mg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_173.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.31,-.81]})});var gg=N(mg,2);I(gg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_175.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.29,-.85]})});var _g=N(gg,2);I(_g,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_177.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.3,-.83]})});var vg=N(_g,2);I(vg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_179.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.31,-.82]})});var yg=N(vg,2);I(yg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_181.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.31,-.82]})});var xg=N(yg,2);I(xg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_183.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.3,-.83]})});var Mg=N(xg,2);I(Mg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_185.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.28,-.87]})});var bg=N(Mg,2);I(bg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_187.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.28,-.87]})});var Sg=N(bg,2);I(Sg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_189.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.29,-.85]})});var Tg=N(Sg,2);I(Tg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_191.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.29,-.86]})});var wg=N(Tg,2);I(wg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_193.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.3,-.84]})});var Eg=N(wg,2);I(Eg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_195.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.3,-.84]})});var Ag=N(Eg,2);I(Ag,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_197.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.28,-.88]})});var Cg=N(Ag,2);I(Cg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_199.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.28,-.88]})});var Rg=N(Cg,2);I(Rg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_201.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.42,.29,-.86]})});var Pg=N(Rg,2);I(Pg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_203.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.27,-.9]})});var Ig=N(Pg,2);I(Ig,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_205.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.25,-.93]})});var Dg=N(Ig,2);I(Dg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_207.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.25,-.93]})});var Lg=N(Dg,2);I(Lg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_209.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.25,-.93]})});var Og=N(Lg,2);I(Og,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_211.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.25,-.93]})});var Ng=N(Og,2);I(Ng,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_213.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.25,-.93]})});var Ug=N(Ng,2);I(Ug,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_215.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.25,-.93]})});var Fg=N(Ug,2);I(Fg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_217.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.25,-.93]})});var Bg=N(Fg,2);I(Bg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_219.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.25,-.93]})});var zg=N(Bg,2);I(zg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_221.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.82,.75,-2.08]})});var kg=N(zg,2);I(kg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_223.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.22,-.2,-1.51]})});var Vg=N(kg,2);I(Vg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_225.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.19,-.22,-1.55]})});var Hg=N(Vg,2);I(Hg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_227.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.82,.75,-2.08]})});var Gg=N(Hg,2);I(Gg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_229.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.82,.75,-2.08]})});var Wg=N(Gg,2);I(Wg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_231.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.82,.75,-2.08]})});var Xg=N(Wg,2);I(Xg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_233.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.66,.55,-1.82]})});var jg=N(Xg,2);I(jg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_235.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.13,.82,-.81]})});var $g=N(jg,2);I($g,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_237.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.15,.82,-.84]})});var qg=N($g,2);I(qg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_239.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.15,.82,-.84]})});var Yg=N(qg,2);I(Yg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_241.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[2.24,1.39,-2.99]})});var Zg=N(Yg,2);I(Zg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_243.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var Kg=N(Zg,2);I(Kg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_245.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var Jg=N(Kg,2);I(Jg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_247.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var Qg=N(Jg,2);I(Qg,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_249.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.99,1.03,-2.31]})});var e0=N(Qg,2);I(e0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_251.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.53,-.98]})});var t0=N(e0,2);I(t0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_253.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.8,-.22,-.7]})});var n0=N(t0,2);I(n0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_255.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.57,-.3,.37]})});var i0=N(n0,2);I(i0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_257.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.57,-.3,.37]})});var r0=N(i0,2);I(r0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_259.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.57,-.3,.37]})});var s0=N(r0,2);I(s0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_261.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.69,-.3,-.04]})});var o0=N(s0,2);I(o0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_263.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.69,-.3,-.04]})});var a0=N(o0,2);I(a0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_265.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.69,-.3,-.04]})});var c0=N(a0,2);I(c0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_267.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.69,-.3,-.04]})});var l0=N(c0,2);I(l0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_269.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var u0=N(l0,2);I(u0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_271.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var h0=N(u0,2);I(h0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_273.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var d0=N(h0,2);I(d0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_275.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var f0=N(d0,2);I(f0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_277.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var p0=N(f0,2);I(p0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_279.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var m0=N(p0,2);I(m0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_281.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var g0=N(m0,2);I(g0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_283.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var _0=N(g0,2);I(_0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_285.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var v0=N(_0,2);I(v0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_287.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var y0=N(v0,2);I(y0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_289.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var x0=N(y0,2);I(x0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_291.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var M0=N(x0,2);I(M0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_293.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.49,-.05]})});var b0=N(M0,2);I(b0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_295.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.52,-.05]})});var S0=N(b0,2);I(S0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_297.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.5,-.05]})});var T0=N(S0,2);I(T0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_299.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.51,-.05]})});var w0=N(T0,2);I(w0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_301.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.16,.68,-.53]})});var E0=N(w0,2);I(E0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_303.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var A0=N(E0,2);I(A0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_305.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var C0=N(A0,2);I(C0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_307.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var R0=N(C0,2);I(R0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_309.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var P0=N(R0,2);I(P0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_311.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var I0=N(P0,2);I(I0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_313.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var D0=N(I0,2);I(D0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_315.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var L0=N(D0,2);I(L0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_317.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var O0=N(L0,2);I(O0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_319.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var N0=N(O0,2);I(N0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_321.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var U0=N(N0,2);I(U0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_323.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var F0=N(U0,2);I(F0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_325.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[1.19,1.18,-2.34]})});var B0=N(F0,2);I(B0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_327.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.69,-.3,-.04]})});var z0=N(B0,2);I(z0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_329.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.69,-.3,-.04]})});var k0=N(z0,2);I(k0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_331.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.51,-.05]})});var V0=N(k0,2);I(V0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_333.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.92,-.41,-1.03]})});var H0=N(V0,2);I(H0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_335.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.45,-.51,-.05]})});var G0=N(H0,2);I(G0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_337.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.28,-.88]})});var W0=N(G0,2);I(W0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_339.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.43,.27,-.89]})});var X0=N(W0,2);I(X0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_341.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.49,.02,-1.52]})});var j0=N(X0,2);I(j0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_343.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.49,.02,-1.53]})});var $0=N(j0,2);I($0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_345.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.49,.02,-1.53]})});var q0=N($0,2);I(q0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_347.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var Y0=N(q0,2);I(Y0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_349.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var Z0=N(Y0,2);I(Z0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_351.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var K0=N(Z0,2);I(K0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_353.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var J0=N(K0,2);I(J0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_355.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var Q0=N(J0,2);I(Q0,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_357.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var e_=N(Q0,2);I(e_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_359.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var t_=N(e_,2);I(t_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_361.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63]})});var n_=N(t_,2);I(n_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_363.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63],scale:1.31})});var i_=N(n_,2);I(i_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_365.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63],scale:1.31})});var r_=N(i_,2);I(r_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_367.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63],scale:1.31})});var s_=N(r_,2);I(s_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_369.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63],scale:1.31})});var o_=N(s_,2);I(o_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_371.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63],scale:1.31})});var a_=N(o_,2);I(a_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_373.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63],scale:1.31})});var c_=N(a_,2);I(c_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_375.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63],scale:1.31})});var l_=N(c_,2);I(l_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_377.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63],scale:1.31})});var u_=N(l_,2);I(u_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_379.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.51,-.95,-.63],scale:1.31})});var h_=N(u_,2);I(h_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_381.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var d_=N(h_,2);I(d_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_383.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var f_=N(d_,2);I(f_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_385.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var p_=N(f_,2);I(p_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_387.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var m_=N(p_,2);I(m_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_389.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var g_=N(m_,2);I(g_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_391.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var __=N(g_,2);I(__,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_393.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var v_=N(__,2);I(v_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_395.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var y_=N(v_,2);I(y_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_397.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var x_=N(y_,2);I(x_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_399.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.92,-.77,-.56],scale:1.31})});var M_=N(x_,2);I(M_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_401.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.21,-.74,-.98],scale:1.31})});var b_=N(M_,2);I(b_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_403.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.49,.02,-1.53],scale:.94})});var S_=N(b_,2);I(S_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_405.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.49,.02,-1.53],scale:.94})});var T_=N(S_,2);I(T_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_407.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0],scale:.78})});var w_=N(T_,2);I(w_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_409.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0],scale:.78})});var E_=N(w_,2);I(E_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_411.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0],scale:.78})});var A_=N(E_,2);I(A_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_413.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0],scale:.78})});var C_=N(A_,2);I(C_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_415.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.98,-1.18,.32],scale:.78})});var R_=N(C_,2);I(R_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_417.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.98,-1.18,.32],scale:.78})});var P_=N(R_,2);I(P_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_419.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-1.98,-1.18,.32],scale:.78})});var I_=N(P_,2);I(I_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_421.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[2.43,-.17,-2.01],scale:.78})});var D_=N(I_,2);I(D_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_423.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[2.43,-.17,-2.01],scale:.78})});var L_=N(D_,2);I(L_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_425.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[2.43,-.17,-2.01],scale:.78})});var O_=N(L_,2);I(O_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_427.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[2.43,-.17,-2.01],scale:.78})});var N_=N(O_,2);I(N_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_429.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[2.43,-.17,-2.01],scale:.78})});var U_=N(N_,2);I(U_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_431.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var F_=N(U_,2);I(F_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_433.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var B_=N(F_,2);I(B_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_435.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var z_=N(B_,2);I(z_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_437.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var k_=N(z_,2);I(k_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_439.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var V_=N(k_,2);I(V_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_441.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.4,.35,-.73],scale:.99})});var H_=N(V_,2);I(H_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_443.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.22,.34,-1.59],scale:.72})});var G_=N(H_,2);I(G_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_445.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.25,-.04,-1.8]})});var W_=N(G_,2);I(W_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_447.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.49,.02,-1.52]})});var X_=N(W_,2);I(X_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_449.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[.71,.1,-1.42]})});var j_=N(X_,2);I(j_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_59.geometry},get material(){return v(y).materials["Pelo_0.001"]},rotation:[-.05,0,0]})});var $_=N(j_,2);I($_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_495.geometry},get material(){return v(y).materials["Outline.001"]},position:[.07,1.26,.39],rotation:[-.94,-.74,.16],scale:.05})});var q_=N($_,2);I(q_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_493.geometry},get material(){return v(y).materials["Polera.001"]},rotation:[-.94,-.74,.16],scale:.05})});var Y_=N(q_,2);I(Y_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_48.geometry},get material(){return v(y).materials["Outline.001"]}})});var Z_=N(Y_,2);I(Z_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_28002.geometry},get material(){return v(y).materials["Piel.001"]}})});var K_=N(Z_,2);I(K_,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_20.geometry},get material(){return v(y).materials["Outline_pantalones.001"]}})});var Jb=N(K_,2);I(Jb,()=>R.Mesh,(S,T)=>{T(S,{get geometry(){return v(y).nodes.Object_16002.geometry},get material(){return v(y).materials["Zapatos.001"]}})}),Le(Qe,et)},$$slots:{default:!0}})}),Le(ht,ft)},$$slots:{default:!0}})});var te=N(re,2);I(te,()=>R.Group,(we,pe)=>{pe(we,{position:[-21.68,1.86,16.91],rotation:[-Math.PI/2,0,0],scale:[.02,.02,.03],children:(ht,on)=>{var ft=Nt(),At=ze(ft);I(At,()=>R.Group,(Dt,Ut)=>{Ut(Dt,{rotation:[Math.PI/2,0,0],children:(Qe,Ye)=>{var et=Nt(),ve=ze(et);I(ve,()=>R.Group,(Ct,Lt)=>{Lt(Ct,{position:[-8.87,0,16.5],rotation:[-Math.PI/2,0,Math.PI],scale:[1,1,.11],children:(Mt,An)=>{var Xn=AO(),Rt=ze(Xn);I(Rt,()=>R.Mesh,(pt,kt)=>{kt(pt,{get geometry(){return v(y).nodes["Octagon_02_-_Default_0"].geometry},get material(){return v(y).materials["02_-_Default.001"]}})});var yt=N(Rt,2);I(yt,()=>R.Mesh,(pt,kt)=>{kt(pt,{get geometry(){return v(y).nodes["Octagon_03_-_Default_0"].geometry},get material(){return v(y).materials["03_-_Default"]}})}),Le(Mt,Xn)},$$slots:{default:!0}})}),Le(Qe,et)},$$slots:{default:!0}})}),Le(ht,ft)},$$slots:{default:!0}})});var Se=N(te,2);I(Se,()=>R.Group,(we,pe)=>{pe(we,{position:[-72.41,7.73,45.12],children:(ht,on)=>{var ft=CO(),At=ze(ft);const Dt=Fn(()=>{var Ye,et;return(et=(Ye=h()[0])==null?void 0:Ye.scale)==null?void 0:et.current});I(At,()=>R.Mesh,(Ye,et)=>{et(Ye,{get geometry(){return v(y).nodes.Cube024.geometry},get material(){return v(y).materials.billboards},get scale(){return v(Dt)},onpointerenter:()=>{_.update(ve=>ve.map(Ct=>Ct.id===1&&Ct.scale?{...Ct,scale:(Ct.scale.set(1.2),Ct.scale)}:Ct)),document.body.style.cursor="pointer"},onpointerleave:()=>{_.update(ve=>ve.map(Ct=>(Ct.id===1&&Ct.scale&&Ct.scale.set(1),Ct))),document.body.style.cursor="auto"},onclick:()=>w(1),castShadow:!0,receiveShadow:!0})});var Ut=N(At,2);I(Ut,()=>R.Mesh,(Ye,et)=>{et(Ye,{get geometry(){return v(y).nodes.Cube024_1.geometry},get material(){return v(y).materials["pr 1"]},castShadow:!0,receiveShadow:!0})});var Qe=N(Ut,2);I(Qe,()=>R.Mesh,(Ye,et)=>{et(Ye,{get geometry(){return v(y).nodes.Cube024_1.geometry},get material(){return v(y).materials["pr 1"]}})}),Le(ht,ft)},$$slots:{default:!0}})});var ue=N(Se,2);I(ue,()=>R.Group,(we,pe)=>{pe(we,{position:[-27.69,6.89,73.24],rotation:[0,-1.2,0],children:(ht,on)=>{var ft=RO(),At=ze(ft);const Dt=Fn(()=>{var Qe,Ye;return(Ye=(Qe=h()[4])==null?void 0:Qe.scale)==null?void 0:Ye.current});I(At,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube001.geometry},get material(){return v(y).materials.billboards},get scale(){return v(Dt)},onpointerenter:()=>{_.update(et=>et.map(ve=>ve.id===5&&ve.scale?{...ve,scale:(ve.scale.set(1.2),ve.scale)}:ve)),document.body.style.cursor="pointer"},onpointerleave:()=>{_.update(et=>et.map(ve=>(ve.id===5&&ve.scale&&ve.scale.set(1),ve))),document.body.style.cursor="auto"},onclick:()=>w(5)})});var Ut=N(At,2);I(Ut,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube001_1.geometry},get material(){return v(y).materials["pr 1.002"]}})}),Le(ht,ft)},$$slots:{default:!0}})});var U=N(ue,2);I(U,()=>R.Group,(we,pe)=>{pe(we,{position:[-73.21,6.89,-1.38],children:(ht,on)=>{var ft=PO(),At=ze(ft);const Dt=Fn(()=>{var Qe,Ye;return(Ye=(Qe=h()[2])==null?void 0:Qe.scale)==null?void 0:Ye.current});I(At,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube004.geometry},get material(){return v(y).materials.billboards},get scale(){return v(Dt)},onpointerenter:()=>{_.update(et=>et.map(ve=>ve.id===3&&ve.scale?{...ve,scale:(ve.scale.set(1.2),ve.scale)}:ve)),document.body.style.cursor="pointer"},onpointerleave:()=>{_.update(et=>et.map(ve=>(ve.id===3&&ve.scale&&ve.scale.set(1),ve))),document.body.style.cursor="auto"},onclick:()=>w(3)})});var Ut=N(At,2);I(Ut,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube004_1.geometry},get material(){return v(y).materials["pr 1.003"]}})}),Le(ht,ft)},$$slots:{default:!0}})});var P=N(U,2);I(P,()=>R.Group,(we,pe)=>{pe(we,{position:[-72.97,6.89,21.66],children:(ht,on)=>{var ft=IO(),At=ze(ft);const Dt=Fn(()=>{var Qe,Ye;return(Ye=(Qe=h()[1])==null?void 0:Qe.scale)==null?void 0:Ye.current});I(At,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube002.geometry},get material(){return v(y).materials.billboards},get scale(){return v(Dt)},onpointerenter:()=>{_.update(et=>et.map(ve=>ve.id===2&&ve.scale?{...ve,scale:(ve.scale.set(1.2),ve.scale)}:ve)),document.body.style.cursor="pointer"},onpointerleave:()=>{_.update(et=>et.map(ve=>(ve.id===2&&ve.scale&&ve.scale.set(1),ve))),document.body.style.cursor="auto"},onclick:()=>w(2)})});var Ut=N(At,2);I(Ut,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube002_1.geometry},get material(){return v(y).materials["pr 1.005"]}})}),Le(ht,ft)},$$slots:{default:!0}})});var W=N(P,2);I(W,()=>R.Group,(we,pe)=>{pe(we,{position:[-5.5,6.69,71.68],rotation:[0,-1.21,0],scale:1.09,children:(ht,on)=>{var ft=DO(),At=ze(ft);const Dt=Fn(()=>{var Qe,Ye;return(Ye=(Qe=h()[5])==null?void 0:Qe.scale)==null?void 0:Ye.current});I(At,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube003.geometry},get material(){return v(y).materials.billboards},get scale(){return v(Dt)},onpointerenter:()=>{_.update(et=>et.map(ve=>ve.id===6&&ve.scale?{...ve,scale:(ve.scale.set(1.2),ve.scale)}:ve)),document.body.style.cursor="pointer"},onpointerleave:()=>{_.update(et=>et.map(ve=>(ve.id===6&&ve.scale&&ve.scale.set(1),ve))),document.body.style.cursor="auto"},onclick:()=>w(6)})});var Ut=N(At,2);I(Ut,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube003_1.geometry},get material(){return v(y).materials["pr 1.004"]}})}),Le(ht,ft)},$$slots:{default:!0}})});var K=N(W,2);I(K,()=>R.Group,(we,pe)=>{pe(we,{position:[-51.22,6.99,71.4],rotation:[0,-1.16,0],children:(ht,on)=>{var ft=LO(),At=ze(ft);const Dt=Fn(()=>{var Qe,Ye;return(Ye=(Qe=h()[3])==null?void 0:Qe.scale)==null?void 0:Ye.current});I(At,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube005.geometry},get material(){return v(y).materials.billboards},get scale(){return v(Dt)},onpointerenter:()=>{_.update(et=>et.map(ve=>ve.id===4&&ve.scale?{...ve,scale:(ve.scale.set(1.2),ve.scale)}:ve)),document.body.style.cursor="pointer"},onpointerleave:()=>{_.update(et=>et.map(ve=>(ve.id===4&&ve.scale&&ve.scale.set(1),ve))),document.body.style.cursor="auto"},onclick:()=>w(4)})});var Ut=N(At,2);I(Ut,()=>R.Mesh,(Qe,Ye)=>{Ye(Qe,{get geometry(){return v(y).nodes.Cube005_1.geometry},get material(){return v(y).materials["pr 1.001"]}})}),Le(ht,ft)},$$slots:{default:!0}})});var oe=N(K,2);I(oe,()=>R.Group,(we,pe)=>{pe(we,{position:[20,5.22,-86.02],get ref(){return Jh(),i()},set ref(ht){Kh(b,ht)},children:(ht,on)=>{var ft=OO(),At=ze(ft);I(At,()=>R.Mesh,(Lt,Mt)=>{Mt(Lt,{get geometry(){return v(y).nodes.Cube008.geometry},get material(){return v(y).materials.shoes}})});var Dt=N(At,2);I(Dt,()=>R.Mesh,(Lt,Mt)=>{Mt(Lt,{get geometry(){return v(y).nodes.Cube008_1.geometry},get material(){return v(y).materials.skin}})});var Ut=N(Dt,2);I(Ut,()=>R.Mesh,(Lt,Mt)=>{Mt(Lt,{get geometry(){return v(y).nodes.Cube008_2.geometry},get material(){return v(y).materials["shirt blue"]}})});var Qe=N(Ut,2);I(Qe,()=>R.Mesh,(Lt,Mt)=>{Mt(Lt,{get geometry(){return v(y).nodes.Cube008_3.geometry},get material(){return v(y).materials["dress red"]}})});var Ye=N(Qe,2);I(Ye,()=>R.Mesh,(Lt,Mt)=>{Mt(Lt,{get geometry(){return v(y).nodes.Cube008_4.geometry},get material(){return v(y).materials.jeans}})});var et=N(Ye,2);I(et,()=>R.Mesh,(Lt,Mt)=>{Mt(Lt,{get geometry(){return v(y).nodes.Cube008_5.geometry},get material(){return v(y).materials.hair}})});var ve=N(et,2);I(ve,()=>R.Mesh,(Lt,Mt)=>{Mt(Lt,{get geometry(){return v(y).nodes.Cube008_6.geometry},get material(){return v(y).materials.belt}})});var Ct=N(ve,2);I(Ct,()=>R.Mesh,(Lt,Mt)=>{Mt(Lt,{get geometry(){return v(y).nodes.Cube008_7.geometry},get material(){return v(y).materials.eyes}})}),Le(ht,ft)},$$slots:{default:!0}})});var Q=N(oe,2);I(Q,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139.geometry},get material(){return v(y).materials["grass floor"]}})});var Be=N(Q,2);I(Be,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_1.geometry},get material(){return v(y).materials.floor}})});var Me=N(Be,2);I(Me,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_2.geometry},get material(){return v(y).materials.street}})});var Ve=N(Me,2);I(Ve,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_3.geometry},get material(){return v(y).materials.car}})});var Xe=N(Ve,2);I(Xe,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_4.geometry},get material(){return v(y).materials["dress red"]}})});var he=N(Xe,2);I(he,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_5.geometry},get material(){return v(y).materials.ram}})});var Pe=N(he,2);I(Pe,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_6.geometry},get material(){return v(y).materials["blue tree"]}})});var $e=N(Pe,2);I($e,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_7.geometry},get material(){return v(y).materials["center flower"]}})});var Je=N($e,2);I(Je,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_8.geometry},get material(){return v(y).materials["leafs flower"]}})});var Re=N(Je,2);I(Re,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_9.geometry},get material(){return v(y).materials["roots flower"]}})});var at=N(Re,2);I(at,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_10.geometry},get material(){return v(y).materials.grass}})});var nt=N(at,2);I(nt,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_11.geometry},get material(){return v(y).materials.rock}})});var Et=N(nt,2);I(Et,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_12.geometry},get material(){return v(y).materials["billboards.001"]}})});var G=N(Et,2);I(G,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_13.geometry},get material(){return v(y).nodes.Plane139_13.material}})});var Ie=N(G,2);I(Ie,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_14.geometry},get material(){return v(y).materials["dark billboard"]}})});var ne=N(Ie,2);I(ne,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_15.geometry},get material(){return v(y).materials["ligth sine"]}})});var de=N(ne,2);I(de,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_16.geometry},get material(){return v(y).materials["bottom tree"]}})});var Ue=N(de,2);I(Ue,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_17.geometry},get material(){return v(y).materials["dark blue "]}})});var De=N(Ue,2);I(De,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_18.geometry},get material(){return v(y).materials["leafes tree"]}})});var it=N(De,2);I(it,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_19.geometry},get material(){return v(y).materials["dark leafes tree"]}})});var Ht=N(it,2);I(Ht,()=>R.Mesh,(we,pe)=>{pe(we,{get geometry(){return v(y).nodes.Plane139_20.geometry},get material(){return v(y).materials.text}})}),Le(gt,We)},(gt,y)=>{var We=Nt(),B=ze(We);ls(B,()=>e.error??cs,()=>({error:v(y)})),Le(gt,We)});var Ge=N(Ke,2);ls(Ge,()=>e.children??cs,()=>({ref:d()})),Le(me,Ne)},$$slots:{default:!0}}))}),Le(s,xe),Bc(),n()}var zO=ot("<!> <!> <!> <!>",1);function kO(s,e){Fc(e,!1);const t={width:window.innerWidth,height:window.innerHeight},{renderer:n}=To();Vh(()=>{});function i(){t.width=window.innerWidth,t.height=window.innerHeight}n.setSize(t.width,t.height),n.setPixelRatio(Math.min(window.devicePixelRatio,2)),n.shadowMap.enabled=!0,n.shadowMap.type=ea,n.toneMapping=tp,n.toneMappingExposure=1.5,window.addEventListener("resize",i),nS();var r=zO(),o=ze(r);BO(o,{});var a=N(o,2);R.OrthographicCamera(a,{makeDefault:!0,position:[32,21,-84],zoom:10,top:50,bottom:-50,near:1,far:1e3});var c=N(a,2);R.AmbientLight(c,{intensity:1.5});var l=N(c,2);{const u=(h,d)=>{};R.DirectionalLight(l,{castShadow:!0,position:[0,80,0],"target.position":[-15,0,0],"shadow.camera.left":-135,"shadow.camera.right":135,"shadow.camera.top":135,"shadow.camera.bottom":-135,"shadow.normalBias":.2,"shadow.mapSize.width":4096,"shadow.mapSize.height":4096,"shadow.radius":"4",children:u,$$slots:{default:!0}})}Le(s,r),Bc()}var VO=ot('<main><div class="svelte-14hphmv"><!></div></main>');function KO(s){var e=VO(),t=Ir(e),n=Ir(t);BI(n,{children:(i,r)=>{kO(i,{})},$$slots:{default:!0}}),Dr(t),Dr(e),Le(s,e)}export{KO as component};
