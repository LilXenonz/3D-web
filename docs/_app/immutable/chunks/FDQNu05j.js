import{R as a,k as y,S as x,r as z,T as h,j as A,i as p,U as S}from"./BFp-1yn2.js";function w(e,n,t){if(e==null)return n(void 0),t&&t(void 0),a;const r=y(()=>e.subscribe(n,t));return r.unsubscribe?()=>r.unsubscribe():r}const f=[];function j(e,n){return{subscribe:B(e,n).subscribe}}function B(e,n=a){let t=null;const r=new Set;function c(u){if(x(e,u)&&(e=u,t)){const o=!f.length;for(const s of r)s[1](),f.push(s,e);if(o){for(let s=0;s<f.length;s+=2)f[s][0](f[s+1]);f.length=0}}}function l(u){c(u(e))}function b(u,o=a){const s=[u,o];return r.add(s),r.size===1&&(t=n(c,l)||a),u(e),()=>{r.delete(s),r.size===0&&t&&(t(),t=null)}}return{set:c,update:l,subscribe:b}}function R(e,n,t){const r=!Array.isArray(e),c=r?[e]:e;if(!c.every(Boolean))throw new Error("derived() expects stores as input, got a falsy value");const l=n.length<2;return j(t,(b,u)=>{let o=!1;const s=[];let d=0,_=a;const m=()=>{if(d)return;_();const i=n(r?s[0]:s,b,u);l?b(i):_=typeof i=="function"?i:a},k=c.map((i,g)=>w(i,q=>{s[g]=q,d&=~(1<<g),o&&m()},()=>{d|=1<<g}));return o=!0,m(),function(){z(k),_(),o=!1}})}function T(e){let n;return w(e,t=>n=t)(),n}function D(e){p===null&&h(),S&&p.l!==null?E(p).m.push(e):A(()=>{const n=y(e);if(typeof n=="function")return n})}function U(e){p===null&&h(),D(()=>()=>y(e))}function E(e){var n=e.l;return n.u??(n.u={a:[],b:[],m:[]})}export{U as a,R as d,T as g,D as o,j as r,w as s,B as w};
